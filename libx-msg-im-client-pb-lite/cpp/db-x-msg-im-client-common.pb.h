// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: db-x-msg-im-client-common.proto

#ifndef PROTOBUF_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto__INCLUDED
#define PROTOBUF_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[7];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsXmsgImClientDbCrudReqImpl();
void InitDefaultsXmsgImClientDbCrudReq();
void InitDefaultsXmsgImClientDbCrudRsp_ColumnEntry_DoNotUseImpl();
void InitDefaultsXmsgImClientDbCrudRsp_ColumnEntry_DoNotUse();
void InitDefaultsXmsgImClientDbCrudRspImpl();
void InitDefaultsXmsgImClientDbCrudRsp();
void InitDefaultsXmsgImClientDbRowImpl();
void InitDefaultsXmsgImClientDbRow();
void InitDefaultsXmsgImClientDbFiledImpl();
void InitDefaultsXmsgImClientDbFiled();
void InitDefaultsXmsgImClientKv_KvEntry_DoNotUseImpl();
void InitDefaultsXmsgImClientKv_KvEntry_DoNotUse();
void InitDefaultsXmsgImClientKvImpl();
void InitDefaultsXmsgImClientKv();
inline void InitDefaults() {
  InitDefaultsXmsgImClientDbCrudReq();
  InitDefaultsXmsgImClientDbCrudRsp_ColumnEntry_DoNotUse();
  InitDefaultsXmsgImClientDbCrudRsp();
  InitDefaultsXmsgImClientDbRow();
  InitDefaultsXmsgImClientDbFiled();
  InitDefaultsXmsgImClientKv_KvEntry_DoNotUse();
  InitDefaultsXmsgImClientKv();
}
}  // namespace protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto
class XmsgImClientDbCrudReq;
class XmsgImClientDbCrudReqDefaultTypeInternal;
extern XmsgImClientDbCrudReqDefaultTypeInternal _XmsgImClientDbCrudReq_default_instance_;
class XmsgImClientDbCrudRsp;
class XmsgImClientDbCrudRspDefaultTypeInternal;
extern XmsgImClientDbCrudRspDefaultTypeInternal _XmsgImClientDbCrudRsp_default_instance_;
class XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse;
class XmsgImClientDbCrudRsp_ColumnEntry_DoNotUseDefaultTypeInternal;
extern XmsgImClientDbCrudRsp_ColumnEntry_DoNotUseDefaultTypeInternal _XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse_default_instance_;
class XmsgImClientDbFiled;
class XmsgImClientDbFiledDefaultTypeInternal;
extern XmsgImClientDbFiledDefaultTypeInternal _XmsgImClientDbFiled_default_instance_;
class XmsgImClientDbRow;
class XmsgImClientDbRowDefaultTypeInternal;
extern XmsgImClientDbRowDefaultTypeInternal _XmsgImClientDbRow_default_instance_;
class XmsgImClientKv;
class XmsgImClientKvDefaultTypeInternal;
extern XmsgImClientKvDefaultTypeInternal _XmsgImClientKv_default_instance_;
class XmsgImClientKv_KvEntry_DoNotUse;
class XmsgImClientKv_KvEntry_DoNotUseDefaultTypeInternal;
extern XmsgImClientKv_KvEntry_DoNotUseDefaultTypeInternal _XmsgImClientKv_KvEntry_DoNotUse_default_instance_;

enum XmsgImClientDbFiledType {
  X_MSG_IM_CLIENT_DB_FILED_TYPE_BIGINT = 0,
  X_MSG_IM_CLIENT_DB_FILED_TYPE_TEXT = 1,
  X_MSG_IM_CLIENT_DB_FILED_TYPE_BLOB = 2,
  X_MSG_IM_CLIENT_DB_FILED_TYPE_NULL = 3,
  XmsgImClientDbFiledType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  XmsgImClientDbFiledType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool XmsgImClientDbFiledType_IsValid(int value);
const XmsgImClientDbFiledType XmsgImClientDbFiledType_MIN = X_MSG_IM_CLIENT_DB_FILED_TYPE_BIGINT;
const XmsgImClientDbFiledType XmsgImClientDbFiledType_MAX = X_MSG_IM_CLIENT_DB_FILED_TYPE_NULL;
const int XmsgImClientDbFiledType_ARRAYSIZE = XmsgImClientDbFiledType_MAX + 1;

const ::google::protobuf::EnumDescriptor* XmsgImClientDbFiledType_descriptor();
inline const ::std::string& XmsgImClientDbFiledType_Name(XmsgImClientDbFiledType value) {
  return ::google::protobuf::internal::NameOfEnum(
    XmsgImClientDbFiledType_descriptor(), value);
}
inline bool XmsgImClientDbFiledType_Parse(
    const ::std::string& name, XmsgImClientDbFiledType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<XmsgImClientDbFiledType>(
    XmsgImClientDbFiledType_descriptor(), name, value);
}
// ===================================================================

class XmsgImClientDbCrudReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImClientDbCrudReq) */ {
 public:
  XmsgImClientDbCrudReq();
  virtual ~XmsgImClientDbCrudReq();

  XmsgImClientDbCrudReq(const XmsgImClientDbCrudReq& from);

  inline XmsgImClientDbCrudReq& operator=(const XmsgImClientDbCrudReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImClientDbCrudReq(XmsgImClientDbCrudReq&& from) noexcept
    : XmsgImClientDbCrudReq() {
    *this = ::std::move(from);
  }

  inline XmsgImClientDbCrudReq& operator=(XmsgImClientDbCrudReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImClientDbCrudReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImClientDbCrudReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImClientDbCrudReq*>(
               &_XmsgImClientDbCrudReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(XmsgImClientDbCrudReq* other);
  friend void swap(XmsgImClientDbCrudReq& a, XmsgImClientDbCrudReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImClientDbCrudReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImClientDbCrudReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImClientDbCrudReq& from);
  void MergeFrom(const XmsgImClientDbCrudReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImClientDbCrudReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .XmsgImClientDbRow row = 2;
  int row_size() const;
  void clear_row();
  static const int kRowFieldNumber = 2;
  const ::XmsgImClientDbRow& row(int index) const;
  ::XmsgImClientDbRow* mutable_row(int index);
  ::XmsgImClientDbRow* add_row();
  ::google::protobuf::RepeatedPtrField< ::XmsgImClientDbRow >*
      mutable_row();
  const ::google::protobuf::RepeatedPtrField< ::XmsgImClientDbRow >&
      row() const;

  // string sql = 1;
  void clear_sql();
  static const int kSqlFieldNumber = 1;
  const ::std::string& sql() const;
  void set_sql(const ::std::string& value);
  #if LANG_CXX11
  void set_sql(::std::string&& value);
  #endif
  void set_sql(const char* value);
  void set_sql(const char* value, size_t size);
  ::std::string* mutable_sql();
  ::std::string* release_sql();
  void set_allocated_sql(::std::string* sql);

  // @@protoc_insertion_point(class_scope:XmsgImClientDbCrudReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::XmsgImClientDbRow > row_;
  ::google::protobuf::internal::ArenaStringPtr sql_;
  mutable int _cached_size_;
  friend struct ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::TableStruct;
  friend void ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::InitDefaultsXmsgImClientDbCrudReqImpl();
};
// -------------------------------------------------------------------

class XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse, 
    ::std::string, ::google::protobuf::uint32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse, 
    ::std::string, ::google::protobuf::uint32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    0 > SuperType;
  XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse();
  XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse& other);
  static const XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse*>(&_XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImClientDbCrudRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImClientDbCrudRsp) */ {
 public:
  XmsgImClientDbCrudRsp();
  virtual ~XmsgImClientDbCrudRsp();

  XmsgImClientDbCrudRsp(const XmsgImClientDbCrudRsp& from);

  inline XmsgImClientDbCrudRsp& operator=(const XmsgImClientDbCrudRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImClientDbCrudRsp(XmsgImClientDbCrudRsp&& from) noexcept
    : XmsgImClientDbCrudRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImClientDbCrudRsp& operator=(XmsgImClientDbCrudRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImClientDbCrudRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImClientDbCrudRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImClientDbCrudRsp*>(
               &_XmsgImClientDbCrudRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(XmsgImClientDbCrudRsp* other);
  friend void swap(XmsgImClientDbCrudRsp& a, XmsgImClientDbCrudRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImClientDbCrudRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImClientDbCrudRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImClientDbCrudRsp& from);
  void MergeFrom(const XmsgImClientDbCrudRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImClientDbCrudRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, uint32> column = 2;
  int column_size() const;
  void clear_column();
  static const int kColumnFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >&
      column() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >*
      mutable_column();

  // repeated .XmsgImClientDbRow row = 4;
  int row_size() const;
  void clear_row();
  static const int kRowFieldNumber = 4;
  const ::XmsgImClientDbRow& row(int index) const;
  ::XmsgImClientDbRow* mutable_row(int index);
  ::XmsgImClientDbRow* add_row();
  ::google::protobuf::RepeatedPtrField< ::XmsgImClientDbRow >*
      mutable_row();
  const ::google::protobuf::RepeatedPtrField< ::XmsgImClientDbRow >&
      row() const;

  // uint32 change = 1;
  void clear_change();
  static const int kChangeFieldNumber = 1;
  ::google::protobuf::uint32 change() const;
  void set_change(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:XmsgImClientDbCrudRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse,
      ::std::string, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > column_;
  ::google::protobuf::RepeatedPtrField< ::XmsgImClientDbRow > row_;
  ::google::protobuf::uint32 change_;
  mutable int _cached_size_;
  friend struct ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::TableStruct;
  friend void ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::InitDefaultsXmsgImClientDbCrudRspImpl();
};
// -------------------------------------------------------------------

class XmsgImClientDbRow : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImClientDbRow) */ {
 public:
  XmsgImClientDbRow();
  virtual ~XmsgImClientDbRow();

  XmsgImClientDbRow(const XmsgImClientDbRow& from);

  inline XmsgImClientDbRow& operator=(const XmsgImClientDbRow& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImClientDbRow(XmsgImClientDbRow&& from) noexcept
    : XmsgImClientDbRow() {
    *this = ::std::move(from);
  }

  inline XmsgImClientDbRow& operator=(XmsgImClientDbRow&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImClientDbRow& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImClientDbRow* internal_default_instance() {
    return reinterpret_cast<const XmsgImClientDbRow*>(
               &_XmsgImClientDbRow_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(XmsgImClientDbRow* other);
  friend void swap(XmsgImClientDbRow& a, XmsgImClientDbRow& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImClientDbRow* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImClientDbRow* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImClientDbRow& from);
  void MergeFrom(const XmsgImClientDbRow& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImClientDbRow* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .XmsgImClientDbFiled col = 1;
  int col_size() const;
  void clear_col();
  static const int kColFieldNumber = 1;
  const ::XmsgImClientDbFiled& col(int index) const;
  ::XmsgImClientDbFiled* mutable_col(int index);
  ::XmsgImClientDbFiled* add_col();
  ::google::protobuf::RepeatedPtrField< ::XmsgImClientDbFiled >*
      mutable_col();
  const ::google::protobuf::RepeatedPtrField< ::XmsgImClientDbFiled >&
      col() const;

  // @@protoc_insertion_point(class_scope:XmsgImClientDbRow)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::XmsgImClientDbFiled > col_;
  mutable int _cached_size_;
  friend struct ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::TableStruct;
  friend void ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::InitDefaultsXmsgImClientDbRowImpl();
};
// -------------------------------------------------------------------

class XmsgImClientDbFiled : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImClientDbFiled) */ {
 public:
  XmsgImClientDbFiled();
  virtual ~XmsgImClientDbFiled();

  XmsgImClientDbFiled(const XmsgImClientDbFiled& from);

  inline XmsgImClientDbFiled& operator=(const XmsgImClientDbFiled& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImClientDbFiled(XmsgImClientDbFiled&& from) noexcept
    : XmsgImClientDbFiled() {
    *this = ::std::move(from);
  }

  inline XmsgImClientDbFiled& operator=(XmsgImClientDbFiled&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImClientDbFiled& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImClientDbFiled* internal_default_instance() {
    return reinterpret_cast<const XmsgImClientDbFiled*>(
               &_XmsgImClientDbFiled_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(XmsgImClientDbFiled* other);
  friend void swap(XmsgImClientDbFiled& a, XmsgImClientDbFiled& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImClientDbFiled* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImClientDbFiled* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImClientDbFiled& from);
  void MergeFrom(const XmsgImClientDbFiled& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImClientDbFiled* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string valText = 3;
  void clear_valtext();
  static const int kValTextFieldNumber = 3;
  const ::std::string& valtext() const;
  void set_valtext(const ::std::string& value);
  #if LANG_CXX11
  void set_valtext(::std::string&& value);
  #endif
  void set_valtext(const char* value);
  void set_valtext(const char* value, size_t size);
  ::std::string* mutable_valtext();
  ::std::string* release_valtext();
  void set_allocated_valtext(::std::string* valtext);

  // bytes valBlob = 4;
  void clear_valblob();
  static const int kValBlobFieldNumber = 4;
  const ::std::string& valblob() const;
  void set_valblob(const ::std::string& value);
  #if LANG_CXX11
  void set_valblob(::std::string&& value);
  #endif
  void set_valblob(const char* value);
  void set_valblob(const void* value, size_t size);
  ::std::string* mutable_valblob();
  ::std::string* release_valblob();
  void set_allocated_valblob(::std::string* valblob);

  // uint64 valInt = 2;
  void clear_valint();
  static const int kValIntFieldNumber = 2;
  ::google::protobuf::uint64 valint() const;
  void set_valint(::google::protobuf::uint64 value);

  // .XmsgImClientDbFiledType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::XmsgImClientDbFiledType type() const;
  void set_type(::XmsgImClientDbFiledType value);

  // @@protoc_insertion_point(class_scope:XmsgImClientDbFiled)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr valtext_;
  ::google::protobuf::internal::ArenaStringPtr valblob_;
  ::google::protobuf::uint64 valint_;
  int type_;
  mutable int _cached_size_;
  friend struct ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::TableStruct;
  friend void ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::InitDefaultsXmsgImClientDbFiledImpl();
};
// -------------------------------------------------------------------

class XmsgImClientKv_KvEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImClientKv_KvEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImClientKv_KvEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImClientKv_KvEntry_DoNotUse();
  XmsgImClientKv_KvEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImClientKv_KvEntry_DoNotUse& other);
  static const XmsgImClientKv_KvEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImClientKv_KvEntry_DoNotUse*>(&_XmsgImClientKv_KvEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImClientKv : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImClientKv) */ {
 public:
  XmsgImClientKv();
  virtual ~XmsgImClientKv();

  XmsgImClientKv(const XmsgImClientKv& from);

  inline XmsgImClientKv& operator=(const XmsgImClientKv& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImClientKv(XmsgImClientKv&& from) noexcept
    : XmsgImClientKv() {
    *this = ::std::move(from);
  }

  inline XmsgImClientKv& operator=(XmsgImClientKv&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImClientKv& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImClientKv* internal_default_instance() {
    return reinterpret_cast<const XmsgImClientKv*>(
               &_XmsgImClientKv_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(XmsgImClientKv* other);
  friend void swap(XmsgImClientKv& a, XmsgImClientKv& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImClientKv* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImClientKv* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImClientKv& from);
  void MergeFrom(const XmsgImClientKv& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImClientKv* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> kv = 1;
  int kv_size() const;
  void clear_kv();
  static const int kKvFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      kv() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_kv();

  // @@protoc_insertion_point(class_scope:XmsgImClientKv)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImClientKv_KvEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > kv_;
  mutable int _cached_size_;
  friend struct ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::TableStruct;
  friend void ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::InitDefaultsXmsgImClientKvImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// XmsgImClientDbCrudReq

// string sql = 1;
inline void XmsgImClientDbCrudReq::clear_sql() {
  sql_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImClientDbCrudReq::sql() const {
  // @@protoc_insertion_point(field_get:XmsgImClientDbCrudReq.sql)
  return sql_.GetNoArena();
}
inline void XmsgImClientDbCrudReq::set_sql(const ::std::string& value) {
  
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImClientDbCrudReq.sql)
}
#if LANG_CXX11
inline void XmsgImClientDbCrudReq::set_sql(::std::string&& value) {
  
  sql_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImClientDbCrudReq.sql)
}
#endif
inline void XmsgImClientDbCrudReq::set_sql(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImClientDbCrudReq.sql)
}
inline void XmsgImClientDbCrudReq::set_sql(const char* value, size_t size) {
  
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImClientDbCrudReq.sql)
}
inline ::std::string* XmsgImClientDbCrudReq::mutable_sql() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImClientDbCrudReq.sql)
  return sql_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImClientDbCrudReq::release_sql() {
  // @@protoc_insertion_point(field_release:XmsgImClientDbCrudReq.sql)
  
  return sql_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImClientDbCrudReq::set_allocated_sql(::std::string* sql) {
  if (sql != NULL) {
    
  } else {
    
  }
  sql_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sql);
  // @@protoc_insertion_point(field_set_allocated:XmsgImClientDbCrudReq.sql)
}

// repeated .XmsgImClientDbRow row = 2;
inline int XmsgImClientDbCrudReq::row_size() const {
  return row_.size();
}
inline void XmsgImClientDbCrudReq::clear_row() {
  row_.Clear();
}
inline const ::XmsgImClientDbRow& XmsgImClientDbCrudReq::row(int index) const {
  // @@protoc_insertion_point(field_get:XmsgImClientDbCrudReq.row)
  return row_.Get(index);
}
inline ::XmsgImClientDbRow* XmsgImClientDbCrudReq::mutable_row(int index) {
  // @@protoc_insertion_point(field_mutable:XmsgImClientDbCrudReq.row)
  return row_.Mutable(index);
}
inline ::XmsgImClientDbRow* XmsgImClientDbCrudReq::add_row() {
  // @@protoc_insertion_point(field_add:XmsgImClientDbCrudReq.row)
  return row_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::XmsgImClientDbRow >*
XmsgImClientDbCrudReq::mutable_row() {
  // @@protoc_insertion_point(field_mutable_list:XmsgImClientDbCrudReq.row)
  return &row_;
}
inline const ::google::protobuf::RepeatedPtrField< ::XmsgImClientDbRow >&
XmsgImClientDbCrudReq::row() const {
  // @@protoc_insertion_point(field_list:XmsgImClientDbCrudReq.row)
  return row_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImClientDbCrudRsp

// uint32 change = 1;
inline void XmsgImClientDbCrudRsp::clear_change() {
  change_ = 0u;
}
inline ::google::protobuf::uint32 XmsgImClientDbCrudRsp::change() const {
  // @@protoc_insertion_point(field_get:XmsgImClientDbCrudRsp.change)
  return change_;
}
inline void XmsgImClientDbCrudRsp::set_change(::google::protobuf::uint32 value) {
  
  change_ = value;
  // @@protoc_insertion_point(field_set:XmsgImClientDbCrudRsp.change)
}

// map<string, uint32> column = 2;
inline int XmsgImClientDbCrudRsp::column_size() const {
  return column_.size();
}
inline void XmsgImClientDbCrudRsp::clear_column() {
  column_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >&
XmsgImClientDbCrudRsp::column() const {
  // @@protoc_insertion_point(field_map:XmsgImClientDbCrudRsp.column)
  return column_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >*
XmsgImClientDbCrudRsp::mutable_column() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImClientDbCrudRsp.column)
  return column_.MutableMap();
}

// repeated .XmsgImClientDbRow row = 4;
inline int XmsgImClientDbCrudRsp::row_size() const {
  return row_.size();
}
inline void XmsgImClientDbCrudRsp::clear_row() {
  row_.Clear();
}
inline const ::XmsgImClientDbRow& XmsgImClientDbCrudRsp::row(int index) const {
  // @@protoc_insertion_point(field_get:XmsgImClientDbCrudRsp.row)
  return row_.Get(index);
}
inline ::XmsgImClientDbRow* XmsgImClientDbCrudRsp::mutable_row(int index) {
  // @@protoc_insertion_point(field_mutable:XmsgImClientDbCrudRsp.row)
  return row_.Mutable(index);
}
inline ::XmsgImClientDbRow* XmsgImClientDbCrudRsp::add_row() {
  // @@protoc_insertion_point(field_add:XmsgImClientDbCrudRsp.row)
  return row_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::XmsgImClientDbRow >*
XmsgImClientDbCrudRsp::mutable_row() {
  // @@protoc_insertion_point(field_mutable_list:XmsgImClientDbCrudRsp.row)
  return &row_;
}
inline const ::google::protobuf::RepeatedPtrField< ::XmsgImClientDbRow >&
XmsgImClientDbCrudRsp::row() const {
  // @@protoc_insertion_point(field_list:XmsgImClientDbCrudRsp.row)
  return row_;
}

// -------------------------------------------------------------------

// XmsgImClientDbRow

// repeated .XmsgImClientDbFiled col = 1;
inline int XmsgImClientDbRow::col_size() const {
  return col_.size();
}
inline void XmsgImClientDbRow::clear_col() {
  col_.Clear();
}
inline const ::XmsgImClientDbFiled& XmsgImClientDbRow::col(int index) const {
  // @@protoc_insertion_point(field_get:XmsgImClientDbRow.col)
  return col_.Get(index);
}
inline ::XmsgImClientDbFiled* XmsgImClientDbRow::mutable_col(int index) {
  // @@protoc_insertion_point(field_mutable:XmsgImClientDbRow.col)
  return col_.Mutable(index);
}
inline ::XmsgImClientDbFiled* XmsgImClientDbRow::add_col() {
  // @@protoc_insertion_point(field_add:XmsgImClientDbRow.col)
  return col_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::XmsgImClientDbFiled >*
XmsgImClientDbRow::mutable_col() {
  // @@protoc_insertion_point(field_mutable_list:XmsgImClientDbRow.col)
  return &col_;
}
inline const ::google::protobuf::RepeatedPtrField< ::XmsgImClientDbFiled >&
XmsgImClientDbRow::col() const {
  // @@protoc_insertion_point(field_list:XmsgImClientDbRow.col)
  return col_;
}

// -------------------------------------------------------------------

// XmsgImClientDbFiled

// .XmsgImClientDbFiledType type = 1;
inline void XmsgImClientDbFiled::clear_type() {
  type_ = 0;
}
inline ::XmsgImClientDbFiledType XmsgImClientDbFiled::type() const {
  // @@protoc_insertion_point(field_get:XmsgImClientDbFiled.type)
  return static_cast< ::XmsgImClientDbFiledType >(type_);
}
inline void XmsgImClientDbFiled::set_type(::XmsgImClientDbFiledType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:XmsgImClientDbFiled.type)
}

// uint64 valInt = 2;
inline void XmsgImClientDbFiled::clear_valint() {
  valint_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImClientDbFiled::valint() const {
  // @@protoc_insertion_point(field_get:XmsgImClientDbFiled.valInt)
  return valint_;
}
inline void XmsgImClientDbFiled::set_valint(::google::protobuf::uint64 value) {
  
  valint_ = value;
  // @@protoc_insertion_point(field_set:XmsgImClientDbFiled.valInt)
}

// string valText = 3;
inline void XmsgImClientDbFiled::clear_valtext() {
  valtext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImClientDbFiled::valtext() const {
  // @@protoc_insertion_point(field_get:XmsgImClientDbFiled.valText)
  return valtext_.GetNoArena();
}
inline void XmsgImClientDbFiled::set_valtext(const ::std::string& value) {
  
  valtext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImClientDbFiled.valText)
}
#if LANG_CXX11
inline void XmsgImClientDbFiled::set_valtext(::std::string&& value) {
  
  valtext_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImClientDbFiled.valText)
}
#endif
inline void XmsgImClientDbFiled::set_valtext(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  valtext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImClientDbFiled.valText)
}
inline void XmsgImClientDbFiled::set_valtext(const char* value, size_t size) {
  
  valtext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImClientDbFiled.valText)
}
inline ::std::string* XmsgImClientDbFiled::mutable_valtext() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImClientDbFiled.valText)
  return valtext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImClientDbFiled::release_valtext() {
  // @@protoc_insertion_point(field_release:XmsgImClientDbFiled.valText)
  
  return valtext_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImClientDbFiled::set_allocated_valtext(::std::string* valtext) {
  if (valtext != NULL) {
    
  } else {
    
  }
  valtext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), valtext);
  // @@protoc_insertion_point(field_set_allocated:XmsgImClientDbFiled.valText)
}

// bytes valBlob = 4;
inline void XmsgImClientDbFiled::clear_valblob() {
  valblob_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImClientDbFiled::valblob() const {
  // @@protoc_insertion_point(field_get:XmsgImClientDbFiled.valBlob)
  return valblob_.GetNoArena();
}
inline void XmsgImClientDbFiled::set_valblob(const ::std::string& value) {
  
  valblob_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImClientDbFiled.valBlob)
}
#if LANG_CXX11
inline void XmsgImClientDbFiled::set_valblob(::std::string&& value) {
  
  valblob_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImClientDbFiled.valBlob)
}
#endif
inline void XmsgImClientDbFiled::set_valblob(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  valblob_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImClientDbFiled.valBlob)
}
inline void XmsgImClientDbFiled::set_valblob(const void* value, size_t size) {
  
  valblob_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImClientDbFiled.valBlob)
}
inline ::std::string* XmsgImClientDbFiled::mutable_valblob() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImClientDbFiled.valBlob)
  return valblob_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImClientDbFiled::release_valblob() {
  // @@protoc_insertion_point(field_release:XmsgImClientDbFiled.valBlob)
  
  return valblob_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImClientDbFiled::set_allocated_valblob(::std::string* valblob) {
  if (valblob != NULL) {
    
  } else {
    
  }
  valblob_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), valblob);
  // @@protoc_insertion_point(field_set_allocated:XmsgImClientDbFiled.valBlob)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImClientKv

// map<string, string> kv = 1;
inline int XmsgImClientKv::kv_size() const {
  return kv_.size();
}
inline void XmsgImClientKv::clear_kv() {
  kv_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImClientKv::kv() const {
  // @@protoc_insertion_point(field_map:XmsgImClientKv.kv)
  return kv_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImClientKv::mutable_kv() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImClientKv.kv)
  return kv_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::XmsgImClientDbFiledType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::XmsgImClientDbFiledType>() {
  return ::XmsgImClientDbFiledType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto__INCLUDED
