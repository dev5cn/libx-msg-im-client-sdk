// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: db-x-msg-im-client-common.proto

#include "db-x-msg-im-client-common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class XmsgImClientDbCrudReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImClientDbCrudReq>
      _instance;
} _XmsgImClientDbCrudReq_default_instance_;
class XmsgImClientDbCrudRsp_ColumnEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse>
      _instance;
} _XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse_default_instance_;
class XmsgImClientDbCrudRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImClientDbCrudRsp>
      _instance;
} _XmsgImClientDbCrudRsp_default_instance_;
class XmsgImClientDbRowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImClientDbRow>
      _instance;
} _XmsgImClientDbRow_default_instance_;
class XmsgImClientDbFiledDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImClientDbFiled>
      _instance;
} _XmsgImClientDbFiled_default_instance_;
class XmsgImClientKv_KvEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImClientKv_KvEntry_DoNotUse>
      _instance;
} _XmsgImClientKv_KvEntry_DoNotUse_default_instance_;
class XmsgImClientKvDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImClientKv>
      _instance;
} _XmsgImClientKv_default_instance_;
namespace protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto {
void InitDefaultsXmsgImClientDbCrudReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::InitDefaultsXmsgImClientDbRow();
  {
    void* ptr = &::_XmsgImClientDbCrudReq_default_instance_;
    new (ptr) ::XmsgImClientDbCrudReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImClientDbCrudReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImClientDbCrudReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImClientDbCrudReqImpl);
}

void InitDefaultsXmsgImClientDbCrudRsp_ColumnEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse();
  }
  ::XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImClientDbCrudRsp_ColumnEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImClientDbCrudRsp_ColumnEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImClientDbCrudRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::InitDefaultsXmsgImClientDbCrudRsp_ColumnEntry_DoNotUse();
  protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::InitDefaultsXmsgImClientDbRow();
  {
    void* ptr = &::_XmsgImClientDbCrudRsp_default_instance_;
    new (ptr) ::XmsgImClientDbCrudRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImClientDbCrudRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImClientDbCrudRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImClientDbCrudRspImpl);
}

void InitDefaultsXmsgImClientDbRowImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::InitDefaultsXmsgImClientDbFiled();
  {
    void* ptr = &::_XmsgImClientDbRow_default_instance_;
    new (ptr) ::XmsgImClientDbRow();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImClientDbRow::InitAsDefaultInstance();
}

void InitDefaultsXmsgImClientDbRow() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImClientDbRowImpl);
}

void InitDefaultsXmsgImClientDbFiledImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImClientDbFiled_default_instance_;
    new (ptr) ::XmsgImClientDbFiled();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImClientDbFiled::InitAsDefaultInstance();
}

void InitDefaultsXmsgImClientDbFiled() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImClientDbFiledImpl);
}

void InitDefaultsXmsgImClientKv_KvEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImClientKv_KvEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImClientKv_KvEntry_DoNotUse();
  }
  ::XmsgImClientKv_KvEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImClientKv_KvEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImClientKv_KvEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImClientKvImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::InitDefaultsXmsgImClientKv_KvEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImClientKv_default_instance_;
    new (ptr) ::XmsgImClientKv();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImClientKv::InitAsDefaultInstance();
}

void InitDefaultsXmsgImClientKv() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImClientKvImpl);
}

::google::protobuf::Metadata file_level_metadata[7];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImClientDbCrudReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImClientDbCrudReq, sql_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImClientDbCrudReq, row_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImClientDbCrudRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImClientDbCrudRsp, change_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImClientDbCrudRsp, column_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImClientDbCrudRsp, row_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImClientDbRow, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImClientDbRow, col_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImClientDbFiled, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImClientDbFiled, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImClientDbFiled, valint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImClientDbFiled, valtext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImClientDbFiled, valblob_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImClientKv_KvEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImClientKv_KvEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImClientKv_KvEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImClientKv_KvEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImClientKv, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImClientKv, kv_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::XmsgImClientDbCrudReq)},
  { 7, 14, sizeof(::XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse)},
  { 16, -1, sizeof(::XmsgImClientDbCrudRsp)},
  { 24, -1, sizeof(::XmsgImClientDbRow)},
  { 30, -1, sizeof(::XmsgImClientDbFiled)},
  { 39, 46, sizeof(::XmsgImClientKv_KvEntry_DoNotUse)},
  { 48, -1, sizeof(::XmsgImClientKv)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImClientDbCrudReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImClientDbCrudRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImClientDbRow_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImClientDbFiled_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImClientKv_KvEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImClientKv_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "db-x-msg-im-client-common.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\037db-x-msg-im-client-common.proto\"E\n\025Xms"
      "gImClientDbCrudReq\022\013\n\003sql\030\001 \001(\t\022\037\n\003row\030\002"
      " \003(\0132\022.XmsgImClientDbRow\"\253\001\n\025XmsgImClien"
      "tDbCrudRsp\022\016\n\006change\030\001 \001(\r\0222\n\006column\030\002 \003"
      "(\0132\".XmsgImClientDbCrudRsp.ColumnEntry\022\037"
      "\n\003row\030\004 \003(\0132\022.XmsgImClientDbRow\032-\n\013Colum"
      "nEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\r:\0028\001\"6"
      "\n\021XmsgImClientDbRow\022!\n\003col\030\001 \003(\0132\024.XmsgI"
      "mClientDbFiled\"o\n\023XmsgImClientDbFiled\022&\n"
      "\004type\030\001 \001(\0162\030.XmsgImClientDbFiledType\022\016\n"
      "\006valInt\030\002 \001(\004\022\017\n\007valText\030\003 \001(\t\022\017\n\007valBlo"
      "b\030\004 \001(\014\"`\n\016XmsgImClientKv\022#\n\002kv\030\001 \003(\0132\027."
      "XmsgImClientKv.KvEntry\032)\n\007KvEntry\022\013\n\003key"
      "\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001*\273\001\n\027XmsgImClie"
      "ntDbFiledType\022(\n$X_MSG_IM_CLIENT_DB_FILE"
      "D_TYPE_BIGINT\020\000\022&\n\"X_MSG_IM_CLIENT_DB_FI"
      "LED_TYPE_TEXT\020\001\022&\n\"X_MSG_IM_CLIENT_DB_FI"
      "LED_TYPE_BLOB\020\002\022&\n\"X_MSG_IM_CLIENT_DB_FI"
      "LED_TYPE_NULL\020\003B\"\n\010x.msg.pbB\026XmsgImClien"
      "tDbGlobalPbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 779);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "db-x-msg-im-client-common.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto
const ::google::protobuf::EnumDescriptor* XmsgImClientDbFiledType_descriptor() {
  protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::file_level_enum_descriptors[0];
}
bool XmsgImClientDbFiledType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void XmsgImClientDbCrudReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImClientDbCrudReq::kSqlFieldNumber;
const int XmsgImClientDbCrudReq::kRowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImClientDbCrudReq::XmsgImClientDbCrudReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::InitDefaultsXmsgImClientDbCrudReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImClientDbCrudReq)
}
XmsgImClientDbCrudReq::XmsgImClientDbCrudReq(const XmsgImClientDbCrudReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      row_(from.row_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sql().size() > 0) {
    sql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImClientDbCrudReq)
}

void XmsgImClientDbCrudReq::SharedCtor() {
  sql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgImClientDbCrudReq::~XmsgImClientDbCrudReq() {
  // @@protoc_insertion_point(destructor:XmsgImClientDbCrudReq)
  SharedDtor();
}

void XmsgImClientDbCrudReq::SharedDtor() {
  sql_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImClientDbCrudReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImClientDbCrudReq::descriptor() {
  ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImClientDbCrudReq& XmsgImClientDbCrudReq::default_instance() {
  ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::InitDefaultsXmsgImClientDbCrudReq();
  return *internal_default_instance();
}

XmsgImClientDbCrudReq* XmsgImClientDbCrudReq::New(::google::protobuf::Arena* arena) const {
  XmsgImClientDbCrudReq* n = new XmsgImClientDbCrudReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImClientDbCrudReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImClientDbCrudReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  row_.Clear();
  sql_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgImClientDbCrudReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImClientDbCrudReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sql = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sql()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sql().data(), static_cast<int>(this->sql().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImClientDbCrudReq.sql"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .XmsgImClientDbRow row = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_row()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImClientDbCrudReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImClientDbCrudReq)
  return false;
#undef DO_
}

void XmsgImClientDbCrudReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImClientDbCrudReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sql = 1;
  if (this->sql().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sql().data(), static_cast<int>(this->sql().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImClientDbCrudReq.sql");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sql(), output);
  }

  // repeated .XmsgImClientDbRow row = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->row_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->row(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImClientDbCrudReq)
}

::google::protobuf::uint8* XmsgImClientDbCrudReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImClientDbCrudReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sql = 1;
  if (this->sql().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sql().data(), static_cast<int>(this->sql().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImClientDbCrudReq.sql");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sql(), target);
  }

  // repeated .XmsgImClientDbRow row = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->row_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->row(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImClientDbCrudReq)
  return target;
}

size_t XmsgImClientDbCrudReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImClientDbCrudReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .XmsgImClientDbRow row = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->row_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->row(static_cast<int>(i)));
    }
  }

  // string sql = 1;
  if (this->sql().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sql());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImClientDbCrudReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImClientDbCrudReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImClientDbCrudReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImClientDbCrudReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImClientDbCrudReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImClientDbCrudReq)
    MergeFrom(*source);
  }
}

void XmsgImClientDbCrudReq::MergeFrom(const XmsgImClientDbCrudReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImClientDbCrudReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  row_.MergeFrom(from.row_);
  if (from.sql().size() > 0) {

    sql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_);
  }
}

void XmsgImClientDbCrudReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImClientDbCrudReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImClientDbCrudReq::CopyFrom(const XmsgImClientDbCrudReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImClientDbCrudReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImClientDbCrudReq::IsInitialized() const {
  return true;
}

void XmsgImClientDbCrudReq::Swap(XmsgImClientDbCrudReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImClientDbCrudReq::InternalSwap(XmsgImClientDbCrudReq* other) {
  using std::swap;
  row_.InternalSwap(&other->row_);
  sql_.Swap(&other->sql_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImClientDbCrudReq::GetMetadata() const {
  protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse::XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse() {}
XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse::XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse::MergeFrom(const XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse::GetMetadata() const {
  ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::file_level_metadata[1];
}
void XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImClientDbCrudRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImClientDbCrudRsp::kChangeFieldNumber;
const int XmsgImClientDbCrudRsp::kColumnFieldNumber;
const int XmsgImClientDbCrudRsp::kRowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImClientDbCrudRsp::XmsgImClientDbCrudRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::InitDefaultsXmsgImClientDbCrudRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImClientDbCrudRsp)
}
XmsgImClientDbCrudRsp::XmsgImClientDbCrudRsp(const XmsgImClientDbCrudRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      row_(from.row_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  column_.MergeFrom(from.column_);
  change_ = from.change_;
  // @@protoc_insertion_point(copy_constructor:XmsgImClientDbCrudRsp)
}

void XmsgImClientDbCrudRsp::SharedCtor() {
  change_ = 0u;
  _cached_size_ = 0;
}

XmsgImClientDbCrudRsp::~XmsgImClientDbCrudRsp() {
  // @@protoc_insertion_point(destructor:XmsgImClientDbCrudRsp)
  SharedDtor();
}

void XmsgImClientDbCrudRsp::SharedDtor() {
}

void XmsgImClientDbCrudRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImClientDbCrudRsp::descriptor() {
  ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImClientDbCrudRsp& XmsgImClientDbCrudRsp::default_instance() {
  ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::InitDefaultsXmsgImClientDbCrudRsp();
  return *internal_default_instance();
}

XmsgImClientDbCrudRsp* XmsgImClientDbCrudRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImClientDbCrudRsp* n = new XmsgImClientDbCrudRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImClientDbCrudRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImClientDbCrudRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  column_.Clear();
  row_.Clear();
  change_ = 0u;
  _internal_metadata_.Clear();
}

bool XmsgImClientDbCrudRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImClientDbCrudRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 change = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &change_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, uint32> column = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse,
              ::std::string, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 > > parser(&column_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImClientDbCrudRsp.ColumnEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .XmsgImClientDbRow row = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_row()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImClientDbCrudRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImClientDbCrudRsp)
  return false;
#undef DO_
}

void XmsgImClientDbCrudRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImClientDbCrudRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 change = 1;
  if (this->change() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->change(), output);
  }

  // map<string, uint32> column = 2;
  if (!this->column().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImClientDbCrudRsp.ColumnEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->column().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->column().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->column().begin();
          it != this->column().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(column_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->column().begin();
          it != this->column().end(); ++it) {
        entry.reset(column_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated .XmsgImClientDbRow row = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->row_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->row(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImClientDbCrudRsp)
}

::google::protobuf::uint8* XmsgImClientDbCrudRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImClientDbCrudRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 change = 1;
  if (this->change() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->change(), target);
  }

  // map<string, uint32> column = 2;
  if (!this->column().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImClientDbCrudRsp.ColumnEntry.key");
      }
    };

    if (deterministic &&
        this->column().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->column().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->column().begin();
          it != this->column().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(column_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->column().begin();
          it != this->column().end(); ++it) {
        entry.reset(column_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated .XmsgImClientDbRow row = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->row_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->row(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImClientDbCrudRsp)
  return target;
}

size_t XmsgImClientDbCrudRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImClientDbCrudRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, uint32> column = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->column_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImClientDbCrudRsp_ColumnEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
        it = this->column().begin();
        it != this->column().end(); ++it) {
      entry.reset(column_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated .XmsgImClientDbRow row = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->row_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->row(static_cast<int>(i)));
    }
  }

  // uint32 change = 1;
  if (this->change() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->change());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImClientDbCrudRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImClientDbCrudRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImClientDbCrudRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImClientDbCrudRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImClientDbCrudRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImClientDbCrudRsp)
    MergeFrom(*source);
  }
}

void XmsgImClientDbCrudRsp::MergeFrom(const XmsgImClientDbCrudRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImClientDbCrudRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  column_.MergeFrom(from.column_);
  row_.MergeFrom(from.row_);
  if (from.change() != 0) {
    set_change(from.change());
  }
}

void XmsgImClientDbCrudRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImClientDbCrudRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImClientDbCrudRsp::CopyFrom(const XmsgImClientDbCrudRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImClientDbCrudRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImClientDbCrudRsp::IsInitialized() const {
  return true;
}

void XmsgImClientDbCrudRsp::Swap(XmsgImClientDbCrudRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImClientDbCrudRsp::InternalSwap(XmsgImClientDbCrudRsp* other) {
  using std::swap;
  column_.Swap(&other->column_);
  row_.InternalSwap(&other->row_);
  swap(change_, other->change_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImClientDbCrudRsp::GetMetadata() const {
  protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImClientDbRow::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImClientDbRow::kColFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImClientDbRow::XmsgImClientDbRow()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::InitDefaultsXmsgImClientDbRow();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImClientDbRow)
}
XmsgImClientDbRow::XmsgImClientDbRow(const XmsgImClientDbRow& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      col_(from.col_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XmsgImClientDbRow)
}

void XmsgImClientDbRow::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImClientDbRow::~XmsgImClientDbRow() {
  // @@protoc_insertion_point(destructor:XmsgImClientDbRow)
  SharedDtor();
}

void XmsgImClientDbRow::SharedDtor() {
}

void XmsgImClientDbRow::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImClientDbRow::descriptor() {
  ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImClientDbRow& XmsgImClientDbRow::default_instance() {
  ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::InitDefaultsXmsgImClientDbRow();
  return *internal_default_instance();
}

XmsgImClientDbRow* XmsgImClientDbRow::New(::google::protobuf::Arena* arena) const {
  XmsgImClientDbRow* n = new XmsgImClientDbRow;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImClientDbRow::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImClientDbRow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  col_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImClientDbRow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImClientDbRow)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .XmsgImClientDbFiled col = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_col()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImClientDbRow)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImClientDbRow)
  return false;
#undef DO_
}

void XmsgImClientDbRow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImClientDbRow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XmsgImClientDbFiled col = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->col_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->col(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImClientDbRow)
}

::google::protobuf::uint8* XmsgImClientDbRow::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImClientDbRow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XmsgImClientDbFiled col = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->col_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->col(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImClientDbRow)
  return target;
}

size_t XmsgImClientDbRow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImClientDbRow)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .XmsgImClientDbFiled col = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->col_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->col(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImClientDbRow::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImClientDbRow)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImClientDbRow* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImClientDbRow>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImClientDbRow)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImClientDbRow)
    MergeFrom(*source);
  }
}

void XmsgImClientDbRow::MergeFrom(const XmsgImClientDbRow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImClientDbRow)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  col_.MergeFrom(from.col_);
}

void XmsgImClientDbRow::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImClientDbRow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImClientDbRow::CopyFrom(const XmsgImClientDbRow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImClientDbRow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImClientDbRow::IsInitialized() const {
  return true;
}

void XmsgImClientDbRow::Swap(XmsgImClientDbRow* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImClientDbRow::InternalSwap(XmsgImClientDbRow* other) {
  using std::swap;
  col_.InternalSwap(&other->col_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImClientDbRow::GetMetadata() const {
  protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImClientDbFiled::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImClientDbFiled::kTypeFieldNumber;
const int XmsgImClientDbFiled::kValIntFieldNumber;
const int XmsgImClientDbFiled::kValTextFieldNumber;
const int XmsgImClientDbFiled::kValBlobFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImClientDbFiled::XmsgImClientDbFiled()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::InitDefaultsXmsgImClientDbFiled();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImClientDbFiled)
}
XmsgImClientDbFiled::XmsgImClientDbFiled(const XmsgImClientDbFiled& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  valtext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.valtext().size() > 0) {
    valtext_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.valtext_);
  }
  valblob_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.valblob().size() > 0) {
    valblob_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.valblob_);
  }
  ::memcpy(&valint_, &from.valint_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&valint_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:XmsgImClientDbFiled)
}

void XmsgImClientDbFiled::SharedCtor() {
  valtext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valblob_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&valint_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&valint_)) + sizeof(type_));
  _cached_size_ = 0;
}

XmsgImClientDbFiled::~XmsgImClientDbFiled() {
  // @@protoc_insertion_point(destructor:XmsgImClientDbFiled)
  SharedDtor();
}

void XmsgImClientDbFiled::SharedDtor() {
  valtext_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valblob_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImClientDbFiled::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImClientDbFiled::descriptor() {
  ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImClientDbFiled& XmsgImClientDbFiled::default_instance() {
  ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::InitDefaultsXmsgImClientDbFiled();
  return *internal_default_instance();
}

XmsgImClientDbFiled* XmsgImClientDbFiled::New(::google::protobuf::Arena* arena) const {
  XmsgImClientDbFiled* n = new XmsgImClientDbFiled;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImClientDbFiled::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImClientDbFiled)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  valtext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valblob_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&valint_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&valint_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool XmsgImClientDbFiled::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImClientDbFiled)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .XmsgImClientDbFiledType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::XmsgImClientDbFiledType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 valInt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &valint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string valText = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_valtext()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->valtext().data(), static_cast<int>(this->valtext().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImClientDbFiled.valText"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes valBlob = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_valblob()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImClientDbFiled)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImClientDbFiled)
  return false;
#undef DO_
}

void XmsgImClientDbFiled::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImClientDbFiled)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .XmsgImClientDbFiledType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // uint64 valInt = 2;
  if (this->valint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->valint(), output);
  }

  // string valText = 3;
  if (this->valtext().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->valtext().data(), static_cast<int>(this->valtext().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImClientDbFiled.valText");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->valtext(), output);
  }

  // bytes valBlob = 4;
  if (this->valblob().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->valblob(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImClientDbFiled)
}

::google::protobuf::uint8* XmsgImClientDbFiled::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImClientDbFiled)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .XmsgImClientDbFiledType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // uint64 valInt = 2;
  if (this->valint() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->valint(), target);
  }

  // string valText = 3;
  if (this->valtext().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->valtext().data(), static_cast<int>(this->valtext().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImClientDbFiled.valText");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->valtext(), target);
  }

  // bytes valBlob = 4;
  if (this->valblob().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->valblob(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImClientDbFiled)
  return target;
}

size_t XmsgImClientDbFiled::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImClientDbFiled)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string valText = 3;
  if (this->valtext().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->valtext());
  }

  // bytes valBlob = 4;
  if (this->valblob().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->valblob());
  }

  // uint64 valInt = 2;
  if (this->valint() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->valint());
  }

  // .XmsgImClientDbFiledType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImClientDbFiled::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImClientDbFiled)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImClientDbFiled* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImClientDbFiled>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImClientDbFiled)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImClientDbFiled)
    MergeFrom(*source);
  }
}

void XmsgImClientDbFiled::MergeFrom(const XmsgImClientDbFiled& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImClientDbFiled)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.valtext().size() > 0) {

    valtext_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.valtext_);
  }
  if (from.valblob().size() > 0) {

    valblob_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.valblob_);
  }
  if (from.valint() != 0) {
    set_valint(from.valint());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void XmsgImClientDbFiled::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImClientDbFiled)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImClientDbFiled::CopyFrom(const XmsgImClientDbFiled& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImClientDbFiled)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImClientDbFiled::IsInitialized() const {
  return true;
}

void XmsgImClientDbFiled::Swap(XmsgImClientDbFiled* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImClientDbFiled::InternalSwap(XmsgImClientDbFiled* other) {
  using std::swap;
  valtext_.Swap(&other->valtext_);
  valblob_.Swap(&other->valblob_);
  swap(valint_, other->valint_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImClientDbFiled::GetMetadata() const {
  protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImClientKv_KvEntry_DoNotUse::XmsgImClientKv_KvEntry_DoNotUse() {}
XmsgImClientKv_KvEntry_DoNotUse::XmsgImClientKv_KvEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImClientKv_KvEntry_DoNotUse::MergeFrom(const XmsgImClientKv_KvEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImClientKv_KvEntry_DoNotUse::GetMetadata() const {
  ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::file_level_metadata[5];
}
void XmsgImClientKv_KvEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImClientKv::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImClientKv::kKvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImClientKv::XmsgImClientKv()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::InitDefaultsXmsgImClientKv();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImClientKv)
}
XmsgImClientKv::XmsgImClientKv(const XmsgImClientKv& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  kv_.MergeFrom(from.kv_);
  // @@protoc_insertion_point(copy_constructor:XmsgImClientKv)
}

void XmsgImClientKv::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImClientKv::~XmsgImClientKv() {
  // @@protoc_insertion_point(destructor:XmsgImClientKv)
  SharedDtor();
}

void XmsgImClientKv::SharedDtor() {
}

void XmsgImClientKv::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImClientKv::descriptor() {
  ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImClientKv& XmsgImClientKv::default_instance() {
  ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::InitDefaultsXmsgImClientKv();
  return *internal_default_instance();
}

XmsgImClientKv* XmsgImClientKv::New(::google::protobuf::Arena* arena) const {
  XmsgImClientKv* n = new XmsgImClientKv;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImClientKv::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImClientKv)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kv_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImClientKv::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImClientKv)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> kv = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgImClientKv_KvEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImClientKv_KvEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&kv_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImClientKv.KvEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImClientKv.KvEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImClientKv)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImClientKv)
  return false;
#undef DO_
}

void XmsgImClientKv::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImClientKv)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> kv = 1;
  if (!this->kv().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImClientKv.KvEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImClientKv.KvEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->kv().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->kv().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->kv().begin();
          it != this->kv().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImClientKv_KvEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(kv_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImClientKv_KvEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->kv().begin();
          it != this->kv().end(); ++it) {
        entry.reset(kv_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImClientKv)
}

::google::protobuf::uint8* XmsgImClientKv::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImClientKv)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> kv = 1;
  if (!this->kv().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImClientKv.KvEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImClientKv.KvEntry.value");
      }
    };

    if (deterministic &&
        this->kv().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->kv().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->kv().begin();
          it != this->kv().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImClientKv_KvEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(kv_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImClientKv_KvEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->kv().begin();
          it != this->kv().end(); ++it) {
        entry.reset(kv_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImClientKv)
  return target;
}

size_t XmsgImClientKv::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImClientKv)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> kv = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->kv_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImClientKv_KvEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->kv().begin();
        it != this->kv().end(); ++it) {
      entry.reset(kv_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImClientKv::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImClientKv)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImClientKv* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImClientKv>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImClientKv)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImClientKv)
    MergeFrom(*source);
  }
}

void XmsgImClientKv::MergeFrom(const XmsgImClientKv& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImClientKv)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  kv_.MergeFrom(from.kv_);
}

void XmsgImClientKv::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImClientKv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImClientKv::CopyFrom(const XmsgImClientKv& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImClientKv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImClientKv::IsInitialized() const {
  return true;
}

void XmsgImClientKv::Swap(XmsgImClientKv* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImClientKv::InternalSwap(XmsgImClientKv* other) {
  using std::swap;
  kv_.Swap(&other->kv_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImClientKv::GetMetadata() const {
  protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db_2dx_2dmsg_2dim_2dclient_2dcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
