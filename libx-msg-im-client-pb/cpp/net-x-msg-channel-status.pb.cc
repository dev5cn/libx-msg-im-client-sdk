// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net-x-msg-channel-status.proto

#include "net-x-msg-channel-status.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class XmsgChannelStatusQueryReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgChannelStatusQueryReq>
      _instance;
} _XmsgChannelStatusQueryReq_default_instance_;
class XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse>
      _instance;
} _XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse_default_instance_;
class XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse>
      _instance;
} _XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse_default_instance_;
class XmsgChannelStatusQueryRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgChannelStatusQueryRsp>
      _instance;
} _XmsgChannelStatusQueryRsp_default_instance_;
class XmsgChannelStatusSubReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgChannelStatusSubReq>
      _instance;
} _XmsgChannelStatusSubReq_default_instance_;
class XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse>
      _instance;
} _XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse_default_instance_;
class XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse>
      _instance;
} _XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse_default_instance_;
class XmsgChannelStatusSubRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgChannelStatusSubRsp>
      _instance;
} _XmsgChannelStatusSubRsp_default_instance_;
class XmsgChannelStatusUnSubReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgChannelStatusUnSubReq>
      _instance;
} _XmsgChannelStatusUnSubReq_default_instance_;
class XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse>
      _instance;
} _XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgChannelStatusUnSubRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgChannelStatusUnSubRsp>
      _instance;
} _XmsgChannelStatusUnSubRsp_default_instance_;
class XmsgChannelStatusPubUsrStatusNoticeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgChannelStatusPubUsrStatusNotice>
      _instance;
} _XmsgChannelStatusPubUsrStatusNotice_default_instance_;
class XmsgChannelStatusPubGroupStatusNoticeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgChannelStatusPubGroupStatusNotice>
      _instance;
} _XmsgChannelStatusPubGroupStatusNotice_default_instance_;
class XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus>
      _instance;
} _XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus_default_instance_;
class XmsgChannelStatusUsrStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgChannelStatusUsrStatus>
      _instance;
} _XmsgChannelStatusUsrStatus_default_instance_;
class XmsgChannelStatusGroupStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgChannelStatusGroupStatus>
      _instance;
} _XmsgChannelStatusGroupStatus_default_instance_;
namespace protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto {
void InitDefaultsXmsgChannelStatusQueryReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgChannelStatusQueryReq_default_instance_;
    new (ptr) ::XmsgChannelStatusQueryReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgChannelStatusQueryReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgChannelStatusQueryReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgChannelStatusQueryReqImpl);
}

void InitDefaultsXmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusUsrStatus();
  {
    void* ptr = &::_XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse();
  }
  ::XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUseImpl);
}

void InitDefaultsXmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusGroupStatus();
  {
    void* ptr = &::_XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse();
  }
  ::XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUseImpl);
}

void InitDefaultsXmsgChannelStatusQueryRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse();
  protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse();
  {
    void* ptr = &::_XmsgChannelStatusQueryRsp_default_instance_;
    new (ptr) ::XmsgChannelStatusQueryRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgChannelStatusQueryRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgChannelStatusQueryRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgChannelStatusQueryRspImpl);
}

void InitDefaultsXmsgChannelStatusSubReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgChannelStatusSubReq_default_instance_;
    new (ptr) ::XmsgChannelStatusSubReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgChannelStatusSubReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgChannelStatusSubReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgChannelStatusSubReqImpl);
}

void InitDefaultsXmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusUsrStatus();
  {
    void* ptr = &::_XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse();
  }
  ::XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUseImpl);
}

void InitDefaultsXmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusGroupStatus();
  {
    void* ptr = &::_XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse();
  }
  ::XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUseImpl);
}

void InitDefaultsXmsgChannelStatusSubRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse();
  protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse();
  {
    void* ptr = &::_XmsgChannelStatusSubRsp_default_instance_;
    new (ptr) ::XmsgChannelStatusSubRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgChannelStatusSubRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgChannelStatusSubRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgChannelStatusSubRspImpl);
}

void InitDefaultsXmsgChannelStatusUnSubReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgChannelStatusUnSubReq_default_instance_;
    new (ptr) ::XmsgChannelStatusUnSubReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgChannelStatusUnSubReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgChannelStatusUnSubReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgChannelStatusUnSubReqImpl);
}

void InitDefaultsXmsgChannelStatusUnSubRsp_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse();
  }
  ::XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgChannelStatusUnSubRsp_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgChannelStatusUnSubRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgChannelStatusUnSubRsp_default_instance_;
    new (ptr) ::XmsgChannelStatusUnSubRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgChannelStatusUnSubRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgChannelStatusUnSubRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgChannelStatusUnSubRspImpl);
}

void InitDefaultsXmsgChannelStatusPubUsrStatusNoticeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgChannelStatusPubUsrStatusNotice_default_instance_;
    new (ptr) ::XmsgChannelStatusPubUsrStatusNotice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgChannelStatusPubUsrStatusNotice::InitAsDefaultInstance();
}

void InitDefaultsXmsgChannelStatusPubUsrStatusNotice() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgChannelStatusPubUsrStatusNoticeImpl);
}

void InitDefaultsXmsgChannelStatusPubGroupStatusNoticeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgChannelStatusPubGroupStatusNotice_default_instance_;
    new (ptr) ::XmsgChannelStatusPubGroupStatusNotice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgChannelStatusPubGroupStatusNotice::InitAsDefaultInstance();
}

void InitDefaultsXmsgChannelStatusPubGroupStatusNotice() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgChannelStatusPubGroupStatusNoticeImpl);
}

void InitDefaultsXmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatusImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus_default_instance_;
    new (ptr) ::XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::InitAsDefaultInstance();
}

void InitDefaultsXmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatusImpl);
}

void InitDefaultsXmsgChannelStatusUsrStatusImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus();
  {
    void* ptr = &::_XmsgChannelStatusUsrStatus_default_instance_;
    new (ptr) ::XmsgChannelStatusUsrStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgChannelStatusUsrStatus::InitAsDefaultInstance();
}

void InitDefaultsXmsgChannelStatusUsrStatus() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgChannelStatusUsrStatusImpl);
}

void InitDefaultsXmsgChannelStatusGroupStatusImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgChannelStatusGroupStatus_default_instance_;
    new (ptr) ::XmsgChannelStatusGroupStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgChannelStatusGroupStatus::InitAsDefaultInstance();
}

void InitDefaultsXmsgChannelStatusGroupStatus() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgChannelStatusGroupStatusImpl);
}

::google::protobuf::Metadata file_level_metadata[16];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusQueryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusQueryReq, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusQueryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusQueryRsp, usrstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusQueryRsp, groupstatus_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusSubReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusSubReq, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusSubRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusSubRsp, usrstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusSubRsp, groupstatus_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusUnSubReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusUnSubReq, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusUnSubRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusUnSubRsp, ext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusPubUsrStatusNotice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusPubUsrStatusNotice, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusPubUsrStatusNotice, plat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusPubUsrStatusNotice, did_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusPubUsrStatusNotice, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusPubGroupStatusNotice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusPubGroupStatusNotice, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusPubGroupStatusNotice, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus, plat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus, did_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusUsrStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusUsrStatus, client_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusGroupStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgChannelStatusGroupStatus, status_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::XmsgChannelStatusQueryReq)},
  { 6, 13, sizeof(::XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse)},
  { 15, 22, sizeof(::XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse)},
  { 24, -1, sizeof(::XmsgChannelStatusQueryRsp)},
  { 31, -1, sizeof(::XmsgChannelStatusSubReq)},
  { 37, 44, sizeof(::XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse)},
  { 46, 53, sizeof(::XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse)},
  { 55, -1, sizeof(::XmsgChannelStatusSubRsp)},
  { 62, -1, sizeof(::XmsgChannelStatusUnSubReq)},
  { 68, 75, sizeof(::XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse)},
  { 77, -1, sizeof(::XmsgChannelStatusUnSubRsp)},
  { 83, -1, sizeof(::XmsgChannelStatusPubUsrStatusNotice)},
  { 92, -1, sizeof(::XmsgChannelStatusPubGroupStatusNotice)},
  { 99, -1, sizeof(::XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus)},
  { 107, -1, sizeof(::XmsgChannelStatusUsrStatus)},
  { 113, -1, sizeof(::XmsgChannelStatusGroupStatus)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgChannelStatusQueryReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgChannelStatusQueryRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgChannelStatusSubReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgChannelStatusSubRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgChannelStatusUnSubReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgChannelStatusUnSubRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgChannelStatusPubUsrStatusNotice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgChannelStatusPubGroupStatusNotice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgChannelStatusUsrStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgChannelStatusGroupStatus_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "net-x-msg-channel-status.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 16);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\036net-x-msg-channel-status.proto\"(\n\031Xmsg"
      "ChannelStatusQueryReq\022\013\n\003cgt\030\001 \003(\t\"\275\002\n\031X"
      "msgChannelStatusQueryRsp\022<\n\tusrStatus\030\001 "
      "\003(\0132).XmsgChannelStatusQueryRsp.UsrStatu"
      "sEntry\022@\n\013groupStatus\030\002 \003(\0132+.XmsgChanne"
      "lStatusQueryRsp.GroupStatusEntry\032M\n\016UsrS"
      "tatusEntry\022\013\n\003key\030\001 \001(\t\022*\n\005value\030\002 \001(\0132\033"
      ".XmsgChannelStatusUsrStatus:\0028\001\032Q\n\020Group"
      "StatusEntry\022\013\n\003key\030\001 \001(\t\022,\n\005value\030\002 \001(\0132"
      "\035.XmsgChannelStatusGroupStatus:\0028\001\"&\n\027Xm"
      "sgChannelStatusSubReq\022\013\n\003cgt\030\001 \003(\t\"\267\002\n\027X"
      "msgChannelStatusSubRsp\022:\n\tusrStatus\030\001 \003("
      "\0132\'.XmsgChannelStatusSubRsp.UsrStatusEnt"
      "ry\022>\n\013groupStatus\030\002 \003(\0132).XmsgChannelSta"
      "tusSubRsp.GroupStatusEntry\032M\n\016UsrStatusE"
      "ntry\022\013\n\003key\030\001 \001(\t\022*\n\005value\030\002 \001(\0132\033.XmsgC"
      "hannelStatusUsrStatus:\0028\001\032Q\n\020GroupStatus"
      "Entry\022\013\n\003key\030\001 \001(\t\022,\n\005value\030\002 \001(\0132\035.Xmsg"
      "ChannelStatusGroupStatus:\0028\001\"(\n\031XmsgChan"
      "nelStatusUnSubReq\022\013\n\003cgt\030\001 \003(\t\"y\n\031XmsgCh"
      "annelStatusUnSubRsp\0220\n\003ext\030\001 \003(\0132#.XmsgC"
      "hannelStatusUnSubRsp.ExtEntry\032*\n\010ExtEntr"
      "y\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"]\n#Xms"
      "gChannelStatusPubUsrStatusNotice\022\013\n\003cgt\030"
      "\001 \001(\t\022\014\n\004plat\030\002 \001(\t\022\013\n\003did\030\003 \001(\t\022\016\n\006stat"
      "us\030\004 \001(\t\"D\n%XmsgChannelStatusPubGroupSta"
      "tusNotice\022\013\n\003cgt\030\001 \001(\t\022\016\n\006status\030\002 \001(\t\"\271"
      "\001\n\032XmsgChannelStatusUsrStatus\022L\n\006client\030"
      "\002 \003(\0132<.XmsgChannelStatusUsrStatus.XmsgC"
      "hannelStatusUsrClientStatus\032M\n XmsgChann"
      "elStatusUsrClientStatus\022\014\n\004plat\030\001 \001(\t\022\013\n"
      "\003did\030\002 \001(\t\022\016\n\006status\030\003 \001(\t\".\n\034XmsgChanne"
      "lStatusGroupStatus\022\016\n\006status\030\001 \001(\tB\037\n\010x."
      "msg.pbB\023XmsgChannelStatusPbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1355);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net-x-msg-channel-status.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto

// ===================================================================

void XmsgChannelStatusQueryReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgChannelStatusQueryReq::kCgtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgChannelStatusQueryReq::XmsgChannelStatusQueryReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusQueryReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgChannelStatusQueryReq)
}
XmsgChannelStatusQueryReq::XmsgChannelStatusQueryReq(const XmsgChannelStatusQueryReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      cgt_(from.cgt_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XmsgChannelStatusQueryReq)
}

void XmsgChannelStatusQueryReq::SharedCtor() {
  _cached_size_ = 0;
}

XmsgChannelStatusQueryReq::~XmsgChannelStatusQueryReq() {
  // @@protoc_insertion_point(destructor:XmsgChannelStatusQueryReq)
  SharedDtor();
}

void XmsgChannelStatusQueryReq::SharedDtor() {
}

void XmsgChannelStatusQueryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgChannelStatusQueryReq::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgChannelStatusQueryReq& XmsgChannelStatusQueryReq::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusQueryReq();
  return *internal_default_instance();
}

XmsgChannelStatusQueryReq* XmsgChannelStatusQueryReq::New(::google::protobuf::Arena* arena) const {
  XmsgChannelStatusQueryReq* n = new XmsgChannelStatusQueryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgChannelStatusQueryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgChannelStatusQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cgt_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgChannelStatusQueryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgChannelStatusQueryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt(this->cgt_size() - 1).data(),
            static_cast<int>(this->cgt(this->cgt_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgChannelStatusQueryReq.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgChannelStatusQueryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgChannelStatusQueryReq)
  return false;
#undef DO_
}

void XmsgChannelStatusQueryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgChannelStatusQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string cgt = 1;
  for (int i = 0, n = this->cgt_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt(i).data(), static_cast<int>(this->cgt(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgChannelStatusQueryReq.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->cgt(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgChannelStatusQueryReq)
}

::google::protobuf::uint8* XmsgChannelStatusQueryReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgChannelStatusQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string cgt = 1;
  for (int i = 0, n = this->cgt_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt(i).data(), static_cast<int>(this->cgt(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgChannelStatusQueryReq.cgt");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->cgt(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgChannelStatusQueryReq)
  return target;
}

size_t XmsgChannelStatusQueryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgChannelStatusQueryReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string cgt = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->cgt_size());
  for (int i = 0, n = this->cgt_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cgt(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgChannelStatusQueryReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgChannelStatusQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgChannelStatusQueryReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgChannelStatusQueryReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgChannelStatusQueryReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgChannelStatusQueryReq)
    MergeFrom(*source);
  }
}

void XmsgChannelStatusQueryReq::MergeFrom(const XmsgChannelStatusQueryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgChannelStatusQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cgt_.MergeFrom(from.cgt_);
}

void XmsgChannelStatusQueryReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgChannelStatusQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgChannelStatusQueryReq::CopyFrom(const XmsgChannelStatusQueryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgChannelStatusQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgChannelStatusQueryReq::IsInitialized() const {
  return true;
}

void XmsgChannelStatusQueryReq::Swap(XmsgChannelStatusQueryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgChannelStatusQueryReq::InternalSwap(XmsgChannelStatusQueryReq* other) {
  using std::swap;
  cgt_.InternalSwap(&other->cgt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgChannelStatusQueryReq::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse::XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse() {}
XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse::XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse::MergeFrom(const XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[1];
}
void XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse::XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse() {}
XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse::XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse::MergeFrom(const XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[2];
}
void XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgChannelStatusQueryRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgChannelStatusQueryRsp::kUsrStatusFieldNumber;
const int XmsgChannelStatusQueryRsp::kGroupStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgChannelStatusQueryRsp::XmsgChannelStatusQueryRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusQueryRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgChannelStatusQueryRsp)
}
XmsgChannelStatusQueryRsp::XmsgChannelStatusQueryRsp(const XmsgChannelStatusQueryRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  usrstatus_.MergeFrom(from.usrstatus_);
  groupstatus_.MergeFrom(from.groupstatus_);
  // @@protoc_insertion_point(copy_constructor:XmsgChannelStatusQueryRsp)
}

void XmsgChannelStatusQueryRsp::SharedCtor() {
  _cached_size_ = 0;
}

XmsgChannelStatusQueryRsp::~XmsgChannelStatusQueryRsp() {
  // @@protoc_insertion_point(destructor:XmsgChannelStatusQueryRsp)
  SharedDtor();
}

void XmsgChannelStatusQueryRsp::SharedDtor() {
}

void XmsgChannelStatusQueryRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgChannelStatusQueryRsp::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgChannelStatusQueryRsp& XmsgChannelStatusQueryRsp::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusQueryRsp();
  return *internal_default_instance();
}

XmsgChannelStatusQueryRsp* XmsgChannelStatusQueryRsp::New(::google::protobuf::Arena* arena) const {
  XmsgChannelStatusQueryRsp* n = new XmsgChannelStatusQueryRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgChannelStatusQueryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgChannelStatusQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  usrstatus_.Clear();
  groupstatus_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgChannelStatusQueryRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgChannelStatusQueryRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .XmsgChannelStatusUsrStatus> usrStatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse,
              ::std::string, ::XmsgChannelStatusUsrStatus,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusUsrStatus > > parser(&usrstatus_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgChannelStatusQueryRsp.UsrStatusEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .XmsgChannelStatusGroupStatus> groupStatus = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse,
              ::std::string, ::XmsgChannelStatusGroupStatus,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusGroupStatus > > parser(&groupstatus_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgChannelStatusQueryRsp.GroupStatusEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgChannelStatusQueryRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgChannelStatusQueryRsp)
  return false;
#undef DO_
}

void XmsgChannelStatusQueryRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgChannelStatusQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .XmsgChannelStatusUsrStatus> usrStatus = 1;
  if (!this->usrstatus().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusUsrStatus >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgChannelStatusQueryRsp.UsrStatusEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->usrstatus().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->usrstatus().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusUsrStatus >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::XmsgChannelStatusUsrStatus >::const_iterator
          it = this->usrstatus().begin();
          it != this->usrstatus().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(usrstatus_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::XmsgChannelStatusUsrStatus >::const_iterator
          it = this->usrstatus().begin();
          it != this->usrstatus().end(); ++it) {
        entry.reset(usrstatus_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .XmsgChannelStatusGroupStatus> groupStatus = 2;
  if (!this->groupstatus().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusGroupStatus >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgChannelStatusQueryRsp.GroupStatusEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->groupstatus().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->groupstatus().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusGroupStatus >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::XmsgChannelStatusGroupStatus >::const_iterator
          it = this->groupstatus().begin();
          it != this->groupstatus().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(groupstatus_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::XmsgChannelStatusGroupStatus >::const_iterator
          it = this->groupstatus().begin();
          it != this->groupstatus().end(); ++it) {
        entry.reset(groupstatus_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgChannelStatusQueryRsp)
}

::google::protobuf::uint8* XmsgChannelStatusQueryRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgChannelStatusQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .XmsgChannelStatusUsrStatus> usrStatus = 1;
  if (!this->usrstatus().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusUsrStatus >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgChannelStatusQueryRsp.UsrStatusEntry.key");
      }
    };

    if (deterministic &&
        this->usrstatus().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->usrstatus().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusUsrStatus >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::XmsgChannelStatusUsrStatus >::const_iterator
          it = this->usrstatus().begin();
          it != this->usrstatus().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(usrstatus_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::XmsgChannelStatusUsrStatus >::const_iterator
          it = this->usrstatus().begin();
          it != this->usrstatus().end(); ++it) {
        entry.reset(usrstatus_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .XmsgChannelStatusGroupStatus> groupStatus = 2;
  if (!this->groupstatus().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusGroupStatus >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgChannelStatusQueryRsp.GroupStatusEntry.key");
      }
    };

    if (deterministic &&
        this->groupstatus().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->groupstatus().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusGroupStatus >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::XmsgChannelStatusGroupStatus >::const_iterator
          it = this->groupstatus().begin();
          it != this->groupstatus().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(groupstatus_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::XmsgChannelStatusGroupStatus >::const_iterator
          it = this->groupstatus().begin();
          it != this->groupstatus().end(); ++it) {
        entry.reset(groupstatus_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgChannelStatusQueryRsp)
  return target;
}

size_t XmsgChannelStatusQueryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgChannelStatusQueryRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .XmsgChannelStatusUsrStatus> usrStatus = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->usrstatus_size());
  {
    ::google::protobuf::scoped_ptr<XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::XmsgChannelStatusUsrStatus >::const_iterator
        it = this->usrstatus().begin();
        it != this->usrstatus().end(); ++it) {
      entry.reset(usrstatus_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, .XmsgChannelStatusGroupStatus> groupStatus = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->groupstatus_size());
  {
    ::google::protobuf::scoped_ptr<XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::XmsgChannelStatusGroupStatus >::const_iterator
        it = this->groupstatus().begin();
        it != this->groupstatus().end(); ++it) {
      entry.reset(groupstatus_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgChannelStatusQueryRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgChannelStatusQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgChannelStatusQueryRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgChannelStatusQueryRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgChannelStatusQueryRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgChannelStatusQueryRsp)
    MergeFrom(*source);
  }
}

void XmsgChannelStatusQueryRsp::MergeFrom(const XmsgChannelStatusQueryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgChannelStatusQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  usrstatus_.MergeFrom(from.usrstatus_);
  groupstatus_.MergeFrom(from.groupstatus_);
}

void XmsgChannelStatusQueryRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgChannelStatusQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgChannelStatusQueryRsp::CopyFrom(const XmsgChannelStatusQueryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgChannelStatusQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgChannelStatusQueryRsp::IsInitialized() const {
  return true;
}

void XmsgChannelStatusQueryRsp::Swap(XmsgChannelStatusQueryRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgChannelStatusQueryRsp::InternalSwap(XmsgChannelStatusQueryRsp* other) {
  using std::swap;
  usrstatus_.Swap(&other->usrstatus_);
  groupstatus_.Swap(&other->groupstatus_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgChannelStatusQueryRsp::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgChannelStatusSubReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgChannelStatusSubReq::kCgtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgChannelStatusSubReq::XmsgChannelStatusSubReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusSubReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgChannelStatusSubReq)
}
XmsgChannelStatusSubReq::XmsgChannelStatusSubReq(const XmsgChannelStatusSubReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      cgt_(from.cgt_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XmsgChannelStatusSubReq)
}

void XmsgChannelStatusSubReq::SharedCtor() {
  _cached_size_ = 0;
}

XmsgChannelStatusSubReq::~XmsgChannelStatusSubReq() {
  // @@protoc_insertion_point(destructor:XmsgChannelStatusSubReq)
  SharedDtor();
}

void XmsgChannelStatusSubReq::SharedDtor() {
}

void XmsgChannelStatusSubReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgChannelStatusSubReq::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgChannelStatusSubReq& XmsgChannelStatusSubReq::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusSubReq();
  return *internal_default_instance();
}

XmsgChannelStatusSubReq* XmsgChannelStatusSubReq::New(::google::protobuf::Arena* arena) const {
  XmsgChannelStatusSubReq* n = new XmsgChannelStatusSubReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgChannelStatusSubReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgChannelStatusSubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cgt_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgChannelStatusSubReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgChannelStatusSubReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt(this->cgt_size() - 1).data(),
            static_cast<int>(this->cgt(this->cgt_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgChannelStatusSubReq.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgChannelStatusSubReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgChannelStatusSubReq)
  return false;
#undef DO_
}

void XmsgChannelStatusSubReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgChannelStatusSubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string cgt = 1;
  for (int i = 0, n = this->cgt_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt(i).data(), static_cast<int>(this->cgt(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgChannelStatusSubReq.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->cgt(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgChannelStatusSubReq)
}

::google::protobuf::uint8* XmsgChannelStatusSubReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgChannelStatusSubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string cgt = 1;
  for (int i = 0, n = this->cgt_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt(i).data(), static_cast<int>(this->cgt(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgChannelStatusSubReq.cgt");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->cgt(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgChannelStatusSubReq)
  return target;
}

size_t XmsgChannelStatusSubReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgChannelStatusSubReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string cgt = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->cgt_size());
  for (int i = 0, n = this->cgt_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cgt(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgChannelStatusSubReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgChannelStatusSubReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgChannelStatusSubReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgChannelStatusSubReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgChannelStatusSubReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgChannelStatusSubReq)
    MergeFrom(*source);
  }
}

void XmsgChannelStatusSubReq::MergeFrom(const XmsgChannelStatusSubReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgChannelStatusSubReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cgt_.MergeFrom(from.cgt_);
}

void XmsgChannelStatusSubReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgChannelStatusSubReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgChannelStatusSubReq::CopyFrom(const XmsgChannelStatusSubReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgChannelStatusSubReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgChannelStatusSubReq::IsInitialized() const {
  return true;
}

void XmsgChannelStatusSubReq::Swap(XmsgChannelStatusSubReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgChannelStatusSubReq::InternalSwap(XmsgChannelStatusSubReq* other) {
  using std::swap;
  cgt_.InternalSwap(&other->cgt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgChannelStatusSubReq::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse::XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse() {}
XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse::XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse::MergeFrom(const XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[5];
}
void XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse::XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse() {}
XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse::XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse::MergeFrom(const XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[6];
}
void XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgChannelStatusSubRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgChannelStatusSubRsp::kUsrStatusFieldNumber;
const int XmsgChannelStatusSubRsp::kGroupStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgChannelStatusSubRsp::XmsgChannelStatusSubRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusSubRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgChannelStatusSubRsp)
}
XmsgChannelStatusSubRsp::XmsgChannelStatusSubRsp(const XmsgChannelStatusSubRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  usrstatus_.MergeFrom(from.usrstatus_);
  groupstatus_.MergeFrom(from.groupstatus_);
  // @@protoc_insertion_point(copy_constructor:XmsgChannelStatusSubRsp)
}

void XmsgChannelStatusSubRsp::SharedCtor() {
  _cached_size_ = 0;
}

XmsgChannelStatusSubRsp::~XmsgChannelStatusSubRsp() {
  // @@protoc_insertion_point(destructor:XmsgChannelStatusSubRsp)
  SharedDtor();
}

void XmsgChannelStatusSubRsp::SharedDtor() {
}

void XmsgChannelStatusSubRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgChannelStatusSubRsp::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgChannelStatusSubRsp& XmsgChannelStatusSubRsp::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusSubRsp();
  return *internal_default_instance();
}

XmsgChannelStatusSubRsp* XmsgChannelStatusSubRsp::New(::google::protobuf::Arena* arena) const {
  XmsgChannelStatusSubRsp* n = new XmsgChannelStatusSubRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgChannelStatusSubRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgChannelStatusSubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  usrstatus_.Clear();
  groupstatus_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgChannelStatusSubRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgChannelStatusSubRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .XmsgChannelStatusUsrStatus> usrStatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse,
              ::std::string, ::XmsgChannelStatusUsrStatus,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusUsrStatus > > parser(&usrstatus_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgChannelStatusSubRsp.UsrStatusEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .XmsgChannelStatusGroupStatus> groupStatus = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse,
              ::std::string, ::XmsgChannelStatusGroupStatus,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusGroupStatus > > parser(&groupstatus_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgChannelStatusSubRsp.GroupStatusEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgChannelStatusSubRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgChannelStatusSubRsp)
  return false;
#undef DO_
}

void XmsgChannelStatusSubRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgChannelStatusSubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .XmsgChannelStatusUsrStatus> usrStatus = 1;
  if (!this->usrstatus().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusUsrStatus >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgChannelStatusSubRsp.UsrStatusEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->usrstatus().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->usrstatus().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusUsrStatus >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::XmsgChannelStatusUsrStatus >::const_iterator
          it = this->usrstatus().begin();
          it != this->usrstatus().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(usrstatus_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::XmsgChannelStatusUsrStatus >::const_iterator
          it = this->usrstatus().begin();
          it != this->usrstatus().end(); ++it) {
        entry.reset(usrstatus_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .XmsgChannelStatusGroupStatus> groupStatus = 2;
  if (!this->groupstatus().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusGroupStatus >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgChannelStatusSubRsp.GroupStatusEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->groupstatus().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->groupstatus().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusGroupStatus >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::XmsgChannelStatusGroupStatus >::const_iterator
          it = this->groupstatus().begin();
          it != this->groupstatus().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(groupstatus_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::XmsgChannelStatusGroupStatus >::const_iterator
          it = this->groupstatus().begin();
          it != this->groupstatus().end(); ++it) {
        entry.reset(groupstatus_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgChannelStatusSubRsp)
}

::google::protobuf::uint8* XmsgChannelStatusSubRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgChannelStatusSubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .XmsgChannelStatusUsrStatus> usrStatus = 1;
  if (!this->usrstatus().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusUsrStatus >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgChannelStatusSubRsp.UsrStatusEntry.key");
      }
    };

    if (deterministic &&
        this->usrstatus().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->usrstatus().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusUsrStatus >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::XmsgChannelStatusUsrStatus >::const_iterator
          it = this->usrstatus().begin();
          it != this->usrstatus().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(usrstatus_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::XmsgChannelStatusUsrStatus >::const_iterator
          it = this->usrstatus().begin();
          it != this->usrstatus().end(); ++it) {
        entry.reset(usrstatus_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .XmsgChannelStatusGroupStatus> groupStatus = 2;
  if (!this->groupstatus().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusGroupStatus >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgChannelStatusSubRsp.GroupStatusEntry.key");
      }
    };

    if (deterministic &&
        this->groupstatus().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->groupstatus().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusGroupStatus >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::XmsgChannelStatusGroupStatus >::const_iterator
          it = this->groupstatus().begin();
          it != this->groupstatus().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(groupstatus_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::XmsgChannelStatusGroupStatus >::const_iterator
          it = this->groupstatus().begin();
          it != this->groupstatus().end(); ++it) {
        entry.reset(groupstatus_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgChannelStatusSubRsp)
  return target;
}

size_t XmsgChannelStatusSubRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgChannelStatusSubRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .XmsgChannelStatusUsrStatus> usrStatus = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->usrstatus_size());
  {
    ::google::protobuf::scoped_ptr<XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::XmsgChannelStatusUsrStatus >::const_iterator
        it = this->usrstatus().begin();
        it != this->usrstatus().end(); ++it) {
      entry.reset(usrstatus_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, .XmsgChannelStatusGroupStatus> groupStatus = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->groupstatus_size());
  {
    ::google::protobuf::scoped_ptr<XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::XmsgChannelStatusGroupStatus >::const_iterator
        it = this->groupstatus().begin();
        it != this->groupstatus().end(); ++it) {
      entry.reset(groupstatus_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgChannelStatusSubRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgChannelStatusSubRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgChannelStatusSubRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgChannelStatusSubRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgChannelStatusSubRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgChannelStatusSubRsp)
    MergeFrom(*source);
  }
}

void XmsgChannelStatusSubRsp::MergeFrom(const XmsgChannelStatusSubRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgChannelStatusSubRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  usrstatus_.MergeFrom(from.usrstatus_);
  groupstatus_.MergeFrom(from.groupstatus_);
}

void XmsgChannelStatusSubRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgChannelStatusSubRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgChannelStatusSubRsp::CopyFrom(const XmsgChannelStatusSubRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgChannelStatusSubRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgChannelStatusSubRsp::IsInitialized() const {
  return true;
}

void XmsgChannelStatusSubRsp::Swap(XmsgChannelStatusSubRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgChannelStatusSubRsp::InternalSwap(XmsgChannelStatusSubRsp* other) {
  using std::swap;
  usrstatus_.Swap(&other->usrstatus_);
  groupstatus_.Swap(&other->groupstatus_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgChannelStatusSubRsp::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgChannelStatusUnSubReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgChannelStatusUnSubReq::kCgtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgChannelStatusUnSubReq::XmsgChannelStatusUnSubReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusUnSubReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgChannelStatusUnSubReq)
}
XmsgChannelStatusUnSubReq::XmsgChannelStatusUnSubReq(const XmsgChannelStatusUnSubReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      cgt_(from.cgt_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XmsgChannelStatusUnSubReq)
}

void XmsgChannelStatusUnSubReq::SharedCtor() {
  _cached_size_ = 0;
}

XmsgChannelStatusUnSubReq::~XmsgChannelStatusUnSubReq() {
  // @@protoc_insertion_point(destructor:XmsgChannelStatusUnSubReq)
  SharedDtor();
}

void XmsgChannelStatusUnSubReq::SharedDtor() {
}

void XmsgChannelStatusUnSubReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgChannelStatusUnSubReq::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgChannelStatusUnSubReq& XmsgChannelStatusUnSubReq::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusUnSubReq();
  return *internal_default_instance();
}

XmsgChannelStatusUnSubReq* XmsgChannelStatusUnSubReq::New(::google::protobuf::Arena* arena) const {
  XmsgChannelStatusUnSubReq* n = new XmsgChannelStatusUnSubReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgChannelStatusUnSubReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgChannelStatusUnSubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cgt_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgChannelStatusUnSubReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgChannelStatusUnSubReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt(this->cgt_size() - 1).data(),
            static_cast<int>(this->cgt(this->cgt_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgChannelStatusUnSubReq.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgChannelStatusUnSubReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgChannelStatusUnSubReq)
  return false;
#undef DO_
}

void XmsgChannelStatusUnSubReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgChannelStatusUnSubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string cgt = 1;
  for (int i = 0, n = this->cgt_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt(i).data(), static_cast<int>(this->cgt(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgChannelStatusUnSubReq.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->cgt(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgChannelStatusUnSubReq)
}

::google::protobuf::uint8* XmsgChannelStatusUnSubReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgChannelStatusUnSubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string cgt = 1;
  for (int i = 0, n = this->cgt_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt(i).data(), static_cast<int>(this->cgt(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgChannelStatusUnSubReq.cgt");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->cgt(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgChannelStatusUnSubReq)
  return target;
}

size_t XmsgChannelStatusUnSubReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgChannelStatusUnSubReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string cgt = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->cgt_size());
  for (int i = 0, n = this->cgt_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cgt(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgChannelStatusUnSubReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgChannelStatusUnSubReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgChannelStatusUnSubReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgChannelStatusUnSubReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgChannelStatusUnSubReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgChannelStatusUnSubReq)
    MergeFrom(*source);
  }
}

void XmsgChannelStatusUnSubReq::MergeFrom(const XmsgChannelStatusUnSubReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgChannelStatusUnSubReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cgt_.MergeFrom(from.cgt_);
}

void XmsgChannelStatusUnSubReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgChannelStatusUnSubReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgChannelStatusUnSubReq::CopyFrom(const XmsgChannelStatusUnSubReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgChannelStatusUnSubReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgChannelStatusUnSubReq::IsInitialized() const {
  return true;
}

void XmsgChannelStatusUnSubReq::Swap(XmsgChannelStatusUnSubReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgChannelStatusUnSubReq::InternalSwap(XmsgChannelStatusUnSubReq* other) {
  using std::swap;
  cgt_.InternalSwap(&other->cgt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgChannelStatusUnSubReq::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse::XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse() {}
XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse::XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse::MergeFrom(const XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[9];
}
void XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgChannelStatusUnSubRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgChannelStatusUnSubRsp::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgChannelStatusUnSubRsp::XmsgChannelStatusUnSubRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusUnSubRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgChannelStatusUnSubRsp)
}
XmsgChannelStatusUnSubRsp::XmsgChannelStatusUnSubRsp(const XmsgChannelStatusUnSubRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  // @@protoc_insertion_point(copy_constructor:XmsgChannelStatusUnSubRsp)
}

void XmsgChannelStatusUnSubRsp::SharedCtor() {
  _cached_size_ = 0;
}

XmsgChannelStatusUnSubRsp::~XmsgChannelStatusUnSubRsp() {
  // @@protoc_insertion_point(destructor:XmsgChannelStatusUnSubRsp)
  SharedDtor();
}

void XmsgChannelStatusUnSubRsp::SharedDtor() {
}

void XmsgChannelStatusUnSubRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgChannelStatusUnSubRsp::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgChannelStatusUnSubRsp& XmsgChannelStatusUnSubRsp::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusUnSubRsp();
  return *internal_default_instance();
}

XmsgChannelStatusUnSubRsp* XmsgChannelStatusUnSubRsp::New(::google::protobuf::Arena* arena) const {
  XmsgChannelStatusUnSubRsp* n = new XmsgChannelStatusUnSubRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgChannelStatusUnSubRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgChannelStatusUnSubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgChannelStatusUnSubRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgChannelStatusUnSubRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> ext = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgChannelStatusUnSubRsp.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgChannelStatusUnSubRsp.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgChannelStatusUnSubRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgChannelStatusUnSubRsp)
  return false;
#undef DO_
}

void XmsgChannelStatusUnSubRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgChannelStatusUnSubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgChannelStatusUnSubRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgChannelStatusUnSubRsp.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgChannelStatusUnSubRsp)
}

::google::protobuf::uint8* XmsgChannelStatusUnSubRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgChannelStatusUnSubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgChannelStatusUnSubRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgChannelStatusUnSubRsp.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgChannelStatusUnSubRsp)
  return target;
}

size_t XmsgChannelStatusUnSubRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgChannelStatusUnSubRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgChannelStatusUnSubRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgChannelStatusUnSubRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgChannelStatusUnSubRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgChannelStatusUnSubRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgChannelStatusUnSubRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgChannelStatusUnSubRsp)
    MergeFrom(*source);
  }
}

void XmsgChannelStatusUnSubRsp::MergeFrom(const XmsgChannelStatusUnSubRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgChannelStatusUnSubRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
}

void XmsgChannelStatusUnSubRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgChannelStatusUnSubRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgChannelStatusUnSubRsp::CopyFrom(const XmsgChannelStatusUnSubRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgChannelStatusUnSubRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgChannelStatusUnSubRsp::IsInitialized() const {
  return true;
}

void XmsgChannelStatusUnSubRsp::Swap(XmsgChannelStatusUnSubRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgChannelStatusUnSubRsp::InternalSwap(XmsgChannelStatusUnSubRsp* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgChannelStatusUnSubRsp::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgChannelStatusPubUsrStatusNotice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgChannelStatusPubUsrStatusNotice::kCgtFieldNumber;
const int XmsgChannelStatusPubUsrStatusNotice::kPlatFieldNumber;
const int XmsgChannelStatusPubUsrStatusNotice::kDidFieldNumber;
const int XmsgChannelStatusPubUsrStatusNotice::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgChannelStatusPubUsrStatusNotice::XmsgChannelStatusPubUsrStatusNotice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusPubUsrStatusNotice();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgChannelStatusPubUsrStatusNotice)
}
XmsgChannelStatusPubUsrStatusNotice::XmsgChannelStatusPubUsrStatusNotice(const XmsgChannelStatusPubUsrStatusNotice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  plat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plat().size() > 0) {
    plat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plat_);
  }
  did_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.did().size() > 0) {
    did_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.did_);
  }
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status().size() > 0) {
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgChannelStatusPubUsrStatusNotice)
}

void XmsgChannelStatusPubUsrStatusNotice::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgChannelStatusPubUsrStatusNotice::~XmsgChannelStatusPubUsrStatusNotice() {
  // @@protoc_insertion_point(destructor:XmsgChannelStatusPubUsrStatusNotice)
  SharedDtor();
}

void XmsgChannelStatusPubUsrStatusNotice::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgChannelStatusPubUsrStatusNotice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgChannelStatusPubUsrStatusNotice::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgChannelStatusPubUsrStatusNotice& XmsgChannelStatusPubUsrStatusNotice::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusPubUsrStatusNotice();
  return *internal_default_instance();
}

XmsgChannelStatusPubUsrStatusNotice* XmsgChannelStatusPubUsrStatusNotice::New(::google::protobuf::Arena* arena) const {
  XmsgChannelStatusPubUsrStatusNotice* n = new XmsgChannelStatusPubUsrStatusNotice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgChannelStatusPubUsrStatusNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgChannelStatusPubUsrStatusNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgChannelStatusPubUsrStatusNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgChannelStatusPubUsrStatusNotice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgChannelStatusPubUsrStatusNotice.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string plat = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plat()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->plat().data(), static_cast<int>(this->plat().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgChannelStatusPubUsrStatusNotice.plat"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string did = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_did()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->did().data(), static_cast<int>(this->did().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgChannelStatusPubUsrStatusNotice.did"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status().data(), static_cast<int>(this->status().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgChannelStatusPubUsrStatusNotice.status"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgChannelStatusPubUsrStatusNotice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgChannelStatusPubUsrStatusNotice)
  return false;
#undef DO_
}

void XmsgChannelStatusPubUsrStatusNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgChannelStatusPubUsrStatusNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgChannelStatusPubUsrStatusNotice.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  // string plat = 2;
  if (this->plat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plat().data(), static_cast<int>(this->plat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgChannelStatusPubUsrStatusNotice.plat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->plat(), output);
  }

  // string did = 3;
  if (this->did().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->did().data(), static_cast<int>(this->did().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgChannelStatusPubUsrStatusNotice.did");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->did(), output);
  }

  // string status = 4;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgChannelStatusPubUsrStatusNotice.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgChannelStatusPubUsrStatusNotice)
}

::google::protobuf::uint8* XmsgChannelStatusPubUsrStatusNotice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgChannelStatusPubUsrStatusNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgChannelStatusPubUsrStatusNotice.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  // string plat = 2;
  if (this->plat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plat().data(), static_cast<int>(this->plat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgChannelStatusPubUsrStatusNotice.plat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->plat(), target);
  }

  // string did = 3;
  if (this->did().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->did().data(), static_cast<int>(this->did().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgChannelStatusPubUsrStatusNotice.did");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->did(), target);
  }

  // string status = 4;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgChannelStatusPubUsrStatusNotice.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgChannelStatusPubUsrStatusNotice)
  return target;
}

size_t XmsgChannelStatusPubUsrStatusNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgChannelStatusPubUsrStatusNotice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  // string plat = 2;
  if (this->plat().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plat());
  }

  // string did = 3;
  if (this->did().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->did());
  }

  // string status = 4;
  if (this->status().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgChannelStatusPubUsrStatusNotice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgChannelStatusPubUsrStatusNotice)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgChannelStatusPubUsrStatusNotice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgChannelStatusPubUsrStatusNotice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgChannelStatusPubUsrStatusNotice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgChannelStatusPubUsrStatusNotice)
    MergeFrom(*source);
  }
}

void XmsgChannelStatusPubUsrStatusNotice::MergeFrom(const XmsgChannelStatusPubUsrStatusNotice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgChannelStatusPubUsrStatusNotice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  if (from.plat().size() > 0) {

    plat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plat_);
  }
  if (from.did().size() > 0) {

    did_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.did_);
  }
  if (from.status().size() > 0) {

    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
}

void XmsgChannelStatusPubUsrStatusNotice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgChannelStatusPubUsrStatusNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgChannelStatusPubUsrStatusNotice::CopyFrom(const XmsgChannelStatusPubUsrStatusNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgChannelStatusPubUsrStatusNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgChannelStatusPubUsrStatusNotice::IsInitialized() const {
  return true;
}

void XmsgChannelStatusPubUsrStatusNotice::Swap(XmsgChannelStatusPubUsrStatusNotice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgChannelStatusPubUsrStatusNotice::InternalSwap(XmsgChannelStatusPubUsrStatusNotice* other) {
  using std::swap;
  cgt_.Swap(&other->cgt_);
  plat_.Swap(&other->plat_);
  did_.Swap(&other->did_);
  status_.Swap(&other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgChannelStatusPubUsrStatusNotice::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgChannelStatusPubGroupStatusNotice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgChannelStatusPubGroupStatusNotice::kCgtFieldNumber;
const int XmsgChannelStatusPubGroupStatusNotice::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgChannelStatusPubGroupStatusNotice::XmsgChannelStatusPubGroupStatusNotice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusPubGroupStatusNotice();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgChannelStatusPubGroupStatusNotice)
}
XmsgChannelStatusPubGroupStatusNotice::XmsgChannelStatusPubGroupStatusNotice(const XmsgChannelStatusPubGroupStatusNotice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status().size() > 0) {
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgChannelStatusPubGroupStatusNotice)
}

void XmsgChannelStatusPubGroupStatusNotice::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgChannelStatusPubGroupStatusNotice::~XmsgChannelStatusPubGroupStatusNotice() {
  // @@protoc_insertion_point(destructor:XmsgChannelStatusPubGroupStatusNotice)
  SharedDtor();
}

void XmsgChannelStatusPubGroupStatusNotice::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgChannelStatusPubGroupStatusNotice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgChannelStatusPubGroupStatusNotice::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgChannelStatusPubGroupStatusNotice& XmsgChannelStatusPubGroupStatusNotice::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusPubGroupStatusNotice();
  return *internal_default_instance();
}

XmsgChannelStatusPubGroupStatusNotice* XmsgChannelStatusPubGroupStatusNotice::New(::google::protobuf::Arena* arena) const {
  XmsgChannelStatusPubGroupStatusNotice* n = new XmsgChannelStatusPubGroupStatusNotice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgChannelStatusPubGroupStatusNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgChannelStatusPubGroupStatusNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgChannelStatusPubGroupStatusNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgChannelStatusPubGroupStatusNotice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgChannelStatusPubGroupStatusNotice.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status().data(), static_cast<int>(this->status().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgChannelStatusPubGroupStatusNotice.status"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgChannelStatusPubGroupStatusNotice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgChannelStatusPubGroupStatusNotice)
  return false;
#undef DO_
}

void XmsgChannelStatusPubGroupStatusNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgChannelStatusPubGroupStatusNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgChannelStatusPubGroupStatusNotice.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  // string status = 2;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgChannelStatusPubGroupStatusNotice.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgChannelStatusPubGroupStatusNotice)
}

::google::protobuf::uint8* XmsgChannelStatusPubGroupStatusNotice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgChannelStatusPubGroupStatusNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgChannelStatusPubGroupStatusNotice.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  // string status = 2;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgChannelStatusPubGroupStatusNotice.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgChannelStatusPubGroupStatusNotice)
  return target;
}

size_t XmsgChannelStatusPubGroupStatusNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgChannelStatusPubGroupStatusNotice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  // string status = 2;
  if (this->status().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgChannelStatusPubGroupStatusNotice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgChannelStatusPubGroupStatusNotice)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgChannelStatusPubGroupStatusNotice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgChannelStatusPubGroupStatusNotice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgChannelStatusPubGroupStatusNotice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgChannelStatusPubGroupStatusNotice)
    MergeFrom(*source);
  }
}

void XmsgChannelStatusPubGroupStatusNotice::MergeFrom(const XmsgChannelStatusPubGroupStatusNotice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgChannelStatusPubGroupStatusNotice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  if (from.status().size() > 0) {

    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
}

void XmsgChannelStatusPubGroupStatusNotice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgChannelStatusPubGroupStatusNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgChannelStatusPubGroupStatusNotice::CopyFrom(const XmsgChannelStatusPubGroupStatusNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgChannelStatusPubGroupStatusNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgChannelStatusPubGroupStatusNotice::IsInitialized() const {
  return true;
}

void XmsgChannelStatusPubGroupStatusNotice::Swap(XmsgChannelStatusPubGroupStatusNotice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgChannelStatusPubGroupStatusNotice::InternalSwap(XmsgChannelStatusPubGroupStatusNotice* other) {
  using std::swap;
  cgt_.Swap(&other->cgt_);
  status_.Swap(&other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgChannelStatusPubGroupStatusNotice::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::kPlatFieldNumber;
const int XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::kDidFieldNumber;
const int XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus)
}
XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus(const XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  plat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plat().size() > 0) {
    plat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plat_);
  }
  did_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.did().size() > 0) {
    did_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.did_);
  }
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status().size() > 0) {
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus)
}

void XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::SharedCtor() {
  plat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::~XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus() {
  // @@protoc_insertion_point(destructor:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus)
  SharedDtor();
}

void XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::SharedDtor() {
  plat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus& XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus();
  return *internal_default_instance();
}

XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus* XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::New(::google::protobuf::Arena* arena) const {
  XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus* n = new XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  plat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string plat = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plat()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->plat().data(), static_cast<int>(this->plat().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus.plat"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string did = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_did()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->did().data(), static_cast<int>(this->did().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus.did"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status().data(), static_cast<int>(this->status().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus.status"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus)
  return false;
#undef DO_
}

void XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string plat = 1;
  if (this->plat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plat().data(), static_cast<int>(this->plat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus.plat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->plat(), output);
  }

  // string did = 2;
  if (this->did().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->did().data(), static_cast<int>(this->did().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus.did");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->did(), output);
  }

  // string status = 3;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus)
}

::google::protobuf::uint8* XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string plat = 1;
  if (this->plat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plat().data(), static_cast<int>(this->plat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus.plat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->plat(), target);
  }

  // string did = 2;
  if (this->did().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->did().data(), static_cast<int>(this->did().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus.did");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->did(), target);
  }

  // string status = 3;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus)
  return target;
}

size_t XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string plat = 1;
  if (this->plat().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plat());
  }

  // string did = 2;
  if (this->did().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->did());
  }

  // string status = 3;
  if (this->status().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus)
    MergeFrom(*source);
  }
}

void XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::MergeFrom(const XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.plat().size() > 0) {

    plat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plat_);
  }
  if (from.did().size() > 0) {

    did_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.did_);
  }
  if (from.status().size() > 0) {

    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
}

void XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::CopyFrom(const XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::IsInitialized() const {
  return true;
}

void XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::Swap(XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::InternalSwap(XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus* other) {
  using std::swap;
  plat_.Swap(&other->plat_);
  did_.Swap(&other->did_);
  status_.Swap(&other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgChannelStatusUsrStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgChannelStatusUsrStatus::kClientFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgChannelStatusUsrStatus::XmsgChannelStatusUsrStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusUsrStatus();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgChannelStatusUsrStatus)
}
XmsgChannelStatusUsrStatus::XmsgChannelStatusUsrStatus(const XmsgChannelStatusUsrStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      client_(from.client_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XmsgChannelStatusUsrStatus)
}

void XmsgChannelStatusUsrStatus::SharedCtor() {
  _cached_size_ = 0;
}

XmsgChannelStatusUsrStatus::~XmsgChannelStatusUsrStatus() {
  // @@protoc_insertion_point(destructor:XmsgChannelStatusUsrStatus)
  SharedDtor();
}

void XmsgChannelStatusUsrStatus::SharedDtor() {
}

void XmsgChannelStatusUsrStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgChannelStatusUsrStatus::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgChannelStatusUsrStatus& XmsgChannelStatusUsrStatus::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusUsrStatus();
  return *internal_default_instance();
}

XmsgChannelStatusUsrStatus* XmsgChannelStatusUsrStatus::New(::google::protobuf::Arena* arena) const {
  XmsgChannelStatusUsrStatus* n = new XmsgChannelStatusUsrStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgChannelStatusUsrStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgChannelStatusUsrStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  client_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgChannelStatusUsrStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgChannelStatusUsrStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus client = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_client()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgChannelStatusUsrStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgChannelStatusUsrStatus)
  return false;
#undef DO_
}

void XmsgChannelStatusUsrStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgChannelStatusUsrStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus client = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->client_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->client(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgChannelStatusUsrStatus)
}

::google::protobuf::uint8* XmsgChannelStatusUsrStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgChannelStatusUsrStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus client = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->client_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->client(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgChannelStatusUsrStatus)
  return target;
}

size_t XmsgChannelStatusUsrStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgChannelStatusUsrStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus client = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->client_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->client(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgChannelStatusUsrStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgChannelStatusUsrStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgChannelStatusUsrStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgChannelStatusUsrStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgChannelStatusUsrStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgChannelStatusUsrStatus)
    MergeFrom(*source);
  }
}

void XmsgChannelStatusUsrStatus::MergeFrom(const XmsgChannelStatusUsrStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgChannelStatusUsrStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  client_.MergeFrom(from.client_);
}

void XmsgChannelStatusUsrStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgChannelStatusUsrStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgChannelStatusUsrStatus::CopyFrom(const XmsgChannelStatusUsrStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgChannelStatusUsrStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgChannelStatusUsrStatus::IsInitialized() const {
  return true;
}

void XmsgChannelStatusUsrStatus::Swap(XmsgChannelStatusUsrStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgChannelStatusUsrStatus::InternalSwap(XmsgChannelStatusUsrStatus* other) {
  using std::swap;
  client_.InternalSwap(&other->client_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgChannelStatusUsrStatus::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgChannelStatusGroupStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgChannelStatusGroupStatus::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgChannelStatusGroupStatus::XmsgChannelStatusGroupStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusGroupStatus();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgChannelStatusGroupStatus)
}
XmsgChannelStatusGroupStatus::XmsgChannelStatusGroupStatus(const XmsgChannelStatusGroupStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status().size() > 0) {
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgChannelStatusGroupStatus)
}

void XmsgChannelStatusGroupStatus::SharedCtor() {
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgChannelStatusGroupStatus::~XmsgChannelStatusGroupStatus() {
  // @@protoc_insertion_point(destructor:XmsgChannelStatusGroupStatus)
  SharedDtor();
}

void XmsgChannelStatusGroupStatus::SharedDtor() {
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgChannelStatusGroupStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgChannelStatusGroupStatus::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgChannelStatusGroupStatus& XmsgChannelStatusGroupStatus::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusGroupStatus();
  return *internal_default_instance();
}

XmsgChannelStatusGroupStatus* XmsgChannelStatusGroupStatus::New(::google::protobuf::Arena* arena) const {
  XmsgChannelStatusGroupStatus* n = new XmsgChannelStatusGroupStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgChannelStatusGroupStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgChannelStatusGroupStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgChannelStatusGroupStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgChannelStatusGroupStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status().data(), static_cast<int>(this->status().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgChannelStatusGroupStatus.status"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgChannelStatusGroupStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgChannelStatusGroupStatus)
  return false;
#undef DO_
}

void XmsgChannelStatusGroupStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgChannelStatusGroupStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string status = 1;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgChannelStatusGroupStatus.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgChannelStatusGroupStatus)
}

::google::protobuf::uint8* XmsgChannelStatusGroupStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgChannelStatusGroupStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string status = 1;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgChannelStatusGroupStatus.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgChannelStatusGroupStatus)
  return target;
}

size_t XmsgChannelStatusGroupStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgChannelStatusGroupStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string status = 1;
  if (this->status().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgChannelStatusGroupStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgChannelStatusGroupStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgChannelStatusGroupStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgChannelStatusGroupStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgChannelStatusGroupStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgChannelStatusGroupStatus)
    MergeFrom(*source);
  }
}

void XmsgChannelStatusGroupStatus::MergeFrom(const XmsgChannelStatusGroupStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgChannelStatusGroupStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status().size() > 0) {

    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
}

void XmsgChannelStatusGroupStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgChannelStatusGroupStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgChannelStatusGroupStatus::CopyFrom(const XmsgChannelStatusGroupStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgChannelStatusGroupStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgChannelStatusGroupStatus::IsInitialized() const {
  return true;
}

void XmsgChannelStatusGroupStatus::Swap(XmsgChannelStatusGroupStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgChannelStatusGroupStatus::InternalSwap(XmsgChannelStatusGroupStatus* other) {
  using std::swap;
  status_.Swap(&other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgChannelStatusGroupStatus::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
