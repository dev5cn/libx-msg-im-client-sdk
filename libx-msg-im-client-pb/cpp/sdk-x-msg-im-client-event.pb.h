// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sdk-x-msg-im-client-event.proto

#ifndef PROTOBUF_sdk_2dx_2dmsg_2dim_2dclient_2devent_2eproto__INCLUDED
#define PROTOBUF_sdk_2dx_2dmsg_2dim_2dclient_2devent_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "db-x-msg-im-client-common.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_sdk_2dx_2dmsg_2dim_2dclient_2devent_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[8];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsXmsgImSdkEventAdapter_XmsgImSdkEventNetNoticeImpl();
void InitDefaultsXmsgImSdkEventAdapter_XmsgImSdkEventNetNotice();
void InitDefaultsXmsgImSdkEventAdapter_XmsgImSdkEventNetReqImpl();
void InitDefaultsXmsgImSdkEventAdapter_XmsgImSdkEventNetReq();
void InitDefaultsXmsgImSdkEventAdapter_XmsgImSdkEventNetRspImpl();
void InitDefaultsXmsgImSdkEventAdapter_XmsgImSdkEventNetRsp();
void InitDefaultsXmsgImSdkEventAdapter_XmsgImSdkEventDbRspImpl();
void InitDefaultsXmsgImSdkEventAdapter_XmsgImSdkEventDbRsp();
void InitDefaultsXmsgImSdkEventAdapter_XmsgImSdkEventCxxLogImpl();
void InitDefaultsXmsgImSdkEventAdapter_XmsgImSdkEventCxxLog();
void InitDefaultsXmsgImSdkEventAdapterImpl();
void InitDefaultsXmsgImSdkEventAdapter();
void InitDefaultsXmsgImSdkEventXmsgImAuthImpl();
void InitDefaultsXmsgImSdkEventXmsgImAuth();
void InitDefaultsXmsgImSdkEventXmsgApImpl();
void InitDefaultsXmsgImSdkEventXmsgAp();
inline void InitDefaults() {
  InitDefaultsXmsgImSdkEventAdapter_XmsgImSdkEventNetNotice();
  InitDefaultsXmsgImSdkEventAdapter_XmsgImSdkEventNetReq();
  InitDefaultsXmsgImSdkEventAdapter_XmsgImSdkEventNetRsp();
  InitDefaultsXmsgImSdkEventAdapter_XmsgImSdkEventDbRsp();
  InitDefaultsXmsgImSdkEventAdapter_XmsgImSdkEventCxxLog();
  InitDefaultsXmsgImSdkEventAdapter();
  InitDefaultsXmsgImSdkEventXmsgImAuth();
  InitDefaultsXmsgImSdkEventXmsgAp();
}
}  // namespace protobuf_sdk_2dx_2dmsg_2dim_2dclient_2devent_2eproto
class XmsgImSdkEventAdapter;
class XmsgImSdkEventAdapterDefaultTypeInternal;
extern XmsgImSdkEventAdapterDefaultTypeInternal _XmsgImSdkEventAdapter_default_instance_;
class XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog;
class XmsgImSdkEventAdapter_XmsgImSdkEventCxxLogDefaultTypeInternal;
extern XmsgImSdkEventAdapter_XmsgImSdkEventCxxLogDefaultTypeInternal _XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog_default_instance_;
class XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp;
class XmsgImSdkEventAdapter_XmsgImSdkEventDbRspDefaultTypeInternal;
extern XmsgImSdkEventAdapter_XmsgImSdkEventDbRspDefaultTypeInternal _XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp_default_instance_;
class XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice;
class XmsgImSdkEventAdapter_XmsgImSdkEventNetNoticeDefaultTypeInternal;
extern XmsgImSdkEventAdapter_XmsgImSdkEventNetNoticeDefaultTypeInternal _XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice_default_instance_;
class XmsgImSdkEventAdapter_XmsgImSdkEventNetReq;
class XmsgImSdkEventAdapter_XmsgImSdkEventNetReqDefaultTypeInternal;
extern XmsgImSdkEventAdapter_XmsgImSdkEventNetReqDefaultTypeInternal _XmsgImSdkEventAdapter_XmsgImSdkEventNetReq_default_instance_;
class XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp;
class XmsgImSdkEventAdapter_XmsgImSdkEventNetRspDefaultTypeInternal;
extern XmsgImSdkEventAdapter_XmsgImSdkEventNetRspDefaultTypeInternal _XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp_default_instance_;
class XmsgImSdkEventXmsgAp;
class XmsgImSdkEventXmsgApDefaultTypeInternal;
extern XmsgImSdkEventXmsgApDefaultTypeInternal _XmsgImSdkEventXmsgAp_default_instance_;
class XmsgImSdkEventXmsgImAuth;
class XmsgImSdkEventXmsgImAuthDefaultTypeInternal;
extern XmsgImSdkEventXmsgImAuthDefaultTypeInternal _XmsgImSdkEventXmsgImAuth_default_instance_;

enum XmsgImSdkEventType {
  X_MSG_IM_SDK_EVENT_TYPE_NET_NOTICE = 0,
  X_MSG_IM_SDK_EVENT_TYPE_NET_REQ = 1,
  X_MSG_IM_SDK_EVENT_TYPE_NET_RSP = 2,
  X_MSG_IM_SDK_EVENT_TYPE_DB_RSP = 3,
  X_MSG_IM_SDK_EVENT_TYPE_CXX_LOG = 4,
  XmsgImSdkEventType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  XmsgImSdkEventType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool XmsgImSdkEventType_IsValid(int value);
const XmsgImSdkEventType XmsgImSdkEventType_MIN = X_MSG_IM_SDK_EVENT_TYPE_NET_NOTICE;
const XmsgImSdkEventType XmsgImSdkEventType_MAX = X_MSG_IM_SDK_EVENT_TYPE_CXX_LOG;
const int XmsgImSdkEventType_ARRAYSIZE = XmsgImSdkEventType_MAX + 1;

const ::google::protobuf::EnumDescriptor* XmsgImSdkEventType_descriptor();
inline const ::std::string& XmsgImSdkEventType_Name(XmsgImSdkEventType value) {
  return ::google::protobuf::internal::NameOfEnum(
    XmsgImSdkEventType_descriptor(), value);
}
inline bool XmsgImSdkEventType_Parse(
    const ::std::string& name, XmsgImSdkEventType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<XmsgImSdkEventType>(
    XmsgImSdkEventType_descriptor(), name, value);
}
// ===================================================================

class XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImSdkEventAdapter.XmsgImSdkEventNetNotice) */ {
 public:
  XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice();
  virtual ~XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice();

  XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice(const XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice& from);

  inline XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice& operator=(const XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice(XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice&& from) noexcept
    : XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice() {
    *this = ::std::move(from);
  }

  inline XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice& operator=(XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice* internal_default_instance() {
    return reinterpret_cast<const XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice*>(
               &_XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice* other);
  friend void swap(XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice& a, XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice& from);
  void MergeFrom(const XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg = 1;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // bytes dat = 2;
  void clear_dat();
  static const int kDatFieldNumber = 2;
  const ::std::string& dat() const;
  void set_dat(const ::std::string& value);
  #if LANG_CXX11
  void set_dat(::std::string&& value);
  #endif
  void set_dat(const char* value);
  void set_dat(const void* value, size_t size);
  ::std::string* mutable_dat();
  ::std::string* release_dat();
  void set_allocated_dat(::std::string* dat);

  // @@protoc_insertion_point(class_scope:XmsgImSdkEventAdapter.XmsgImSdkEventNetNotice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::internal::ArenaStringPtr dat_;
  mutable int _cached_size_;
  friend struct ::protobuf_sdk_2dx_2dmsg_2dim_2dclient_2devent_2eproto::TableStruct;
  friend void ::protobuf_sdk_2dx_2dmsg_2dim_2dclient_2devent_2eproto::InitDefaultsXmsgImSdkEventAdapter_XmsgImSdkEventNetNoticeImpl();
};
// -------------------------------------------------------------------

class XmsgImSdkEventAdapter_XmsgImSdkEventNetReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImSdkEventAdapter.XmsgImSdkEventNetReq) */ {
 public:
  XmsgImSdkEventAdapter_XmsgImSdkEventNetReq();
  virtual ~XmsgImSdkEventAdapter_XmsgImSdkEventNetReq();

  XmsgImSdkEventAdapter_XmsgImSdkEventNetReq(const XmsgImSdkEventAdapter_XmsgImSdkEventNetReq& from);

  inline XmsgImSdkEventAdapter_XmsgImSdkEventNetReq& operator=(const XmsgImSdkEventAdapter_XmsgImSdkEventNetReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImSdkEventAdapter_XmsgImSdkEventNetReq(XmsgImSdkEventAdapter_XmsgImSdkEventNetReq&& from) noexcept
    : XmsgImSdkEventAdapter_XmsgImSdkEventNetReq() {
    *this = ::std::move(from);
  }

  inline XmsgImSdkEventAdapter_XmsgImSdkEventNetReq& operator=(XmsgImSdkEventAdapter_XmsgImSdkEventNetReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImSdkEventAdapter_XmsgImSdkEventNetReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImSdkEventAdapter_XmsgImSdkEventNetReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImSdkEventAdapter_XmsgImSdkEventNetReq*>(
               &_XmsgImSdkEventAdapter_XmsgImSdkEventNetReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(XmsgImSdkEventAdapter_XmsgImSdkEventNetReq* other);
  friend void swap(XmsgImSdkEventAdapter_XmsgImSdkEventNetReq& a, XmsgImSdkEventAdapter_XmsgImSdkEventNetReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImSdkEventAdapter_XmsgImSdkEventNetReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImSdkEventAdapter_XmsgImSdkEventNetReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImSdkEventAdapter_XmsgImSdkEventNetReq& from);
  void MergeFrom(const XmsgImSdkEventAdapter_XmsgImSdkEventNetReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImSdkEventAdapter_XmsgImSdkEventNetReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg = 2;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // bytes dat = 3;
  void clear_dat();
  static const int kDatFieldNumber = 3;
  const ::std::string& dat() const;
  void set_dat(const ::std::string& value);
  #if LANG_CXX11
  void set_dat(::std::string&& value);
  #endif
  void set_dat(const char* value);
  void set_dat(const void* value, size_t size);
  ::std::string* mutable_dat();
  ::std::string* release_dat();
  void set_allocated_dat(::std::string* dat);

  // uint32 tid = 1;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::uint32 tid() const;
  void set_tid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:XmsgImSdkEventAdapter.XmsgImSdkEventNetReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::internal::ArenaStringPtr dat_;
  ::google::protobuf::uint32 tid_;
  mutable int _cached_size_;
  friend struct ::protobuf_sdk_2dx_2dmsg_2dim_2dclient_2devent_2eproto::TableStruct;
  friend void ::protobuf_sdk_2dx_2dmsg_2dim_2dclient_2devent_2eproto::InitDefaultsXmsgImSdkEventAdapter_XmsgImSdkEventNetReqImpl();
};
// -------------------------------------------------------------------

class XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImSdkEventAdapter.XmsgImSdkEventNetRsp) */ {
 public:
  XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp();
  virtual ~XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp();

  XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp(const XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp& from);

  inline XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp& operator=(const XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp(XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp&& from) noexcept
    : XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp& operator=(XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp*>(
               &_XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp* other);
  friend void swap(XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp& a, XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp& from);
  void MergeFrom(const XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string desc = 3;
  void clear_desc();
  static const int kDescFieldNumber = 3;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_desc(::std::string&& value);
  #endif
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // string msg = 4;
  void clear_msg();
  static const int kMsgFieldNumber = 4;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // bytes dat = 5;
  void clear_dat();
  static const int kDatFieldNumber = 5;
  const ::std::string& dat() const;
  void set_dat(const ::std::string& value);
  #if LANG_CXX11
  void set_dat(::std::string&& value);
  #endif
  void set_dat(const char* value);
  void set_dat(const void* value, size_t size);
  ::std::string* mutable_dat();
  ::std::string* release_dat();
  void set_allocated_dat(::std::string* dat);

  // uint32 tid = 1;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::uint32 tid() const;
  void set_tid(::google::protobuf::uint32 value);

  // uint32 ret = 2;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  ::google::protobuf::uint32 ret() const;
  void set_ret(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:XmsgImSdkEventAdapter.XmsgImSdkEventNetRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::internal::ArenaStringPtr dat_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_sdk_2dx_2dmsg_2dim_2dclient_2devent_2eproto::TableStruct;
  friend void ::protobuf_sdk_2dx_2dmsg_2dim_2dclient_2devent_2eproto::InitDefaultsXmsgImSdkEventAdapter_XmsgImSdkEventNetRspImpl();
};
// -------------------------------------------------------------------

class XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImSdkEventAdapter.XmsgImSdkEventDbRsp) */ {
 public:
  XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp();
  virtual ~XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp();

  XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp(const XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp& from);

  inline XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp& operator=(const XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp(XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp&& from) noexcept
    : XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp& operator=(XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp*>(
               &_XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp* other);
  friend void swap(XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp& a, XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp& from);
  void MergeFrom(const XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string desc = 3;
  void clear_desc();
  static const int kDescFieldNumber = 3;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_desc(::std::string&& value);
  #endif
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // .XmsgImClientDbCrudRsp dat = 5;
  bool has_dat() const;
  void clear_dat();
  static const int kDatFieldNumber = 5;
  const ::XmsgImClientDbCrudRsp& dat() const;
  ::XmsgImClientDbCrudRsp* release_dat();
  ::XmsgImClientDbCrudRsp* mutable_dat();
  void set_allocated_dat(::XmsgImClientDbCrudRsp* dat);

  // uint32 tid = 1;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::uint32 tid() const;
  void set_tid(::google::protobuf::uint32 value);

  // uint32 ret = 2;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  ::google::protobuf::uint32 ret() const;
  void set_ret(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:XmsgImSdkEventAdapter.XmsgImSdkEventDbRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::XmsgImClientDbCrudRsp* dat_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_sdk_2dx_2dmsg_2dim_2dclient_2devent_2eproto::TableStruct;
  friend void ::protobuf_sdk_2dx_2dmsg_2dim_2dclient_2devent_2eproto::InitDefaultsXmsgImSdkEventAdapter_XmsgImSdkEventDbRspImpl();
};
// -------------------------------------------------------------------

class XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImSdkEventAdapter.XmsgImSdkEventCxxLog) */ {
 public:
  XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog();
  virtual ~XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog();

  XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog(const XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog& from);

  inline XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog& operator=(const XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog(XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog&& from) noexcept
    : XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog() {
    *this = ::std::move(from);
  }

  inline XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog& operator=(XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog* internal_default_instance() {
    return reinterpret_cast<const XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog*>(
               &_XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog* other);
  friend void swap(XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog& a, XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog& from);
  void MergeFrom(const XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string log = 2;
  void clear_log();
  static const int kLogFieldNumber = 2;
  const ::std::string& log() const;
  void set_log(const ::std::string& value);
  #if LANG_CXX11
  void set_log(::std::string&& value);
  #endif
  void set_log(const char* value);
  void set_log(const char* value, size_t size);
  ::std::string* mutable_log();
  ::std::string* release_log();
  void set_allocated_log(::std::string* log);

  // uint32 lev = 1;
  void clear_lev();
  static const int kLevFieldNumber = 1;
  ::google::protobuf::uint32 lev() const;
  void set_lev(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:XmsgImSdkEventAdapter.XmsgImSdkEventCxxLog)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr log_;
  ::google::protobuf::uint32 lev_;
  mutable int _cached_size_;
  friend struct ::protobuf_sdk_2dx_2dmsg_2dim_2dclient_2devent_2eproto::TableStruct;
  friend void ::protobuf_sdk_2dx_2dmsg_2dim_2dclient_2devent_2eproto::InitDefaultsXmsgImSdkEventAdapter_XmsgImSdkEventCxxLogImpl();
};
// -------------------------------------------------------------------

class XmsgImSdkEventAdapter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImSdkEventAdapter) */ {
 public:
  XmsgImSdkEventAdapter();
  virtual ~XmsgImSdkEventAdapter();

  XmsgImSdkEventAdapter(const XmsgImSdkEventAdapter& from);

  inline XmsgImSdkEventAdapter& operator=(const XmsgImSdkEventAdapter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImSdkEventAdapter(XmsgImSdkEventAdapter&& from) noexcept
    : XmsgImSdkEventAdapter() {
    *this = ::std::move(from);
  }

  inline XmsgImSdkEventAdapter& operator=(XmsgImSdkEventAdapter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImSdkEventAdapter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImSdkEventAdapter* internal_default_instance() {
    return reinterpret_cast<const XmsgImSdkEventAdapter*>(
               &_XmsgImSdkEventAdapter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(XmsgImSdkEventAdapter* other);
  friend void swap(XmsgImSdkEventAdapter& a, XmsgImSdkEventAdapter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImSdkEventAdapter* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImSdkEventAdapter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImSdkEventAdapter& from);
  void MergeFrom(const XmsgImSdkEventAdapter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImSdkEventAdapter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice XmsgImSdkEventNetNotice;
  typedef XmsgImSdkEventAdapter_XmsgImSdkEventNetReq XmsgImSdkEventNetReq;
  typedef XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp XmsgImSdkEventNetRsp;
  typedef XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp XmsgImSdkEventDbRsp;
  typedef XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog XmsgImSdkEventCxxLog;

  // accessors -------------------------------------------------------

  // .XmsgImSdkEventAdapter.XmsgImSdkEventNetNotice netNotice = 3;
  bool has_netnotice() const;
  void clear_netnotice();
  static const int kNetNoticeFieldNumber = 3;
  const ::XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice& netnotice() const;
  ::XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice* release_netnotice();
  ::XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice* mutable_netnotice();
  void set_allocated_netnotice(::XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice* netnotice);

  // .XmsgImSdkEventAdapter.XmsgImSdkEventNetReq netReq = 4;
  bool has_netreq() const;
  void clear_netreq();
  static const int kNetReqFieldNumber = 4;
  const ::XmsgImSdkEventAdapter_XmsgImSdkEventNetReq& netreq() const;
  ::XmsgImSdkEventAdapter_XmsgImSdkEventNetReq* release_netreq();
  ::XmsgImSdkEventAdapter_XmsgImSdkEventNetReq* mutable_netreq();
  void set_allocated_netreq(::XmsgImSdkEventAdapter_XmsgImSdkEventNetReq* netreq);

  // .XmsgImSdkEventAdapter.XmsgImSdkEventNetRsp netRsp = 5;
  bool has_netrsp() const;
  void clear_netrsp();
  static const int kNetRspFieldNumber = 5;
  const ::XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp& netrsp() const;
  ::XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp* release_netrsp();
  ::XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp* mutable_netrsp();
  void set_allocated_netrsp(::XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp* netrsp);

  // .XmsgImSdkEventAdapter.XmsgImSdkEventDbRsp dbRsp = 6;
  bool has_dbrsp() const;
  void clear_dbrsp();
  static const int kDbRspFieldNumber = 6;
  const ::XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp& dbrsp() const;
  ::XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp* release_dbrsp();
  ::XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp* mutable_dbrsp();
  void set_allocated_dbrsp(::XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp* dbrsp);

  // .XmsgImSdkEventAdapter.XmsgImSdkEventCxxLog cxxLog = 7;
  bool has_cxxlog() const;
  void clear_cxxlog();
  static const int kCxxLogFieldNumber = 7;
  const ::XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog& cxxlog() const;
  ::XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog* release_cxxlog();
  ::XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog* mutable_cxxlog();
  void set_allocated_cxxlog(::XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog* cxxlog);

  // uint32 apiId = 1;
  void clear_apiid();
  static const int kApiIdFieldNumber = 1;
  ::google::protobuf::uint32 apiid() const;
  void set_apiid(::google::protobuf::uint32 value);

  // .XmsgImSdkEventType evnType = 2;
  void clear_evntype();
  static const int kEvnTypeFieldNumber = 2;
  ::XmsgImSdkEventType evntype() const;
  void set_evntype(::XmsgImSdkEventType value);

  // @@protoc_insertion_point(class_scope:XmsgImSdkEventAdapter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice* netnotice_;
  ::XmsgImSdkEventAdapter_XmsgImSdkEventNetReq* netreq_;
  ::XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp* netrsp_;
  ::XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp* dbrsp_;
  ::XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog* cxxlog_;
  ::google::protobuf::uint32 apiid_;
  int evntype_;
  mutable int _cached_size_;
  friend struct ::protobuf_sdk_2dx_2dmsg_2dim_2dclient_2devent_2eproto::TableStruct;
  friend void ::protobuf_sdk_2dx_2dmsg_2dim_2dclient_2devent_2eproto::InitDefaultsXmsgImSdkEventAdapterImpl();
};
// -------------------------------------------------------------------

class XmsgImSdkEventXmsgImAuth : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImSdkEventXmsgImAuth) */ {
 public:
  XmsgImSdkEventXmsgImAuth();
  virtual ~XmsgImSdkEventXmsgImAuth();

  XmsgImSdkEventXmsgImAuth(const XmsgImSdkEventXmsgImAuth& from);

  inline XmsgImSdkEventXmsgImAuth& operator=(const XmsgImSdkEventXmsgImAuth& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImSdkEventXmsgImAuth(XmsgImSdkEventXmsgImAuth&& from) noexcept
    : XmsgImSdkEventXmsgImAuth() {
    *this = ::std::move(from);
  }

  inline XmsgImSdkEventXmsgImAuth& operator=(XmsgImSdkEventXmsgImAuth&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImSdkEventXmsgImAuth& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImSdkEventXmsgImAuth* internal_default_instance() {
    return reinterpret_cast<const XmsgImSdkEventXmsgImAuth*>(
               &_XmsgImSdkEventXmsgImAuth_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(XmsgImSdkEventXmsgImAuth* other);
  friend void swap(XmsgImSdkEventXmsgImAuth& a, XmsgImSdkEventXmsgImAuth& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImSdkEventXmsgImAuth* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImSdkEventXmsgImAuth* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImSdkEventXmsgImAuth& from);
  void MergeFrom(const XmsgImSdkEventXmsgImAuth& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImSdkEventXmsgImAuth* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string evn = 1;
  void clear_evn();
  static const int kEvnFieldNumber = 1;
  const ::std::string& evn() const;
  void set_evn(const ::std::string& value);
  #if LANG_CXX11
  void set_evn(::std::string&& value);
  #endif
  void set_evn(const char* value);
  void set_evn(const char* value, size_t size);
  ::std::string* mutable_evn();
  ::std::string* release_evn();
  void set_allocated_evn(::std::string* evn);

  // string addr = 3;
  void clear_addr();
  static const int kAddrFieldNumber = 3;
  const ::std::string& addr() const;
  void set_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_addr(::std::string&& value);
  #endif
  void set_addr(const char* value);
  void set_addr(const char* value, size_t size);
  ::std::string* mutable_addr();
  ::std::string* release_addr();
  void set_allocated_addr(::std::string* addr);

  // uint32 times = 2;
  void clear_times();
  static const int kTimesFieldNumber = 2;
  ::google::protobuf::uint32 times() const;
  void set_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:XmsgImSdkEventXmsgImAuth)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr evn_;
  ::google::protobuf::internal::ArenaStringPtr addr_;
  ::google::protobuf::uint32 times_;
  mutable int _cached_size_;
  friend struct ::protobuf_sdk_2dx_2dmsg_2dim_2dclient_2devent_2eproto::TableStruct;
  friend void ::protobuf_sdk_2dx_2dmsg_2dim_2dclient_2devent_2eproto::InitDefaultsXmsgImSdkEventXmsgImAuthImpl();
};
// -------------------------------------------------------------------

class XmsgImSdkEventXmsgAp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImSdkEventXmsgAp) */ {
 public:
  XmsgImSdkEventXmsgAp();
  virtual ~XmsgImSdkEventXmsgAp();

  XmsgImSdkEventXmsgAp(const XmsgImSdkEventXmsgAp& from);

  inline XmsgImSdkEventXmsgAp& operator=(const XmsgImSdkEventXmsgAp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImSdkEventXmsgAp(XmsgImSdkEventXmsgAp&& from) noexcept
    : XmsgImSdkEventXmsgAp() {
    *this = ::std::move(from);
  }

  inline XmsgImSdkEventXmsgAp& operator=(XmsgImSdkEventXmsgAp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImSdkEventXmsgAp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImSdkEventXmsgAp* internal_default_instance() {
    return reinterpret_cast<const XmsgImSdkEventXmsgAp*>(
               &_XmsgImSdkEventXmsgAp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(XmsgImSdkEventXmsgAp* other);
  friend void swap(XmsgImSdkEventXmsgAp& a, XmsgImSdkEventXmsgAp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImSdkEventXmsgAp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImSdkEventXmsgAp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImSdkEventXmsgAp& from);
  void MergeFrom(const XmsgImSdkEventXmsgAp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImSdkEventXmsgAp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string evn = 1;
  void clear_evn();
  static const int kEvnFieldNumber = 1;
  const ::std::string& evn() const;
  void set_evn(const ::std::string& value);
  #if LANG_CXX11
  void set_evn(::std::string&& value);
  #endif
  void set_evn(const char* value);
  void set_evn(const char* value, size_t size);
  ::std::string* mutable_evn();
  ::std::string* release_evn();
  void set_allocated_evn(::std::string* evn);

  // string addr = 3;
  void clear_addr();
  static const int kAddrFieldNumber = 3;
  const ::std::string& addr() const;
  void set_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_addr(::std::string&& value);
  #endif
  void set_addr(const char* value);
  void set_addr(const char* value, size_t size);
  ::std::string* mutable_addr();
  ::std::string* release_addr();
  void set_allocated_addr(::std::string* addr);

  // uint32 times = 2;
  void clear_times();
  static const int kTimesFieldNumber = 2;
  ::google::protobuf::uint32 times() const;
  void set_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:XmsgImSdkEventXmsgAp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr evn_;
  ::google::protobuf::internal::ArenaStringPtr addr_;
  ::google::protobuf::uint32 times_;
  mutable int _cached_size_;
  friend struct ::protobuf_sdk_2dx_2dmsg_2dim_2dclient_2devent_2eproto::TableStruct;
  friend void ::protobuf_sdk_2dx_2dmsg_2dim_2dclient_2devent_2eproto::InitDefaultsXmsgImSdkEventXmsgApImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice

// string msg = 1;
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice::msg() const {
  // @@protoc_insertion_point(field_get:XmsgImSdkEventAdapter.XmsgImSdkEventNetNotice.msg)
  return msg_.GetNoArena();
}
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImSdkEventAdapter.XmsgImSdkEventNetNotice.msg)
}
#if LANG_CXX11
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImSdkEventAdapter.XmsgImSdkEventNetNotice.msg)
}
#endif
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImSdkEventAdapter.XmsgImSdkEventNetNotice.msg)
}
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImSdkEventAdapter.XmsgImSdkEventNetNotice.msg)
}
inline ::std::string* XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImSdkEventAdapter.XmsgImSdkEventNetNotice.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice::release_msg() {
  // @@protoc_insertion_point(field_release:XmsgImSdkEventAdapter.XmsgImSdkEventNetNotice.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:XmsgImSdkEventAdapter.XmsgImSdkEventNetNotice.msg)
}

// bytes dat = 2;
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice::clear_dat() {
  dat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice::dat() const {
  // @@protoc_insertion_point(field_get:XmsgImSdkEventAdapter.XmsgImSdkEventNetNotice.dat)
  return dat_.GetNoArena();
}
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice::set_dat(const ::std::string& value) {
  
  dat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImSdkEventAdapter.XmsgImSdkEventNetNotice.dat)
}
#if LANG_CXX11
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice::set_dat(::std::string&& value) {
  
  dat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImSdkEventAdapter.XmsgImSdkEventNetNotice.dat)
}
#endif
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice::set_dat(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImSdkEventAdapter.XmsgImSdkEventNetNotice.dat)
}
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice::set_dat(const void* value, size_t size) {
  
  dat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImSdkEventAdapter.XmsgImSdkEventNetNotice.dat)
}
inline ::std::string* XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice::mutable_dat() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImSdkEventAdapter.XmsgImSdkEventNetNotice.dat)
  return dat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice::release_dat() {
  // @@protoc_insertion_point(field_release:XmsgImSdkEventAdapter.XmsgImSdkEventNetNotice.dat)
  
  return dat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice::set_allocated_dat(::std::string* dat) {
  if (dat != NULL) {
    
  } else {
    
  }
  dat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dat);
  // @@protoc_insertion_point(field_set_allocated:XmsgImSdkEventAdapter.XmsgImSdkEventNetNotice.dat)
}

// -------------------------------------------------------------------

// XmsgImSdkEventAdapter_XmsgImSdkEventNetReq

// uint32 tid = 1;
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetReq::clear_tid() {
  tid_ = 0u;
}
inline ::google::protobuf::uint32 XmsgImSdkEventAdapter_XmsgImSdkEventNetReq::tid() const {
  // @@protoc_insertion_point(field_get:XmsgImSdkEventAdapter.XmsgImSdkEventNetReq.tid)
  return tid_;
}
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetReq::set_tid(::google::protobuf::uint32 value) {
  
  tid_ = value;
  // @@protoc_insertion_point(field_set:XmsgImSdkEventAdapter.XmsgImSdkEventNetReq.tid)
}

// string msg = 2;
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetReq::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImSdkEventAdapter_XmsgImSdkEventNetReq::msg() const {
  // @@protoc_insertion_point(field_get:XmsgImSdkEventAdapter.XmsgImSdkEventNetReq.msg)
  return msg_.GetNoArena();
}
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetReq::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImSdkEventAdapter.XmsgImSdkEventNetReq.msg)
}
#if LANG_CXX11
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetReq::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImSdkEventAdapter.XmsgImSdkEventNetReq.msg)
}
#endif
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetReq::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImSdkEventAdapter.XmsgImSdkEventNetReq.msg)
}
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetReq::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImSdkEventAdapter.XmsgImSdkEventNetReq.msg)
}
inline ::std::string* XmsgImSdkEventAdapter_XmsgImSdkEventNetReq::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImSdkEventAdapter.XmsgImSdkEventNetReq.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImSdkEventAdapter_XmsgImSdkEventNetReq::release_msg() {
  // @@protoc_insertion_point(field_release:XmsgImSdkEventAdapter.XmsgImSdkEventNetReq.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetReq::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:XmsgImSdkEventAdapter.XmsgImSdkEventNetReq.msg)
}

// bytes dat = 3;
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetReq::clear_dat() {
  dat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImSdkEventAdapter_XmsgImSdkEventNetReq::dat() const {
  // @@protoc_insertion_point(field_get:XmsgImSdkEventAdapter.XmsgImSdkEventNetReq.dat)
  return dat_.GetNoArena();
}
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetReq::set_dat(const ::std::string& value) {
  
  dat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImSdkEventAdapter.XmsgImSdkEventNetReq.dat)
}
#if LANG_CXX11
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetReq::set_dat(::std::string&& value) {
  
  dat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImSdkEventAdapter.XmsgImSdkEventNetReq.dat)
}
#endif
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetReq::set_dat(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImSdkEventAdapter.XmsgImSdkEventNetReq.dat)
}
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetReq::set_dat(const void* value, size_t size) {
  
  dat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImSdkEventAdapter.XmsgImSdkEventNetReq.dat)
}
inline ::std::string* XmsgImSdkEventAdapter_XmsgImSdkEventNetReq::mutable_dat() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImSdkEventAdapter.XmsgImSdkEventNetReq.dat)
  return dat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImSdkEventAdapter_XmsgImSdkEventNetReq::release_dat() {
  // @@protoc_insertion_point(field_release:XmsgImSdkEventAdapter.XmsgImSdkEventNetReq.dat)
  
  return dat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetReq::set_allocated_dat(::std::string* dat) {
  if (dat != NULL) {
    
  } else {
    
  }
  dat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dat);
  // @@protoc_insertion_point(field_set_allocated:XmsgImSdkEventAdapter.XmsgImSdkEventNetReq.dat)
}

// -------------------------------------------------------------------

// XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp

// uint32 tid = 1;
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp::clear_tid() {
  tid_ = 0u;
}
inline ::google::protobuf::uint32 XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp::tid() const {
  // @@protoc_insertion_point(field_get:XmsgImSdkEventAdapter.XmsgImSdkEventNetRsp.tid)
  return tid_;
}
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp::set_tid(::google::protobuf::uint32 value) {
  
  tid_ = value;
  // @@protoc_insertion_point(field_set:XmsgImSdkEventAdapter.XmsgImSdkEventNetRsp.tid)
}

// uint32 ret = 2;
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp::clear_ret() {
  ret_ = 0u;
}
inline ::google::protobuf::uint32 XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp::ret() const {
  // @@protoc_insertion_point(field_get:XmsgImSdkEventAdapter.XmsgImSdkEventNetRsp.ret)
  return ret_;
}
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp::set_ret(::google::protobuf::uint32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:XmsgImSdkEventAdapter.XmsgImSdkEventNetRsp.ret)
}

// string desc = 3;
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp::desc() const {
  // @@protoc_insertion_point(field_get:XmsgImSdkEventAdapter.XmsgImSdkEventNetRsp.desc)
  return desc_.GetNoArena();
}
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImSdkEventAdapter.XmsgImSdkEventNetRsp.desc)
}
#if LANG_CXX11
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp::set_desc(::std::string&& value) {
  
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImSdkEventAdapter.XmsgImSdkEventNetRsp.desc)
}
#endif
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImSdkEventAdapter.XmsgImSdkEventNetRsp.desc)
}
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImSdkEventAdapter.XmsgImSdkEventNetRsp.desc)
}
inline ::std::string* XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImSdkEventAdapter.XmsgImSdkEventNetRsp.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp::release_desc() {
  // @@protoc_insertion_point(field_release:XmsgImSdkEventAdapter.XmsgImSdkEventNetRsp.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:XmsgImSdkEventAdapter.XmsgImSdkEventNetRsp.desc)
}

// string msg = 4;
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp::msg() const {
  // @@protoc_insertion_point(field_get:XmsgImSdkEventAdapter.XmsgImSdkEventNetRsp.msg)
  return msg_.GetNoArena();
}
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImSdkEventAdapter.XmsgImSdkEventNetRsp.msg)
}
#if LANG_CXX11
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImSdkEventAdapter.XmsgImSdkEventNetRsp.msg)
}
#endif
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImSdkEventAdapter.XmsgImSdkEventNetRsp.msg)
}
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImSdkEventAdapter.XmsgImSdkEventNetRsp.msg)
}
inline ::std::string* XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImSdkEventAdapter.XmsgImSdkEventNetRsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp::release_msg() {
  // @@protoc_insertion_point(field_release:XmsgImSdkEventAdapter.XmsgImSdkEventNetRsp.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:XmsgImSdkEventAdapter.XmsgImSdkEventNetRsp.msg)
}

// bytes dat = 5;
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp::clear_dat() {
  dat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp::dat() const {
  // @@protoc_insertion_point(field_get:XmsgImSdkEventAdapter.XmsgImSdkEventNetRsp.dat)
  return dat_.GetNoArena();
}
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp::set_dat(const ::std::string& value) {
  
  dat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImSdkEventAdapter.XmsgImSdkEventNetRsp.dat)
}
#if LANG_CXX11
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp::set_dat(::std::string&& value) {
  
  dat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImSdkEventAdapter.XmsgImSdkEventNetRsp.dat)
}
#endif
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp::set_dat(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImSdkEventAdapter.XmsgImSdkEventNetRsp.dat)
}
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp::set_dat(const void* value, size_t size) {
  
  dat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImSdkEventAdapter.XmsgImSdkEventNetRsp.dat)
}
inline ::std::string* XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp::mutable_dat() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImSdkEventAdapter.XmsgImSdkEventNetRsp.dat)
  return dat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp::release_dat() {
  // @@protoc_insertion_point(field_release:XmsgImSdkEventAdapter.XmsgImSdkEventNetRsp.dat)
  
  return dat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp::set_allocated_dat(::std::string* dat) {
  if (dat != NULL) {
    
  } else {
    
  }
  dat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dat);
  // @@protoc_insertion_point(field_set_allocated:XmsgImSdkEventAdapter.XmsgImSdkEventNetRsp.dat)
}

// -------------------------------------------------------------------

// XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp

// uint32 tid = 1;
inline void XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp::clear_tid() {
  tid_ = 0u;
}
inline ::google::protobuf::uint32 XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp::tid() const {
  // @@protoc_insertion_point(field_get:XmsgImSdkEventAdapter.XmsgImSdkEventDbRsp.tid)
  return tid_;
}
inline void XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp::set_tid(::google::protobuf::uint32 value) {
  
  tid_ = value;
  // @@protoc_insertion_point(field_set:XmsgImSdkEventAdapter.XmsgImSdkEventDbRsp.tid)
}

// uint32 ret = 2;
inline void XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp::clear_ret() {
  ret_ = 0u;
}
inline ::google::protobuf::uint32 XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp::ret() const {
  // @@protoc_insertion_point(field_get:XmsgImSdkEventAdapter.XmsgImSdkEventDbRsp.ret)
  return ret_;
}
inline void XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp::set_ret(::google::protobuf::uint32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:XmsgImSdkEventAdapter.XmsgImSdkEventDbRsp.ret)
}

// string desc = 3;
inline void XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp::desc() const {
  // @@protoc_insertion_point(field_get:XmsgImSdkEventAdapter.XmsgImSdkEventDbRsp.desc)
  return desc_.GetNoArena();
}
inline void XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImSdkEventAdapter.XmsgImSdkEventDbRsp.desc)
}
#if LANG_CXX11
inline void XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp::set_desc(::std::string&& value) {
  
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImSdkEventAdapter.XmsgImSdkEventDbRsp.desc)
}
#endif
inline void XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImSdkEventAdapter.XmsgImSdkEventDbRsp.desc)
}
inline void XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImSdkEventAdapter.XmsgImSdkEventDbRsp.desc)
}
inline ::std::string* XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImSdkEventAdapter.XmsgImSdkEventDbRsp.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp::release_desc() {
  // @@protoc_insertion_point(field_release:XmsgImSdkEventAdapter.XmsgImSdkEventDbRsp.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:XmsgImSdkEventAdapter.XmsgImSdkEventDbRsp.desc)
}

// .XmsgImClientDbCrudRsp dat = 5;
inline bool XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp::has_dat() const {
  return this != internal_default_instance() && dat_ != NULL;
}
inline const ::XmsgImClientDbCrudRsp& XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp::dat() const {
  const ::XmsgImClientDbCrudRsp* p = dat_;
  // @@protoc_insertion_point(field_get:XmsgImSdkEventAdapter.XmsgImSdkEventDbRsp.dat)
  return p != NULL ? *p : *reinterpret_cast<const ::XmsgImClientDbCrudRsp*>(
      &::_XmsgImClientDbCrudRsp_default_instance_);
}
inline ::XmsgImClientDbCrudRsp* XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp::release_dat() {
  // @@protoc_insertion_point(field_release:XmsgImSdkEventAdapter.XmsgImSdkEventDbRsp.dat)
  
  ::XmsgImClientDbCrudRsp* temp = dat_;
  dat_ = NULL;
  return temp;
}
inline ::XmsgImClientDbCrudRsp* XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp::mutable_dat() {
  
  if (dat_ == NULL) {
    dat_ = new ::XmsgImClientDbCrudRsp;
  }
  // @@protoc_insertion_point(field_mutable:XmsgImSdkEventAdapter.XmsgImSdkEventDbRsp.dat)
  return dat_;
}
inline void XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp::set_allocated_dat(::XmsgImClientDbCrudRsp* dat) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dat_);
  }
  if (dat) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dat = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dat, submessage_arena);
    }
    
  } else {
    
  }
  dat_ = dat;
  // @@protoc_insertion_point(field_set_allocated:XmsgImSdkEventAdapter.XmsgImSdkEventDbRsp.dat)
}

// -------------------------------------------------------------------

// XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog

// uint32 lev = 1;
inline void XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog::clear_lev() {
  lev_ = 0u;
}
inline ::google::protobuf::uint32 XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog::lev() const {
  // @@protoc_insertion_point(field_get:XmsgImSdkEventAdapter.XmsgImSdkEventCxxLog.lev)
  return lev_;
}
inline void XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog::set_lev(::google::protobuf::uint32 value) {
  
  lev_ = value;
  // @@protoc_insertion_point(field_set:XmsgImSdkEventAdapter.XmsgImSdkEventCxxLog.lev)
}

// string log = 2;
inline void XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog::clear_log() {
  log_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog::log() const {
  // @@protoc_insertion_point(field_get:XmsgImSdkEventAdapter.XmsgImSdkEventCxxLog.log)
  return log_.GetNoArena();
}
inline void XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog::set_log(const ::std::string& value) {
  
  log_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImSdkEventAdapter.XmsgImSdkEventCxxLog.log)
}
#if LANG_CXX11
inline void XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog::set_log(::std::string&& value) {
  
  log_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImSdkEventAdapter.XmsgImSdkEventCxxLog.log)
}
#endif
inline void XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog::set_log(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  log_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImSdkEventAdapter.XmsgImSdkEventCxxLog.log)
}
inline void XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog::set_log(const char* value, size_t size) {
  
  log_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImSdkEventAdapter.XmsgImSdkEventCxxLog.log)
}
inline ::std::string* XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog::mutable_log() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImSdkEventAdapter.XmsgImSdkEventCxxLog.log)
  return log_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog::release_log() {
  // @@protoc_insertion_point(field_release:XmsgImSdkEventAdapter.XmsgImSdkEventCxxLog.log)
  
  return log_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog::set_allocated_log(::std::string* log) {
  if (log != NULL) {
    
  } else {
    
  }
  log_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log);
  // @@protoc_insertion_point(field_set_allocated:XmsgImSdkEventAdapter.XmsgImSdkEventCxxLog.log)
}

// -------------------------------------------------------------------

// XmsgImSdkEventAdapter

// uint32 apiId = 1;
inline void XmsgImSdkEventAdapter::clear_apiid() {
  apiid_ = 0u;
}
inline ::google::protobuf::uint32 XmsgImSdkEventAdapter::apiid() const {
  // @@protoc_insertion_point(field_get:XmsgImSdkEventAdapter.apiId)
  return apiid_;
}
inline void XmsgImSdkEventAdapter::set_apiid(::google::protobuf::uint32 value) {
  
  apiid_ = value;
  // @@protoc_insertion_point(field_set:XmsgImSdkEventAdapter.apiId)
}

// .XmsgImSdkEventType evnType = 2;
inline void XmsgImSdkEventAdapter::clear_evntype() {
  evntype_ = 0;
}
inline ::XmsgImSdkEventType XmsgImSdkEventAdapter::evntype() const {
  // @@protoc_insertion_point(field_get:XmsgImSdkEventAdapter.evnType)
  return static_cast< ::XmsgImSdkEventType >(evntype_);
}
inline void XmsgImSdkEventAdapter::set_evntype(::XmsgImSdkEventType value) {
  
  evntype_ = value;
  // @@protoc_insertion_point(field_set:XmsgImSdkEventAdapter.evnType)
}

// .XmsgImSdkEventAdapter.XmsgImSdkEventNetNotice netNotice = 3;
inline bool XmsgImSdkEventAdapter::has_netnotice() const {
  return this != internal_default_instance() && netnotice_ != NULL;
}
inline void XmsgImSdkEventAdapter::clear_netnotice() {
  if (GetArenaNoVirtual() == NULL && netnotice_ != NULL) {
    delete netnotice_;
  }
  netnotice_ = NULL;
}
inline const ::XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice& XmsgImSdkEventAdapter::netnotice() const {
  const ::XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice* p = netnotice_;
  // @@protoc_insertion_point(field_get:XmsgImSdkEventAdapter.netNotice)
  return p != NULL ? *p : *reinterpret_cast<const ::XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice*>(
      &::_XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice_default_instance_);
}
inline ::XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice* XmsgImSdkEventAdapter::release_netnotice() {
  // @@protoc_insertion_point(field_release:XmsgImSdkEventAdapter.netNotice)
  
  ::XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice* temp = netnotice_;
  netnotice_ = NULL;
  return temp;
}
inline ::XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice* XmsgImSdkEventAdapter::mutable_netnotice() {
  
  if (netnotice_ == NULL) {
    netnotice_ = new ::XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice;
  }
  // @@protoc_insertion_point(field_mutable:XmsgImSdkEventAdapter.netNotice)
  return netnotice_;
}
inline void XmsgImSdkEventAdapter::set_allocated_netnotice(::XmsgImSdkEventAdapter_XmsgImSdkEventNetNotice* netnotice) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete netnotice_;
  }
  if (netnotice) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      netnotice = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, netnotice, submessage_arena);
    }
    
  } else {
    
  }
  netnotice_ = netnotice;
  // @@protoc_insertion_point(field_set_allocated:XmsgImSdkEventAdapter.netNotice)
}

// .XmsgImSdkEventAdapter.XmsgImSdkEventNetReq netReq = 4;
inline bool XmsgImSdkEventAdapter::has_netreq() const {
  return this != internal_default_instance() && netreq_ != NULL;
}
inline void XmsgImSdkEventAdapter::clear_netreq() {
  if (GetArenaNoVirtual() == NULL && netreq_ != NULL) {
    delete netreq_;
  }
  netreq_ = NULL;
}
inline const ::XmsgImSdkEventAdapter_XmsgImSdkEventNetReq& XmsgImSdkEventAdapter::netreq() const {
  const ::XmsgImSdkEventAdapter_XmsgImSdkEventNetReq* p = netreq_;
  // @@protoc_insertion_point(field_get:XmsgImSdkEventAdapter.netReq)
  return p != NULL ? *p : *reinterpret_cast<const ::XmsgImSdkEventAdapter_XmsgImSdkEventNetReq*>(
      &::_XmsgImSdkEventAdapter_XmsgImSdkEventNetReq_default_instance_);
}
inline ::XmsgImSdkEventAdapter_XmsgImSdkEventNetReq* XmsgImSdkEventAdapter::release_netreq() {
  // @@protoc_insertion_point(field_release:XmsgImSdkEventAdapter.netReq)
  
  ::XmsgImSdkEventAdapter_XmsgImSdkEventNetReq* temp = netreq_;
  netreq_ = NULL;
  return temp;
}
inline ::XmsgImSdkEventAdapter_XmsgImSdkEventNetReq* XmsgImSdkEventAdapter::mutable_netreq() {
  
  if (netreq_ == NULL) {
    netreq_ = new ::XmsgImSdkEventAdapter_XmsgImSdkEventNetReq;
  }
  // @@protoc_insertion_point(field_mutable:XmsgImSdkEventAdapter.netReq)
  return netreq_;
}
inline void XmsgImSdkEventAdapter::set_allocated_netreq(::XmsgImSdkEventAdapter_XmsgImSdkEventNetReq* netreq) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete netreq_;
  }
  if (netreq) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      netreq = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, netreq, submessage_arena);
    }
    
  } else {
    
  }
  netreq_ = netreq;
  // @@protoc_insertion_point(field_set_allocated:XmsgImSdkEventAdapter.netReq)
}

// .XmsgImSdkEventAdapter.XmsgImSdkEventNetRsp netRsp = 5;
inline bool XmsgImSdkEventAdapter::has_netrsp() const {
  return this != internal_default_instance() && netrsp_ != NULL;
}
inline void XmsgImSdkEventAdapter::clear_netrsp() {
  if (GetArenaNoVirtual() == NULL && netrsp_ != NULL) {
    delete netrsp_;
  }
  netrsp_ = NULL;
}
inline const ::XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp& XmsgImSdkEventAdapter::netrsp() const {
  const ::XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp* p = netrsp_;
  // @@protoc_insertion_point(field_get:XmsgImSdkEventAdapter.netRsp)
  return p != NULL ? *p : *reinterpret_cast<const ::XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp*>(
      &::_XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp_default_instance_);
}
inline ::XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp* XmsgImSdkEventAdapter::release_netrsp() {
  // @@protoc_insertion_point(field_release:XmsgImSdkEventAdapter.netRsp)
  
  ::XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp* temp = netrsp_;
  netrsp_ = NULL;
  return temp;
}
inline ::XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp* XmsgImSdkEventAdapter::mutable_netrsp() {
  
  if (netrsp_ == NULL) {
    netrsp_ = new ::XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp;
  }
  // @@protoc_insertion_point(field_mutable:XmsgImSdkEventAdapter.netRsp)
  return netrsp_;
}
inline void XmsgImSdkEventAdapter::set_allocated_netrsp(::XmsgImSdkEventAdapter_XmsgImSdkEventNetRsp* netrsp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete netrsp_;
  }
  if (netrsp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      netrsp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, netrsp, submessage_arena);
    }
    
  } else {
    
  }
  netrsp_ = netrsp;
  // @@protoc_insertion_point(field_set_allocated:XmsgImSdkEventAdapter.netRsp)
}

// .XmsgImSdkEventAdapter.XmsgImSdkEventDbRsp dbRsp = 6;
inline bool XmsgImSdkEventAdapter::has_dbrsp() const {
  return this != internal_default_instance() && dbrsp_ != NULL;
}
inline void XmsgImSdkEventAdapter::clear_dbrsp() {
  if (GetArenaNoVirtual() == NULL && dbrsp_ != NULL) {
    delete dbrsp_;
  }
  dbrsp_ = NULL;
}
inline const ::XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp& XmsgImSdkEventAdapter::dbrsp() const {
  const ::XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp* p = dbrsp_;
  // @@protoc_insertion_point(field_get:XmsgImSdkEventAdapter.dbRsp)
  return p != NULL ? *p : *reinterpret_cast<const ::XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp*>(
      &::_XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp_default_instance_);
}
inline ::XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp* XmsgImSdkEventAdapter::release_dbrsp() {
  // @@protoc_insertion_point(field_release:XmsgImSdkEventAdapter.dbRsp)
  
  ::XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp* temp = dbrsp_;
  dbrsp_ = NULL;
  return temp;
}
inline ::XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp* XmsgImSdkEventAdapter::mutable_dbrsp() {
  
  if (dbrsp_ == NULL) {
    dbrsp_ = new ::XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp;
  }
  // @@protoc_insertion_point(field_mutable:XmsgImSdkEventAdapter.dbRsp)
  return dbrsp_;
}
inline void XmsgImSdkEventAdapter::set_allocated_dbrsp(::XmsgImSdkEventAdapter_XmsgImSdkEventDbRsp* dbrsp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete dbrsp_;
  }
  if (dbrsp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dbrsp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dbrsp, submessage_arena);
    }
    
  } else {
    
  }
  dbrsp_ = dbrsp;
  // @@protoc_insertion_point(field_set_allocated:XmsgImSdkEventAdapter.dbRsp)
}

// .XmsgImSdkEventAdapter.XmsgImSdkEventCxxLog cxxLog = 7;
inline bool XmsgImSdkEventAdapter::has_cxxlog() const {
  return this != internal_default_instance() && cxxlog_ != NULL;
}
inline void XmsgImSdkEventAdapter::clear_cxxlog() {
  if (GetArenaNoVirtual() == NULL && cxxlog_ != NULL) {
    delete cxxlog_;
  }
  cxxlog_ = NULL;
}
inline const ::XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog& XmsgImSdkEventAdapter::cxxlog() const {
  const ::XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog* p = cxxlog_;
  // @@protoc_insertion_point(field_get:XmsgImSdkEventAdapter.cxxLog)
  return p != NULL ? *p : *reinterpret_cast<const ::XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog*>(
      &::_XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog_default_instance_);
}
inline ::XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog* XmsgImSdkEventAdapter::release_cxxlog() {
  // @@protoc_insertion_point(field_release:XmsgImSdkEventAdapter.cxxLog)
  
  ::XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog* temp = cxxlog_;
  cxxlog_ = NULL;
  return temp;
}
inline ::XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog* XmsgImSdkEventAdapter::mutable_cxxlog() {
  
  if (cxxlog_ == NULL) {
    cxxlog_ = new ::XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog;
  }
  // @@protoc_insertion_point(field_mutable:XmsgImSdkEventAdapter.cxxLog)
  return cxxlog_;
}
inline void XmsgImSdkEventAdapter::set_allocated_cxxlog(::XmsgImSdkEventAdapter_XmsgImSdkEventCxxLog* cxxlog) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete cxxlog_;
  }
  if (cxxlog) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cxxlog = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cxxlog, submessage_arena);
    }
    
  } else {
    
  }
  cxxlog_ = cxxlog;
  // @@protoc_insertion_point(field_set_allocated:XmsgImSdkEventAdapter.cxxLog)
}

// -------------------------------------------------------------------

// XmsgImSdkEventXmsgImAuth

// string evn = 1;
inline void XmsgImSdkEventXmsgImAuth::clear_evn() {
  evn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImSdkEventXmsgImAuth::evn() const {
  // @@protoc_insertion_point(field_get:XmsgImSdkEventXmsgImAuth.evn)
  return evn_.GetNoArena();
}
inline void XmsgImSdkEventXmsgImAuth::set_evn(const ::std::string& value) {
  
  evn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImSdkEventXmsgImAuth.evn)
}
#if LANG_CXX11
inline void XmsgImSdkEventXmsgImAuth::set_evn(::std::string&& value) {
  
  evn_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImSdkEventXmsgImAuth.evn)
}
#endif
inline void XmsgImSdkEventXmsgImAuth::set_evn(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  evn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImSdkEventXmsgImAuth.evn)
}
inline void XmsgImSdkEventXmsgImAuth::set_evn(const char* value, size_t size) {
  
  evn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImSdkEventXmsgImAuth.evn)
}
inline ::std::string* XmsgImSdkEventXmsgImAuth::mutable_evn() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImSdkEventXmsgImAuth.evn)
  return evn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImSdkEventXmsgImAuth::release_evn() {
  // @@protoc_insertion_point(field_release:XmsgImSdkEventXmsgImAuth.evn)
  
  return evn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImSdkEventXmsgImAuth::set_allocated_evn(::std::string* evn) {
  if (evn != NULL) {
    
  } else {
    
  }
  evn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), evn);
  // @@protoc_insertion_point(field_set_allocated:XmsgImSdkEventXmsgImAuth.evn)
}

// uint32 times = 2;
inline void XmsgImSdkEventXmsgImAuth::clear_times() {
  times_ = 0u;
}
inline ::google::protobuf::uint32 XmsgImSdkEventXmsgImAuth::times() const {
  // @@protoc_insertion_point(field_get:XmsgImSdkEventXmsgImAuth.times)
  return times_;
}
inline void XmsgImSdkEventXmsgImAuth::set_times(::google::protobuf::uint32 value) {
  
  times_ = value;
  // @@protoc_insertion_point(field_set:XmsgImSdkEventXmsgImAuth.times)
}

// string addr = 3;
inline void XmsgImSdkEventXmsgImAuth::clear_addr() {
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImSdkEventXmsgImAuth::addr() const {
  // @@protoc_insertion_point(field_get:XmsgImSdkEventXmsgImAuth.addr)
  return addr_.GetNoArena();
}
inline void XmsgImSdkEventXmsgImAuth::set_addr(const ::std::string& value) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImSdkEventXmsgImAuth.addr)
}
#if LANG_CXX11
inline void XmsgImSdkEventXmsgImAuth::set_addr(::std::string&& value) {
  
  addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImSdkEventXmsgImAuth.addr)
}
#endif
inline void XmsgImSdkEventXmsgImAuth::set_addr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImSdkEventXmsgImAuth.addr)
}
inline void XmsgImSdkEventXmsgImAuth::set_addr(const char* value, size_t size) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImSdkEventXmsgImAuth.addr)
}
inline ::std::string* XmsgImSdkEventXmsgImAuth::mutable_addr() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImSdkEventXmsgImAuth.addr)
  return addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImSdkEventXmsgImAuth::release_addr() {
  // @@protoc_insertion_point(field_release:XmsgImSdkEventXmsgImAuth.addr)
  
  return addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImSdkEventXmsgImAuth::set_allocated_addr(::std::string* addr) {
  if (addr != NULL) {
    
  } else {
    
  }
  addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr);
  // @@protoc_insertion_point(field_set_allocated:XmsgImSdkEventXmsgImAuth.addr)
}

// -------------------------------------------------------------------

// XmsgImSdkEventXmsgAp

// string evn = 1;
inline void XmsgImSdkEventXmsgAp::clear_evn() {
  evn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImSdkEventXmsgAp::evn() const {
  // @@protoc_insertion_point(field_get:XmsgImSdkEventXmsgAp.evn)
  return evn_.GetNoArena();
}
inline void XmsgImSdkEventXmsgAp::set_evn(const ::std::string& value) {
  
  evn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImSdkEventXmsgAp.evn)
}
#if LANG_CXX11
inline void XmsgImSdkEventXmsgAp::set_evn(::std::string&& value) {
  
  evn_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImSdkEventXmsgAp.evn)
}
#endif
inline void XmsgImSdkEventXmsgAp::set_evn(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  evn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImSdkEventXmsgAp.evn)
}
inline void XmsgImSdkEventXmsgAp::set_evn(const char* value, size_t size) {
  
  evn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImSdkEventXmsgAp.evn)
}
inline ::std::string* XmsgImSdkEventXmsgAp::mutable_evn() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImSdkEventXmsgAp.evn)
  return evn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImSdkEventXmsgAp::release_evn() {
  // @@protoc_insertion_point(field_release:XmsgImSdkEventXmsgAp.evn)
  
  return evn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImSdkEventXmsgAp::set_allocated_evn(::std::string* evn) {
  if (evn != NULL) {
    
  } else {
    
  }
  evn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), evn);
  // @@protoc_insertion_point(field_set_allocated:XmsgImSdkEventXmsgAp.evn)
}

// uint32 times = 2;
inline void XmsgImSdkEventXmsgAp::clear_times() {
  times_ = 0u;
}
inline ::google::protobuf::uint32 XmsgImSdkEventXmsgAp::times() const {
  // @@protoc_insertion_point(field_get:XmsgImSdkEventXmsgAp.times)
  return times_;
}
inline void XmsgImSdkEventXmsgAp::set_times(::google::protobuf::uint32 value) {
  
  times_ = value;
  // @@protoc_insertion_point(field_set:XmsgImSdkEventXmsgAp.times)
}

// string addr = 3;
inline void XmsgImSdkEventXmsgAp::clear_addr() {
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImSdkEventXmsgAp::addr() const {
  // @@protoc_insertion_point(field_get:XmsgImSdkEventXmsgAp.addr)
  return addr_.GetNoArena();
}
inline void XmsgImSdkEventXmsgAp::set_addr(const ::std::string& value) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImSdkEventXmsgAp.addr)
}
#if LANG_CXX11
inline void XmsgImSdkEventXmsgAp::set_addr(::std::string&& value) {
  
  addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImSdkEventXmsgAp.addr)
}
#endif
inline void XmsgImSdkEventXmsgAp::set_addr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImSdkEventXmsgAp.addr)
}
inline void XmsgImSdkEventXmsgAp::set_addr(const char* value, size_t size) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImSdkEventXmsgAp.addr)
}
inline ::std::string* XmsgImSdkEventXmsgAp::mutable_addr() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImSdkEventXmsgAp.addr)
  return addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImSdkEventXmsgAp::release_addr() {
  // @@protoc_insertion_point(field_release:XmsgImSdkEventXmsgAp.addr)
  
  return addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImSdkEventXmsgAp::set_allocated_addr(::std::string* addr) {
  if (addr != NULL) {
    
  } else {
    
  }
  addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr);
  // @@protoc_insertion_point(field_set_allocated:XmsgImSdkEventXmsgAp.addr)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::XmsgImSdkEventType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::XmsgImSdkEventType>() {
  return ::XmsgImSdkEventType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sdk_2dx_2dmsg_2dim_2dclient_2devent_2eproto__INCLUDED
