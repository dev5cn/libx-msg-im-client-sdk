// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net-x-msg-file.proto

#include "net-x-msg-file.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class XmsgFileUploadSimpleReq_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgFileUploadSimpleReq_ExtEntry_DoNotUse>
      _instance;
} _XmsgFileUploadSimpleReq_ExtEntry_DoNotUse_default_instance_;
class XmsgFileUploadSimpleReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgFileUploadSimpleReq>
      _instance;
} _XmsgFileUploadSimpleReq_default_instance_;
class XmsgFileUploadSimpleRsp_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse>
      _instance;
} _XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgFileUploadSimpleRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgFileUploadSimpleRsp>
      _instance;
} _XmsgFileUploadSimpleRsp_default_instance_;
class XmsgFileDownloadSimpleReq_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse>
      _instance;
} _XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse_default_instance_;
class XmsgFileDownloadSimpleReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgFileDownloadSimpleReq>
      _instance;
} _XmsgFileDownloadSimpleReq_default_instance_;
class XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse>
      _instance;
} _XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgFileDownloadSimpleRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgFileDownloadSimpleRsp>
      _instance;
} _XmsgFileDownloadSimpleRsp_default_instance_;
class XmsgFileUsrFileInfoQueryReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgFileUsrFileInfoQueryReq>
      _instance;
} _XmsgFileUsrFileInfoQueryReq_default_instance_;
class XmsgFileUsrFileInfoQueryRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgFileUsrFileInfoQueryRsp>
      _instance;
} _XmsgFileUsrFileInfoQueryRsp_default_instance_;
class XmsgFileUsrFileInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgFileUsrFileInfo>
      _instance;
} _XmsgFileUsrFileInfo_default_instance_;
namespace protobuf_net_2dx_2dmsg_2dfile_2eproto {
void InitDefaultsXmsgFileUploadSimpleReq_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgFileUploadSimpleReq_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgFileUploadSimpleReq_ExtEntry_DoNotUse();
  }
  ::XmsgFileUploadSimpleReq_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgFileUploadSimpleReq_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgFileUploadSimpleReq_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgFileUploadSimpleReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dfile_2eproto::InitDefaultsXmsgFileUploadSimpleReq_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgFileUploadSimpleReq_default_instance_;
    new (ptr) ::XmsgFileUploadSimpleReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgFileUploadSimpleReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgFileUploadSimpleReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgFileUploadSimpleReqImpl);
}

void InitDefaultsXmsgFileUploadSimpleRsp_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse();
  }
  ::XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgFileUploadSimpleRsp_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgFileUploadSimpleRsp_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgFileUploadSimpleRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dfile_2eproto::InitDefaultsXmsgFileUploadSimpleRsp_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgFileUploadSimpleRsp_default_instance_;
    new (ptr) ::XmsgFileUploadSimpleRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgFileUploadSimpleRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgFileUploadSimpleRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgFileUploadSimpleRspImpl);
}

void InitDefaultsXmsgFileDownloadSimpleReq_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse();
  }
  ::XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgFileDownloadSimpleReq_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgFileDownloadSimpleReq_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgFileDownloadSimpleReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dfile_2eproto::InitDefaultsXmsgFileDownloadSimpleReq_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgFileDownloadSimpleReq_default_instance_;
    new (ptr) ::XmsgFileDownloadSimpleReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgFileDownloadSimpleReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgFileDownloadSimpleReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgFileDownloadSimpleReqImpl);
}

void InitDefaultsXmsgFileDownloadSimpleRsp_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse();
  }
  ::XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgFileDownloadSimpleRsp_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgFileDownloadSimpleRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dfile_2eproto::InitDefaultsXmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgFileDownloadSimpleRsp_default_instance_;
    new (ptr) ::XmsgFileDownloadSimpleRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgFileDownloadSimpleRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgFileDownloadSimpleRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgFileDownloadSimpleRspImpl);
}

void InitDefaultsXmsgFileUsrFileInfoQueryReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgFileUsrFileInfoQueryReq_default_instance_;
    new (ptr) ::XmsgFileUsrFileInfoQueryReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgFileUsrFileInfoQueryReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgFileUsrFileInfoQueryReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgFileUsrFileInfoQueryReqImpl);
}

void InitDefaultsXmsgFileUsrFileInfoQueryRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dfile_2eproto::InitDefaultsXmsgFileUsrFileInfo();
  {
    void* ptr = &::_XmsgFileUsrFileInfoQueryRsp_default_instance_;
    new (ptr) ::XmsgFileUsrFileInfoQueryRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgFileUsrFileInfoQueryRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgFileUsrFileInfoQueryRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgFileUsrFileInfoQueryRspImpl);
}

void InitDefaultsXmsgFileUsrFileInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgFileUsrFileInfo_default_instance_;
    new (ptr) ::XmsgFileUsrFileInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgFileUsrFileInfo::InitAsDefaultInstance();
}

void InitDefaultsXmsgFileUsrFileInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgFileUsrFileInfoImpl);
}

::google::protobuf::Metadata file_level_metadata[11];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileUploadSimpleReq_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileUploadSimpleReq_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileUploadSimpleReq_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileUploadSimpleReq_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileUploadSimpleReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileUploadSimpleReq, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileUploadSimpleReq, filesize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileUploadSimpleReq, ext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileUploadSimpleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileUploadSimpleRsp, fid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileUploadSimpleRsp, hashval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileUploadSimpleRsp, ext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileDownloadSimpleReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileDownloadSimpleReq, fid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileDownloadSimpleReq, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileDownloadSimpleReq, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileDownloadSimpleReq, len_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileDownloadSimpleReq, ext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileDownloadSimpleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileDownloadSimpleRsp, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileDownloadSimpleRsp, filesize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileDownloadSimpleRsp, hashval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileDownloadSimpleRsp, gts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileDownloadSimpleRsp, ext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileUsrFileInfoQueryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileUsrFileInfoQueryReq, sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileUsrFileInfoQueryReq, ets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileUsrFileInfoQueryReq, page_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileUsrFileInfoQueryReq, pagesize_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileUsrFileInfoQueryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileUsrFileInfoQueryRsp, fileinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileUsrFileInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileUsrFileInfo, fid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileUsrFileInfo, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileUsrFileInfo, filesize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileUsrFileInfo, hashval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgFileUsrFileInfo, gts_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::XmsgFileUploadSimpleReq_ExtEntry_DoNotUse)},
  { 9, -1, sizeof(::XmsgFileUploadSimpleReq)},
  { 17, 24, sizeof(::XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse)},
  { 26, -1, sizeof(::XmsgFileUploadSimpleRsp)},
  { 34, 41, sizeof(::XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse)},
  { 43, -1, sizeof(::XmsgFileDownloadSimpleReq)},
  { 53, 60, sizeof(::XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse)},
  { 62, -1, sizeof(::XmsgFileDownloadSimpleRsp)},
  { 72, -1, sizeof(::XmsgFileUsrFileInfoQueryReq)},
  { 81, -1, sizeof(::XmsgFileUsrFileInfoQueryRsp)},
  { 87, -1, sizeof(::XmsgFileUsrFileInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgFileUploadSimpleReq_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgFileUploadSimpleReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgFileUploadSimpleRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgFileDownloadSimpleReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgFileDownloadSimpleRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgFileUsrFileInfoQueryReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgFileUsrFileInfoQueryRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgFileUsrFileInfo_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "net-x-msg-file.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024net-x-msg-file.proto\"\231\001\n\027XmsgFileUploa"
      "dSimpleReq\022\020\n\010fileName\030\001 \001(\t\022\020\n\010fileSize"
      "\030\002 \001(\004\022.\n\003ext\030\003 \003(\0132!.XmsgFileUploadSimp"
      "leReq.ExtEntry\032*\n\010ExtEntry\022\013\n\003key\030\001 \001(\t\022"
      "\r\n\005value\030\002 \001(\t:\0028\001\"\223\001\n\027XmsgFileUploadSim"
      "pleRsp\022\013\n\003fid\030\001 \001(\t\022\017\n\007hashVal\030\002 \001(\t\022.\n\003"
      "ext\030\003 \003(\0132!.XmsgFileUploadSimpleRsp.ExtE"
      "ntry\032*\n\010ExtEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002"
      " \001(\t:\0028\001\"\260\001\n\031XmsgFileDownloadSimpleReq\022\013"
      "\n\003fid\030\001 \001(\t\022\013\n\003cgt\030\002 \001(\t\022\016\n\006offset\030\003 \001(\004"
      "\022\013\n\003len\030\004 \001(\004\0220\n\003ext\030\005 \003(\0132#.XmsgFileDow"
      "nloadSimpleReq.ExtEntry\032*\n\010ExtEntry\022\013\n\003k"
      "ey\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\273\001\n\031XmsgFile"
      "DownloadSimpleRsp\022\020\n\010fileName\030\001 \001(\t\022\020\n\010f"
      "ileSize\030\002 \001(\004\022\017\n\007hashVal\030\003 \001(\t\022\013\n\003gts\030\004 "
      "\001(\004\0220\n\003ext\030\005 \003(\0132#.XmsgFileDownloadSimpl"
      "eRsp.ExtEntry\032*\n\010ExtEntry\022\013\n\003key\030\001 \001(\t\022\r"
      "\n\005value\030\002 \001(\t:\0028\001\"W\n\033XmsgFileUsrFileInfo"
      "QueryReq\022\013\n\003sts\030\001 \001(\004\022\013\n\003ets\030\002 \001(\004\022\014\n\004pa"
      "ge\030\003 \001(\r\022\020\n\010pageSize\030\004 \001(\r\"E\n\033XmsgFileUs"
      "rFileInfoQueryRsp\022&\n\010fileInfo\030\001 \003(\0132\024.Xm"
      "sgFileUsrFileInfo\"d\n\023XmsgFileUsrFileInfo"
      "\022\013\n\003fid\030\001 \001(\t\022\020\n\010fileName\030\002 \001(\t\022\020\n\010fileS"
      "ize\030\003 \001(\004\022\017\n\007hashVal\030\004 \001(\t\022\013\n\003gts\030\005 \001(\004B"
      "\026\n\010x.msg.pbB\nXmsgFilePbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 991);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net-x-msg-file.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_net_2dx_2dmsg_2dfile_2eproto

// ===================================================================

XmsgFileUploadSimpleReq_ExtEntry_DoNotUse::XmsgFileUploadSimpleReq_ExtEntry_DoNotUse() {}
XmsgFileUploadSimpleReq_ExtEntry_DoNotUse::XmsgFileUploadSimpleReq_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgFileUploadSimpleReq_ExtEntry_DoNotUse::MergeFrom(const XmsgFileUploadSimpleReq_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgFileUploadSimpleReq_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2dfile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dfile_2eproto::file_level_metadata[0];
}
void XmsgFileUploadSimpleReq_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgFileUploadSimpleReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgFileUploadSimpleReq::kFileNameFieldNumber;
const int XmsgFileUploadSimpleReq::kFileSizeFieldNumber;
const int XmsgFileUploadSimpleReq::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgFileUploadSimpleReq::XmsgFileUploadSimpleReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dfile_2eproto::InitDefaultsXmsgFileUploadSimpleReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgFileUploadSimpleReq)
}
XmsgFileUploadSimpleReq::XmsgFileUploadSimpleReq(const XmsgFileUploadSimpleReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filename().size() > 0) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  filesize_ = from.filesize_;
  // @@protoc_insertion_point(copy_constructor:XmsgFileUploadSimpleReq)
}

void XmsgFileUploadSimpleReq::SharedCtor() {
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filesize_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

XmsgFileUploadSimpleReq::~XmsgFileUploadSimpleReq() {
  // @@protoc_insertion_point(destructor:XmsgFileUploadSimpleReq)
  SharedDtor();
}

void XmsgFileUploadSimpleReq::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgFileUploadSimpleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgFileUploadSimpleReq::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dfile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dfile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgFileUploadSimpleReq& XmsgFileUploadSimpleReq::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dfile_2eproto::InitDefaultsXmsgFileUploadSimpleReq();
  return *internal_default_instance();
}

XmsgFileUploadSimpleReq* XmsgFileUploadSimpleReq::New(::google::protobuf::Arena* arena) const {
  XmsgFileUploadSimpleReq* n = new XmsgFileUploadSimpleReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgFileUploadSimpleReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgFileUploadSimpleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filesize_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool XmsgFileUploadSimpleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgFileUploadSimpleReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string fileName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgFileUploadSimpleReq.fileName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 fileSize = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &filesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> ext = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          XmsgFileUploadSimpleReq_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgFileUploadSimpleReq_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgFileUploadSimpleReq.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgFileUploadSimpleReq.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgFileUploadSimpleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgFileUploadSimpleReq)
  return false;
#undef DO_
}

void XmsgFileUploadSimpleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgFileUploadSimpleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fileName = 1;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgFileUploadSimpleReq.fileName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // uint64 fileSize = 2;
  if (this->filesize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->filesize(), output);
  }

  // map<string, string> ext = 3;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgFileUploadSimpleReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgFileUploadSimpleReq.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgFileUploadSimpleReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgFileUploadSimpleReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgFileUploadSimpleReq)
}

::google::protobuf::uint8* XmsgFileUploadSimpleReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgFileUploadSimpleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fileName = 1;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgFileUploadSimpleReq.fileName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // uint64 fileSize = 2;
  if (this->filesize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->filesize(), target);
  }

  // map<string, string> ext = 3;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgFileUploadSimpleReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgFileUploadSimpleReq.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgFileUploadSimpleReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgFileUploadSimpleReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgFileUploadSimpleReq)
  return target;
}

size_t XmsgFileUploadSimpleReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgFileUploadSimpleReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgFileUploadSimpleReq_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string fileName = 1;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filename());
  }

  // uint64 fileSize = 2;
  if (this->filesize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->filesize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgFileUploadSimpleReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgFileUploadSimpleReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgFileUploadSimpleReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgFileUploadSimpleReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgFileUploadSimpleReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgFileUploadSimpleReq)
    MergeFrom(*source);
  }
}

void XmsgFileUploadSimpleReq::MergeFrom(const XmsgFileUploadSimpleReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgFileUploadSimpleReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
  if (from.filename().size() > 0) {

    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from.filesize() != 0) {
    set_filesize(from.filesize());
  }
}

void XmsgFileUploadSimpleReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgFileUploadSimpleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgFileUploadSimpleReq::CopyFrom(const XmsgFileUploadSimpleReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgFileUploadSimpleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgFileUploadSimpleReq::IsInitialized() const {
  return true;
}

void XmsgFileUploadSimpleReq::Swap(XmsgFileUploadSimpleReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgFileUploadSimpleReq::InternalSwap(XmsgFileUploadSimpleReq* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  filename_.Swap(&other->filename_);
  swap(filesize_, other->filesize_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgFileUploadSimpleReq::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dfile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dfile_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse::XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse() {}
XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse::XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse::MergeFrom(const XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2dfile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dfile_2eproto::file_level_metadata[2];
}
void XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgFileUploadSimpleRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgFileUploadSimpleRsp::kFidFieldNumber;
const int XmsgFileUploadSimpleRsp::kHashValFieldNumber;
const int XmsgFileUploadSimpleRsp::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgFileUploadSimpleRsp::XmsgFileUploadSimpleRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dfile_2eproto::InitDefaultsXmsgFileUploadSimpleRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgFileUploadSimpleRsp)
}
XmsgFileUploadSimpleRsp::XmsgFileUploadSimpleRsp(const XmsgFileUploadSimpleRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  fid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fid().size() > 0) {
    fid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fid_);
  }
  hashval_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hashval().size() > 0) {
    hashval_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hashval_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgFileUploadSimpleRsp)
}

void XmsgFileUploadSimpleRsp::SharedCtor() {
  fid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashval_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgFileUploadSimpleRsp::~XmsgFileUploadSimpleRsp() {
  // @@protoc_insertion_point(destructor:XmsgFileUploadSimpleRsp)
  SharedDtor();
}

void XmsgFileUploadSimpleRsp::SharedDtor() {
  fid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashval_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgFileUploadSimpleRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgFileUploadSimpleRsp::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dfile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dfile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgFileUploadSimpleRsp& XmsgFileUploadSimpleRsp::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dfile_2eproto::InitDefaultsXmsgFileUploadSimpleRsp();
  return *internal_default_instance();
}

XmsgFileUploadSimpleRsp* XmsgFileUploadSimpleRsp::New(::google::protobuf::Arena* arena) const {
  XmsgFileUploadSimpleRsp* n = new XmsgFileUploadSimpleRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgFileUploadSimpleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgFileUploadSimpleRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  fid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashval_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgFileUploadSimpleRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgFileUploadSimpleRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string fid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fid().data(), static_cast<int>(this->fid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgFileUploadSimpleRsp.fid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hashVal = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hashval()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hashval().data(), static_cast<int>(this->hashval().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgFileUploadSimpleRsp.hashVal"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> ext = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgFileUploadSimpleRsp.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgFileUploadSimpleRsp.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgFileUploadSimpleRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgFileUploadSimpleRsp)
  return false;
#undef DO_
}

void XmsgFileUploadSimpleRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgFileUploadSimpleRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fid = 1;
  if (this->fid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fid().data(), static_cast<int>(this->fid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgFileUploadSimpleRsp.fid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->fid(), output);
  }

  // string hashVal = 2;
  if (this->hashval().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hashval().data(), static_cast<int>(this->hashval().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgFileUploadSimpleRsp.hashVal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->hashval(), output);
  }

  // map<string, string> ext = 3;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgFileUploadSimpleRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgFileUploadSimpleRsp.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgFileUploadSimpleRsp)
}

::google::protobuf::uint8* XmsgFileUploadSimpleRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgFileUploadSimpleRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fid = 1;
  if (this->fid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fid().data(), static_cast<int>(this->fid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgFileUploadSimpleRsp.fid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->fid(), target);
  }

  // string hashVal = 2;
  if (this->hashval().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hashval().data(), static_cast<int>(this->hashval().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgFileUploadSimpleRsp.hashVal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->hashval(), target);
  }

  // map<string, string> ext = 3;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgFileUploadSimpleRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgFileUploadSimpleRsp.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgFileUploadSimpleRsp)
  return target;
}

size_t XmsgFileUploadSimpleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgFileUploadSimpleRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string fid = 1;
  if (this->fid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fid());
  }

  // string hashVal = 2;
  if (this->hashval().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hashval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgFileUploadSimpleRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgFileUploadSimpleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgFileUploadSimpleRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgFileUploadSimpleRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgFileUploadSimpleRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgFileUploadSimpleRsp)
    MergeFrom(*source);
  }
}

void XmsgFileUploadSimpleRsp::MergeFrom(const XmsgFileUploadSimpleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgFileUploadSimpleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
  if (from.fid().size() > 0) {

    fid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fid_);
  }
  if (from.hashval().size() > 0) {

    hashval_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hashval_);
  }
}

void XmsgFileUploadSimpleRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgFileUploadSimpleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgFileUploadSimpleRsp::CopyFrom(const XmsgFileUploadSimpleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgFileUploadSimpleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgFileUploadSimpleRsp::IsInitialized() const {
  return true;
}

void XmsgFileUploadSimpleRsp::Swap(XmsgFileUploadSimpleRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgFileUploadSimpleRsp::InternalSwap(XmsgFileUploadSimpleRsp* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  fid_.Swap(&other->fid_);
  hashval_.Swap(&other->hashval_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgFileUploadSimpleRsp::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dfile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dfile_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse::XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse() {}
XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse::XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse::MergeFrom(const XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2dfile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dfile_2eproto::file_level_metadata[4];
}
void XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgFileDownloadSimpleReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgFileDownloadSimpleReq::kFidFieldNumber;
const int XmsgFileDownloadSimpleReq::kCgtFieldNumber;
const int XmsgFileDownloadSimpleReq::kOffsetFieldNumber;
const int XmsgFileDownloadSimpleReq::kLenFieldNumber;
const int XmsgFileDownloadSimpleReq::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgFileDownloadSimpleReq::XmsgFileDownloadSimpleReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dfile_2eproto::InitDefaultsXmsgFileDownloadSimpleReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgFileDownloadSimpleReq)
}
XmsgFileDownloadSimpleReq::XmsgFileDownloadSimpleReq(const XmsgFileDownloadSimpleReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  fid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fid().size() > 0) {
    fid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fid_);
  }
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&len_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(len_));
  // @@protoc_insertion_point(copy_constructor:XmsgFileDownloadSimpleReq)
}

void XmsgFileDownloadSimpleReq::SharedCtor() {
  fid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&len_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(len_));
  _cached_size_ = 0;
}

XmsgFileDownloadSimpleReq::~XmsgFileDownloadSimpleReq() {
  // @@protoc_insertion_point(destructor:XmsgFileDownloadSimpleReq)
  SharedDtor();
}

void XmsgFileDownloadSimpleReq::SharedDtor() {
  fid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgFileDownloadSimpleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgFileDownloadSimpleReq::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dfile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dfile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgFileDownloadSimpleReq& XmsgFileDownloadSimpleReq::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dfile_2eproto::InitDefaultsXmsgFileDownloadSimpleReq();
  return *internal_default_instance();
}

XmsgFileDownloadSimpleReq* XmsgFileDownloadSimpleReq::New(::google::protobuf::Arena* arena) const {
  XmsgFileDownloadSimpleReq* n = new XmsgFileDownloadSimpleReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgFileDownloadSimpleReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgFileDownloadSimpleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  fid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&len_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(len_));
  _internal_metadata_.Clear();
}

bool XmsgFileDownloadSimpleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgFileDownloadSimpleReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string fid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fid().data(), static_cast<int>(this->fid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgFileDownloadSimpleReq.fid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cgt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgFileDownloadSimpleReq.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 offset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 len = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> ext = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgFileDownloadSimpleReq.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgFileDownloadSimpleReq.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgFileDownloadSimpleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgFileDownloadSimpleReq)
  return false;
#undef DO_
}

void XmsgFileDownloadSimpleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgFileDownloadSimpleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fid = 1;
  if (this->fid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fid().data(), static_cast<int>(this->fid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgFileDownloadSimpleReq.fid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->fid(), output);
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgFileDownloadSimpleReq.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cgt(), output);
  }

  // uint64 offset = 3;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->offset(), output);
  }

  // uint64 len = 4;
  if (this->len() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->len(), output);
  }

  // map<string, string> ext = 5;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgFileDownloadSimpleReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgFileDownloadSimpleReq.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgFileDownloadSimpleReq)
}

::google::protobuf::uint8* XmsgFileDownloadSimpleReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgFileDownloadSimpleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fid = 1;
  if (this->fid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fid().data(), static_cast<int>(this->fid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgFileDownloadSimpleReq.fid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->fid(), target);
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgFileDownloadSimpleReq.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cgt(), target);
  }

  // uint64 offset = 3;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->offset(), target);
  }

  // uint64 len = 4;
  if (this->len() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->len(), target);
  }

  // map<string, string> ext = 5;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgFileDownloadSimpleReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgFileDownloadSimpleReq.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgFileDownloadSimpleReq)
  return target;
}

size_t XmsgFileDownloadSimpleReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgFileDownloadSimpleReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string fid = 1;
  if (this->fid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fid());
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  // uint64 offset = 3;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());
  }

  // uint64 len = 4;
  if (this->len() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->len());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgFileDownloadSimpleReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgFileDownloadSimpleReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgFileDownloadSimpleReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgFileDownloadSimpleReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgFileDownloadSimpleReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgFileDownloadSimpleReq)
    MergeFrom(*source);
  }
}

void XmsgFileDownloadSimpleReq::MergeFrom(const XmsgFileDownloadSimpleReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgFileDownloadSimpleReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
  if (from.fid().size() > 0) {

    fid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fid_);
  }
  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.len() != 0) {
    set_len(from.len());
  }
}

void XmsgFileDownloadSimpleReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgFileDownloadSimpleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgFileDownloadSimpleReq::CopyFrom(const XmsgFileDownloadSimpleReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgFileDownloadSimpleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgFileDownloadSimpleReq::IsInitialized() const {
  return true;
}

void XmsgFileDownloadSimpleReq::Swap(XmsgFileDownloadSimpleReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgFileDownloadSimpleReq::InternalSwap(XmsgFileDownloadSimpleReq* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  fid_.Swap(&other->fid_);
  cgt_.Swap(&other->cgt_);
  swap(offset_, other->offset_);
  swap(len_, other->len_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgFileDownloadSimpleReq::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dfile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dfile_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse::XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse() {}
XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse::XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse::MergeFrom(const XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2dfile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dfile_2eproto::file_level_metadata[6];
}
void XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgFileDownloadSimpleRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgFileDownloadSimpleRsp::kFileNameFieldNumber;
const int XmsgFileDownloadSimpleRsp::kFileSizeFieldNumber;
const int XmsgFileDownloadSimpleRsp::kHashValFieldNumber;
const int XmsgFileDownloadSimpleRsp::kGtsFieldNumber;
const int XmsgFileDownloadSimpleRsp::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgFileDownloadSimpleRsp::XmsgFileDownloadSimpleRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dfile_2eproto::InitDefaultsXmsgFileDownloadSimpleRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgFileDownloadSimpleRsp)
}
XmsgFileDownloadSimpleRsp::XmsgFileDownloadSimpleRsp(const XmsgFileDownloadSimpleRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filename().size() > 0) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  hashval_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hashval().size() > 0) {
    hashval_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hashval_);
  }
  ::memcpy(&filesize_, &from.filesize_,
    static_cast<size_t>(reinterpret_cast<char*>(&gts_) -
    reinterpret_cast<char*>(&filesize_)) + sizeof(gts_));
  // @@protoc_insertion_point(copy_constructor:XmsgFileDownloadSimpleRsp)
}

void XmsgFileDownloadSimpleRsp::SharedCtor() {
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashval_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&filesize_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gts_) -
      reinterpret_cast<char*>(&filesize_)) + sizeof(gts_));
  _cached_size_ = 0;
}

XmsgFileDownloadSimpleRsp::~XmsgFileDownloadSimpleRsp() {
  // @@protoc_insertion_point(destructor:XmsgFileDownloadSimpleRsp)
  SharedDtor();
}

void XmsgFileDownloadSimpleRsp::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashval_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgFileDownloadSimpleRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgFileDownloadSimpleRsp::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dfile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dfile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgFileDownloadSimpleRsp& XmsgFileDownloadSimpleRsp::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dfile_2eproto::InitDefaultsXmsgFileDownloadSimpleRsp();
  return *internal_default_instance();
}

XmsgFileDownloadSimpleRsp* XmsgFileDownloadSimpleRsp::New(::google::protobuf::Arena* arena) const {
  XmsgFileDownloadSimpleRsp* n = new XmsgFileDownloadSimpleRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgFileDownloadSimpleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgFileDownloadSimpleRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashval_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&filesize_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gts_) -
      reinterpret_cast<char*>(&filesize_)) + sizeof(gts_));
  _internal_metadata_.Clear();
}

bool XmsgFileDownloadSimpleRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgFileDownloadSimpleRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string fileName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgFileDownloadSimpleRsp.fileName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 fileSize = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &filesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hashVal = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hashval()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hashval().data(), static_cast<int>(this->hashval().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgFileDownloadSimpleRsp.hashVal"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> ext = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgFileDownloadSimpleRsp.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgFileDownloadSimpleRsp.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgFileDownloadSimpleRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgFileDownloadSimpleRsp)
  return false;
#undef DO_
}

void XmsgFileDownloadSimpleRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgFileDownloadSimpleRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fileName = 1;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgFileDownloadSimpleRsp.fileName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // uint64 fileSize = 2;
  if (this->filesize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->filesize(), output);
  }

  // string hashVal = 3;
  if (this->hashval().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hashval().data(), static_cast<int>(this->hashval().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgFileDownloadSimpleRsp.hashVal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->hashval(), output);
  }

  // uint64 gts = 4;
  if (this->gts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->gts(), output);
  }

  // map<string, string> ext = 5;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgFileDownloadSimpleRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgFileDownloadSimpleRsp.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgFileDownloadSimpleRsp)
}

::google::protobuf::uint8* XmsgFileDownloadSimpleRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgFileDownloadSimpleRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fileName = 1;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgFileDownloadSimpleRsp.fileName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // uint64 fileSize = 2;
  if (this->filesize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->filesize(), target);
  }

  // string hashVal = 3;
  if (this->hashval().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hashval().data(), static_cast<int>(this->hashval().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgFileDownloadSimpleRsp.hashVal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->hashval(), target);
  }

  // uint64 gts = 4;
  if (this->gts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->gts(), target);
  }

  // map<string, string> ext = 5;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgFileDownloadSimpleRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgFileDownloadSimpleRsp.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgFileDownloadSimpleRsp)
  return target;
}

size_t XmsgFileDownloadSimpleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgFileDownloadSimpleRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string fileName = 1;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filename());
  }

  // string hashVal = 3;
  if (this->hashval().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hashval());
  }

  // uint64 fileSize = 2;
  if (this->filesize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->filesize());
  }

  // uint64 gts = 4;
  if (this->gts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gts());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgFileDownloadSimpleRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgFileDownloadSimpleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgFileDownloadSimpleRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgFileDownloadSimpleRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgFileDownloadSimpleRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgFileDownloadSimpleRsp)
    MergeFrom(*source);
  }
}

void XmsgFileDownloadSimpleRsp::MergeFrom(const XmsgFileDownloadSimpleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgFileDownloadSimpleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
  if (from.filename().size() > 0) {

    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from.hashval().size() > 0) {

    hashval_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hashval_);
  }
  if (from.filesize() != 0) {
    set_filesize(from.filesize());
  }
  if (from.gts() != 0) {
    set_gts(from.gts());
  }
}

void XmsgFileDownloadSimpleRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgFileDownloadSimpleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgFileDownloadSimpleRsp::CopyFrom(const XmsgFileDownloadSimpleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgFileDownloadSimpleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgFileDownloadSimpleRsp::IsInitialized() const {
  return true;
}

void XmsgFileDownloadSimpleRsp::Swap(XmsgFileDownloadSimpleRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgFileDownloadSimpleRsp::InternalSwap(XmsgFileDownloadSimpleRsp* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  filename_.Swap(&other->filename_);
  hashval_.Swap(&other->hashval_);
  swap(filesize_, other->filesize_);
  swap(gts_, other->gts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgFileDownloadSimpleRsp::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dfile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dfile_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgFileUsrFileInfoQueryReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgFileUsrFileInfoQueryReq::kStsFieldNumber;
const int XmsgFileUsrFileInfoQueryReq::kEtsFieldNumber;
const int XmsgFileUsrFileInfoQueryReq::kPageFieldNumber;
const int XmsgFileUsrFileInfoQueryReq::kPageSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgFileUsrFileInfoQueryReq::XmsgFileUsrFileInfoQueryReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dfile_2eproto::InitDefaultsXmsgFileUsrFileInfoQueryReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgFileUsrFileInfoQueryReq)
}
XmsgFileUsrFileInfoQueryReq::XmsgFileUsrFileInfoQueryReq(const XmsgFileUsrFileInfoQueryReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sts_, &from.sts_,
    static_cast<size_t>(reinterpret_cast<char*>(&pagesize_) -
    reinterpret_cast<char*>(&sts_)) + sizeof(pagesize_));
  // @@protoc_insertion_point(copy_constructor:XmsgFileUsrFileInfoQueryReq)
}

void XmsgFileUsrFileInfoQueryReq::SharedCtor() {
  ::memset(&sts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pagesize_) -
      reinterpret_cast<char*>(&sts_)) + sizeof(pagesize_));
  _cached_size_ = 0;
}

XmsgFileUsrFileInfoQueryReq::~XmsgFileUsrFileInfoQueryReq() {
  // @@protoc_insertion_point(destructor:XmsgFileUsrFileInfoQueryReq)
  SharedDtor();
}

void XmsgFileUsrFileInfoQueryReq::SharedDtor() {
}

void XmsgFileUsrFileInfoQueryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgFileUsrFileInfoQueryReq::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dfile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dfile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgFileUsrFileInfoQueryReq& XmsgFileUsrFileInfoQueryReq::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dfile_2eproto::InitDefaultsXmsgFileUsrFileInfoQueryReq();
  return *internal_default_instance();
}

XmsgFileUsrFileInfoQueryReq* XmsgFileUsrFileInfoQueryReq::New(::google::protobuf::Arena* arena) const {
  XmsgFileUsrFileInfoQueryReq* n = new XmsgFileUsrFileInfoQueryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgFileUsrFileInfoQueryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgFileUsrFileInfoQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&sts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pagesize_) -
      reinterpret_cast<char*>(&sts_)) + sizeof(pagesize_));
  _internal_metadata_.Clear();
}

bool XmsgFileUsrFileInfoQueryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgFileUsrFileInfoQueryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 sts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ets = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ets_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 page = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pageSize = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pagesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgFileUsrFileInfoQueryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgFileUsrFileInfoQueryReq)
  return false;
#undef DO_
}

void XmsgFileUsrFileInfoQueryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgFileUsrFileInfoQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 sts = 1;
  if (this->sts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->sts(), output);
  }

  // uint64 ets = 2;
  if (this->ets() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->ets(), output);
  }

  // uint32 page = 3;
  if (this->page() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->page(), output);
  }

  // uint32 pageSize = 4;
  if (this->pagesize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->pagesize(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgFileUsrFileInfoQueryReq)
}

::google::protobuf::uint8* XmsgFileUsrFileInfoQueryReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgFileUsrFileInfoQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 sts = 1;
  if (this->sts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->sts(), target);
  }

  // uint64 ets = 2;
  if (this->ets() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->ets(), target);
  }

  // uint32 page = 3;
  if (this->page() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->page(), target);
  }

  // uint32 pageSize = 4;
  if (this->pagesize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->pagesize(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgFileUsrFileInfoQueryReq)
  return target;
}

size_t XmsgFileUsrFileInfoQueryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgFileUsrFileInfoQueryReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 sts = 1;
  if (this->sts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sts());
  }

  // uint64 ets = 2;
  if (this->ets() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ets());
  }

  // uint32 page = 3;
  if (this->page() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->page());
  }

  // uint32 pageSize = 4;
  if (this->pagesize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pagesize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgFileUsrFileInfoQueryReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgFileUsrFileInfoQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgFileUsrFileInfoQueryReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgFileUsrFileInfoQueryReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgFileUsrFileInfoQueryReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgFileUsrFileInfoQueryReq)
    MergeFrom(*source);
  }
}

void XmsgFileUsrFileInfoQueryReq::MergeFrom(const XmsgFileUsrFileInfoQueryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgFileUsrFileInfoQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sts() != 0) {
    set_sts(from.sts());
  }
  if (from.ets() != 0) {
    set_ets(from.ets());
  }
  if (from.page() != 0) {
    set_page(from.page());
  }
  if (from.pagesize() != 0) {
    set_pagesize(from.pagesize());
  }
}

void XmsgFileUsrFileInfoQueryReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgFileUsrFileInfoQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgFileUsrFileInfoQueryReq::CopyFrom(const XmsgFileUsrFileInfoQueryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgFileUsrFileInfoQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgFileUsrFileInfoQueryReq::IsInitialized() const {
  return true;
}

void XmsgFileUsrFileInfoQueryReq::Swap(XmsgFileUsrFileInfoQueryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgFileUsrFileInfoQueryReq::InternalSwap(XmsgFileUsrFileInfoQueryReq* other) {
  using std::swap;
  swap(sts_, other->sts_);
  swap(ets_, other->ets_);
  swap(page_, other->page_);
  swap(pagesize_, other->pagesize_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgFileUsrFileInfoQueryReq::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dfile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dfile_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgFileUsrFileInfoQueryRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgFileUsrFileInfoQueryRsp::kFileInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgFileUsrFileInfoQueryRsp::XmsgFileUsrFileInfoQueryRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dfile_2eproto::InitDefaultsXmsgFileUsrFileInfoQueryRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgFileUsrFileInfoQueryRsp)
}
XmsgFileUsrFileInfoQueryRsp::XmsgFileUsrFileInfoQueryRsp(const XmsgFileUsrFileInfoQueryRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fileinfo_(from.fileinfo_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XmsgFileUsrFileInfoQueryRsp)
}

void XmsgFileUsrFileInfoQueryRsp::SharedCtor() {
  _cached_size_ = 0;
}

XmsgFileUsrFileInfoQueryRsp::~XmsgFileUsrFileInfoQueryRsp() {
  // @@protoc_insertion_point(destructor:XmsgFileUsrFileInfoQueryRsp)
  SharedDtor();
}

void XmsgFileUsrFileInfoQueryRsp::SharedDtor() {
}

void XmsgFileUsrFileInfoQueryRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgFileUsrFileInfoQueryRsp::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dfile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dfile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgFileUsrFileInfoQueryRsp& XmsgFileUsrFileInfoQueryRsp::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dfile_2eproto::InitDefaultsXmsgFileUsrFileInfoQueryRsp();
  return *internal_default_instance();
}

XmsgFileUsrFileInfoQueryRsp* XmsgFileUsrFileInfoQueryRsp::New(::google::protobuf::Arena* arena) const {
  XmsgFileUsrFileInfoQueryRsp* n = new XmsgFileUsrFileInfoQueryRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgFileUsrFileInfoQueryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgFileUsrFileInfoQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fileinfo_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgFileUsrFileInfoQueryRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgFileUsrFileInfoQueryRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .XmsgFileUsrFileInfo fileInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_fileinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgFileUsrFileInfoQueryRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgFileUsrFileInfoQueryRsp)
  return false;
#undef DO_
}

void XmsgFileUsrFileInfoQueryRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgFileUsrFileInfoQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XmsgFileUsrFileInfo fileInfo = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fileinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->fileinfo(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgFileUsrFileInfoQueryRsp)
}

::google::protobuf::uint8* XmsgFileUsrFileInfoQueryRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgFileUsrFileInfoQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XmsgFileUsrFileInfo fileInfo = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fileinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->fileinfo(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgFileUsrFileInfoQueryRsp)
  return target;
}

size_t XmsgFileUsrFileInfoQueryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgFileUsrFileInfoQueryRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .XmsgFileUsrFileInfo fileInfo = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->fileinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->fileinfo(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgFileUsrFileInfoQueryRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgFileUsrFileInfoQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgFileUsrFileInfoQueryRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgFileUsrFileInfoQueryRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgFileUsrFileInfoQueryRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgFileUsrFileInfoQueryRsp)
    MergeFrom(*source);
  }
}

void XmsgFileUsrFileInfoQueryRsp::MergeFrom(const XmsgFileUsrFileInfoQueryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgFileUsrFileInfoQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fileinfo_.MergeFrom(from.fileinfo_);
}

void XmsgFileUsrFileInfoQueryRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgFileUsrFileInfoQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgFileUsrFileInfoQueryRsp::CopyFrom(const XmsgFileUsrFileInfoQueryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgFileUsrFileInfoQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgFileUsrFileInfoQueryRsp::IsInitialized() const {
  return true;
}

void XmsgFileUsrFileInfoQueryRsp::Swap(XmsgFileUsrFileInfoQueryRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgFileUsrFileInfoQueryRsp::InternalSwap(XmsgFileUsrFileInfoQueryRsp* other) {
  using std::swap;
  fileinfo_.InternalSwap(&other->fileinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgFileUsrFileInfoQueryRsp::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dfile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dfile_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgFileUsrFileInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgFileUsrFileInfo::kFidFieldNumber;
const int XmsgFileUsrFileInfo::kFileNameFieldNumber;
const int XmsgFileUsrFileInfo::kFileSizeFieldNumber;
const int XmsgFileUsrFileInfo::kHashValFieldNumber;
const int XmsgFileUsrFileInfo::kGtsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgFileUsrFileInfo::XmsgFileUsrFileInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dfile_2eproto::InitDefaultsXmsgFileUsrFileInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgFileUsrFileInfo)
}
XmsgFileUsrFileInfo::XmsgFileUsrFileInfo(const XmsgFileUsrFileInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fid().size() > 0) {
    fid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fid_);
  }
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filename().size() > 0) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  hashval_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hashval().size() > 0) {
    hashval_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hashval_);
  }
  ::memcpy(&filesize_, &from.filesize_,
    static_cast<size_t>(reinterpret_cast<char*>(&gts_) -
    reinterpret_cast<char*>(&filesize_)) + sizeof(gts_));
  // @@protoc_insertion_point(copy_constructor:XmsgFileUsrFileInfo)
}

void XmsgFileUsrFileInfo::SharedCtor() {
  fid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashval_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&filesize_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gts_) -
      reinterpret_cast<char*>(&filesize_)) + sizeof(gts_));
  _cached_size_ = 0;
}

XmsgFileUsrFileInfo::~XmsgFileUsrFileInfo() {
  // @@protoc_insertion_point(destructor:XmsgFileUsrFileInfo)
  SharedDtor();
}

void XmsgFileUsrFileInfo::SharedDtor() {
  fid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashval_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgFileUsrFileInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgFileUsrFileInfo::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dfile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dfile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgFileUsrFileInfo& XmsgFileUsrFileInfo::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dfile_2eproto::InitDefaultsXmsgFileUsrFileInfo();
  return *internal_default_instance();
}

XmsgFileUsrFileInfo* XmsgFileUsrFileInfo::New(::google::protobuf::Arena* arena) const {
  XmsgFileUsrFileInfo* n = new XmsgFileUsrFileInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgFileUsrFileInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgFileUsrFileInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashval_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&filesize_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gts_) -
      reinterpret_cast<char*>(&filesize_)) + sizeof(gts_));
  _internal_metadata_.Clear();
}

bool XmsgFileUsrFileInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgFileUsrFileInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string fid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fid().data(), static_cast<int>(this->fid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgFileUsrFileInfo.fid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fileName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgFileUsrFileInfo.fileName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 fileSize = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &filesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hashVal = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hashval()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hashval().data(), static_cast<int>(this->hashval().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgFileUsrFileInfo.hashVal"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gts = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgFileUsrFileInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgFileUsrFileInfo)
  return false;
#undef DO_
}

void XmsgFileUsrFileInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgFileUsrFileInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fid = 1;
  if (this->fid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fid().data(), static_cast<int>(this->fid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgFileUsrFileInfo.fid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->fid(), output);
  }

  // string fileName = 2;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgFileUsrFileInfo.fileName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filename(), output);
  }

  // uint64 fileSize = 3;
  if (this->filesize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->filesize(), output);
  }

  // string hashVal = 4;
  if (this->hashval().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hashval().data(), static_cast<int>(this->hashval().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgFileUsrFileInfo.hashVal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->hashval(), output);
  }

  // uint64 gts = 5;
  if (this->gts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->gts(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgFileUsrFileInfo)
}

::google::protobuf::uint8* XmsgFileUsrFileInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgFileUsrFileInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fid = 1;
  if (this->fid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fid().data(), static_cast<int>(this->fid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgFileUsrFileInfo.fid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->fid(), target);
  }

  // string fileName = 2;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgFileUsrFileInfo.fileName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filename(), target);
  }

  // uint64 fileSize = 3;
  if (this->filesize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->filesize(), target);
  }

  // string hashVal = 4;
  if (this->hashval().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hashval().data(), static_cast<int>(this->hashval().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgFileUsrFileInfo.hashVal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->hashval(), target);
  }

  // uint64 gts = 5;
  if (this->gts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->gts(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgFileUsrFileInfo)
  return target;
}

size_t XmsgFileUsrFileInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgFileUsrFileInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string fid = 1;
  if (this->fid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fid());
  }

  // string fileName = 2;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filename());
  }

  // string hashVal = 4;
  if (this->hashval().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hashval());
  }

  // uint64 fileSize = 3;
  if (this->filesize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->filesize());
  }

  // uint64 gts = 5;
  if (this->gts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gts());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgFileUsrFileInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgFileUsrFileInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgFileUsrFileInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgFileUsrFileInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgFileUsrFileInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgFileUsrFileInfo)
    MergeFrom(*source);
  }
}

void XmsgFileUsrFileInfo::MergeFrom(const XmsgFileUsrFileInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgFileUsrFileInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fid().size() > 0) {

    fid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fid_);
  }
  if (from.filename().size() > 0) {

    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from.hashval().size() > 0) {

    hashval_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hashval_);
  }
  if (from.filesize() != 0) {
    set_filesize(from.filesize());
  }
  if (from.gts() != 0) {
    set_gts(from.gts());
  }
}

void XmsgFileUsrFileInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgFileUsrFileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgFileUsrFileInfo::CopyFrom(const XmsgFileUsrFileInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgFileUsrFileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgFileUsrFileInfo::IsInitialized() const {
  return true;
}

void XmsgFileUsrFileInfo::Swap(XmsgFileUsrFileInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgFileUsrFileInfo::InternalSwap(XmsgFileUsrFileInfo* other) {
  using std::swap;
  fid_.Swap(&other->fid_);
  filename_.Swap(&other->filename_);
  hashval_.Swap(&other->hashval_);
  swap(filesize_, other->filesize_);
  swap(gts_, other->gts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgFileUsrFileInfo::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dfile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dfile_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
