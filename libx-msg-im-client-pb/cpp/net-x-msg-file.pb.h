// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net-x-msg-file.proto

#ifndef PROTOBUF_net_2dx_2dmsg_2dfile_2eproto__INCLUDED
#define PROTOBUF_net_2dx_2dmsg_2dfile_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_net_2dx_2dmsg_2dfile_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[11];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsXmsgFileUploadSimpleReq_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgFileUploadSimpleReq_ExtEntry_DoNotUse();
void InitDefaultsXmsgFileUploadSimpleReqImpl();
void InitDefaultsXmsgFileUploadSimpleReq();
void InitDefaultsXmsgFileUploadSimpleRsp_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgFileUploadSimpleRsp_ExtEntry_DoNotUse();
void InitDefaultsXmsgFileUploadSimpleRspImpl();
void InitDefaultsXmsgFileUploadSimpleRsp();
void InitDefaultsXmsgFileDownloadSimpleReq_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgFileDownloadSimpleReq_ExtEntry_DoNotUse();
void InitDefaultsXmsgFileDownloadSimpleReqImpl();
void InitDefaultsXmsgFileDownloadSimpleReq();
void InitDefaultsXmsgFileDownloadSimpleRsp_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse();
void InitDefaultsXmsgFileDownloadSimpleRspImpl();
void InitDefaultsXmsgFileDownloadSimpleRsp();
void InitDefaultsXmsgFileUsrFileInfoQueryReqImpl();
void InitDefaultsXmsgFileUsrFileInfoQueryReq();
void InitDefaultsXmsgFileUsrFileInfoQueryRspImpl();
void InitDefaultsXmsgFileUsrFileInfoQueryRsp();
void InitDefaultsXmsgFileUsrFileInfoImpl();
void InitDefaultsXmsgFileUsrFileInfo();
inline void InitDefaults() {
  InitDefaultsXmsgFileUploadSimpleReq_ExtEntry_DoNotUse();
  InitDefaultsXmsgFileUploadSimpleReq();
  InitDefaultsXmsgFileUploadSimpleRsp_ExtEntry_DoNotUse();
  InitDefaultsXmsgFileUploadSimpleRsp();
  InitDefaultsXmsgFileDownloadSimpleReq_ExtEntry_DoNotUse();
  InitDefaultsXmsgFileDownloadSimpleReq();
  InitDefaultsXmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse();
  InitDefaultsXmsgFileDownloadSimpleRsp();
  InitDefaultsXmsgFileUsrFileInfoQueryReq();
  InitDefaultsXmsgFileUsrFileInfoQueryRsp();
  InitDefaultsXmsgFileUsrFileInfo();
}
}  // namespace protobuf_net_2dx_2dmsg_2dfile_2eproto
class XmsgFileDownloadSimpleReq;
class XmsgFileDownloadSimpleReqDefaultTypeInternal;
extern XmsgFileDownloadSimpleReqDefaultTypeInternal _XmsgFileDownloadSimpleReq_default_instance_;
class XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse;
class XmsgFileDownloadSimpleReq_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgFileDownloadSimpleReq_ExtEntry_DoNotUseDefaultTypeInternal _XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse_default_instance_;
class XmsgFileDownloadSimpleRsp;
class XmsgFileDownloadSimpleRspDefaultTypeInternal;
extern XmsgFileDownloadSimpleRspDefaultTypeInternal _XmsgFileDownloadSimpleRsp_default_instance_;
class XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse;
class XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUseDefaultTypeInternal _XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgFileUploadSimpleReq;
class XmsgFileUploadSimpleReqDefaultTypeInternal;
extern XmsgFileUploadSimpleReqDefaultTypeInternal _XmsgFileUploadSimpleReq_default_instance_;
class XmsgFileUploadSimpleReq_ExtEntry_DoNotUse;
class XmsgFileUploadSimpleReq_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgFileUploadSimpleReq_ExtEntry_DoNotUseDefaultTypeInternal _XmsgFileUploadSimpleReq_ExtEntry_DoNotUse_default_instance_;
class XmsgFileUploadSimpleRsp;
class XmsgFileUploadSimpleRspDefaultTypeInternal;
extern XmsgFileUploadSimpleRspDefaultTypeInternal _XmsgFileUploadSimpleRsp_default_instance_;
class XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse;
class XmsgFileUploadSimpleRsp_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgFileUploadSimpleRsp_ExtEntry_DoNotUseDefaultTypeInternal _XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgFileUsrFileInfo;
class XmsgFileUsrFileInfoDefaultTypeInternal;
extern XmsgFileUsrFileInfoDefaultTypeInternal _XmsgFileUsrFileInfo_default_instance_;
class XmsgFileUsrFileInfoQueryReq;
class XmsgFileUsrFileInfoQueryReqDefaultTypeInternal;
extern XmsgFileUsrFileInfoQueryReqDefaultTypeInternal _XmsgFileUsrFileInfoQueryReq_default_instance_;
class XmsgFileUsrFileInfoQueryRsp;
class XmsgFileUsrFileInfoQueryRspDefaultTypeInternal;
extern XmsgFileUsrFileInfoQueryRspDefaultTypeInternal _XmsgFileUsrFileInfoQueryRsp_default_instance_;

// ===================================================================

class XmsgFileUploadSimpleReq_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgFileUploadSimpleReq_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgFileUploadSimpleReq_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgFileUploadSimpleReq_ExtEntry_DoNotUse();
  XmsgFileUploadSimpleReq_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgFileUploadSimpleReq_ExtEntry_DoNotUse& other);
  static const XmsgFileUploadSimpleReq_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgFileUploadSimpleReq_ExtEntry_DoNotUse*>(&_XmsgFileUploadSimpleReq_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgFileUploadSimpleReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgFileUploadSimpleReq) */ {
 public:
  XmsgFileUploadSimpleReq();
  virtual ~XmsgFileUploadSimpleReq();

  XmsgFileUploadSimpleReq(const XmsgFileUploadSimpleReq& from);

  inline XmsgFileUploadSimpleReq& operator=(const XmsgFileUploadSimpleReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgFileUploadSimpleReq(XmsgFileUploadSimpleReq&& from) noexcept
    : XmsgFileUploadSimpleReq() {
    *this = ::std::move(from);
  }

  inline XmsgFileUploadSimpleReq& operator=(XmsgFileUploadSimpleReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgFileUploadSimpleReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgFileUploadSimpleReq* internal_default_instance() {
    return reinterpret_cast<const XmsgFileUploadSimpleReq*>(
               &_XmsgFileUploadSimpleReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(XmsgFileUploadSimpleReq* other);
  friend void swap(XmsgFileUploadSimpleReq& a, XmsgFileUploadSimpleReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgFileUploadSimpleReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgFileUploadSimpleReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgFileUploadSimpleReq& from);
  void MergeFrom(const XmsgFileUploadSimpleReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgFileUploadSimpleReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 3;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // string fileName = 1;
  void clear_filename();
  static const int kFileNameFieldNumber = 1;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // uint64 fileSize = 2;
  void clear_filesize();
  static const int kFileSizeFieldNumber = 2;
  ::google::protobuf::uint64 filesize() const;
  void set_filesize(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgFileUploadSimpleReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgFileUploadSimpleReq_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::uint64 filesize_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dfile_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dfile_2eproto::InitDefaultsXmsgFileUploadSimpleReqImpl();
};
// -------------------------------------------------------------------

class XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse();
  XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse& other);
  static const XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse*>(&_XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgFileUploadSimpleRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgFileUploadSimpleRsp) */ {
 public:
  XmsgFileUploadSimpleRsp();
  virtual ~XmsgFileUploadSimpleRsp();

  XmsgFileUploadSimpleRsp(const XmsgFileUploadSimpleRsp& from);

  inline XmsgFileUploadSimpleRsp& operator=(const XmsgFileUploadSimpleRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgFileUploadSimpleRsp(XmsgFileUploadSimpleRsp&& from) noexcept
    : XmsgFileUploadSimpleRsp() {
    *this = ::std::move(from);
  }

  inline XmsgFileUploadSimpleRsp& operator=(XmsgFileUploadSimpleRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgFileUploadSimpleRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgFileUploadSimpleRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgFileUploadSimpleRsp*>(
               &_XmsgFileUploadSimpleRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(XmsgFileUploadSimpleRsp* other);
  friend void swap(XmsgFileUploadSimpleRsp& a, XmsgFileUploadSimpleRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgFileUploadSimpleRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgFileUploadSimpleRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgFileUploadSimpleRsp& from);
  void MergeFrom(const XmsgFileUploadSimpleRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgFileUploadSimpleRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 3;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // string fid = 1;
  void clear_fid();
  static const int kFidFieldNumber = 1;
  const ::std::string& fid() const;
  void set_fid(const ::std::string& value);
  #if LANG_CXX11
  void set_fid(::std::string&& value);
  #endif
  void set_fid(const char* value);
  void set_fid(const char* value, size_t size);
  ::std::string* mutable_fid();
  ::std::string* release_fid();
  void set_allocated_fid(::std::string* fid);

  // string hashVal = 2;
  void clear_hashval();
  static const int kHashValFieldNumber = 2;
  const ::std::string& hashval() const;
  void set_hashval(const ::std::string& value);
  #if LANG_CXX11
  void set_hashval(::std::string&& value);
  #endif
  void set_hashval(const char* value);
  void set_hashval(const char* value, size_t size);
  ::std::string* mutable_hashval();
  ::std::string* release_hashval();
  void set_allocated_hashval(::std::string* hashval);

  // @@protoc_insertion_point(class_scope:XmsgFileUploadSimpleRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgFileUploadSimpleRsp_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  ::google::protobuf::internal::ArenaStringPtr fid_;
  ::google::protobuf::internal::ArenaStringPtr hashval_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dfile_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dfile_2eproto::InitDefaultsXmsgFileUploadSimpleRspImpl();
};
// -------------------------------------------------------------------

class XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse();
  XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse& other);
  static const XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse*>(&_XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgFileDownloadSimpleReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgFileDownloadSimpleReq) */ {
 public:
  XmsgFileDownloadSimpleReq();
  virtual ~XmsgFileDownloadSimpleReq();

  XmsgFileDownloadSimpleReq(const XmsgFileDownloadSimpleReq& from);

  inline XmsgFileDownloadSimpleReq& operator=(const XmsgFileDownloadSimpleReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgFileDownloadSimpleReq(XmsgFileDownloadSimpleReq&& from) noexcept
    : XmsgFileDownloadSimpleReq() {
    *this = ::std::move(from);
  }

  inline XmsgFileDownloadSimpleReq& operator=(XmsgFileDownloadSimpleReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgFileDownloadSimpleReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgFileDownloadSimpleReq* internal_default_instance() {
    return reinterpret_cast<const XmsgFileDownloadSimpleReq*>(
               &_XmsgFileDownloadSimpleReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(XmsgFileDownloadSimpleReq* other);
  friend void swap(XmsgFileDownloadSimpleReq& a, XmsgFileDownloadSimpleReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgFileDownloadSimpleReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgFileDownloadSimpleReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgFileDownloadSimpleReq& from);
  void MergeFrom(const XmsgFileDownloadSimpleReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgFileDownloadSimpleReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 5;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 5;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // string fid = 1;
  void clear_fid();
  static const int kFidFieldNumber = 1;
  const ::std::string& fid() const;
  void set_fid(const ::std::string& value);
  #if LANG_CXX11
  void set_fid(::std::string&& value);
  #endif
  void set_fid(const char* value);
  void set_fid(const char* value, size_t size);
  ::std::string* mutable_fid();
  ::std::string* release_fid();
  void set_allocated_fid(::std::string* fid);

  // string cgt = 2;
  void clear_cgt();
  static const int kCgtFieldNumber = 2;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // uint64 offset = 3;
  void clear_offset();
  static const int kOffsetFieldNumber = 3;
  ::google::protobuf::uint64 offset() const;
  void set_offset(::google::protobuf::uint64 value);

  // uint64 len = 4;
  void clear_len();
  static const int kLenFieldNumber = 4;
  ::google::protobuf::uint64 len() const;
  void set_len(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgFileDownloadSimpleReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgFileDownloadSimpleReq_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  ::google::protobuf::internal::ArenaStringPtr fid_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  ::google::protobuf::uint64 offset_;
  ::google::protobuf::uint64 len_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dfile_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dfile_2eproto::InitDefaultsXmsgFileDownloadSimpleReqImpl();
};
// -------------------------------------------------------------------

class XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse();
  XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse& other);
  static const XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse*>(&_XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgFileDownloadSimpleRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgFileDownloadSimpleRsp) */ {
 public:
  XmsgFileDownloadSimpleRsp();
  virtual ~XmsgFileDownloadSimpleRsp();

  XmsgFileDownloadSimpleRsp(const XmsgFileDownloadSimpleRsp& from);

  inline XmsgFileDownloadSimpleRsp& operator=(const XmsgFileDownloadSimpleRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgFileDownloadSimpleRsp(XmsgFileDownloadSimpleRsp&& from) noexcept
    : XmsgFileDownloadSimpleRsp() {
    *this = ::std::move(from);
  }

  inline XmsgFileDownloadSimpleRsp& operator=(XmsgFileDownloadSimpleRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgFileDownloadSimpleRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgFileDownloadSimpleRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgFileDownloadSimpleRsp*>(
               &_XmsgFileDownloadSimpleRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(XmsgFileDownloadSimpleRsp* other);
  friend void swap(XmsgFileDownloadSimpleRsp& a, XmsgFileDownloadSimpleRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgFileDownloadSimpleRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgFileDownloadSimpleRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgFileDownloadSimpleRsp& from);
  void MergeFrom(const XmsgFileDownloadSimpleRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgFileDownloadSimpleRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 5;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 5;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // string fileName = 1;
  void clear_filename();
  static const int kFileNameFieldNumber = 1;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // string hashVal = 3;
  void clear_hashval();
  static const int kHashValFieldNumber = 3;
  const ::std::string& hashval() const;
  void set_hashval(const ::std::string& value);
  #if LANG_CXX11
  void set_hashval(::std::string&& value);
  #endif
  void set_hashval(const char* value);
  void set_hashval(const char* value, size_t size);
  ::std::string* mutable_hashval();
  ::std::string* release_hashval();
  void set_allocated_hashval(::std::string* hashval);

  // uint64 fileSize = 2;
  void clear_filesize();
  static const int kFileSizeFieldNumber = 2;
  ::google::protobuf::uint64 filesize() const;
  void set_filesize(::google::protobuf::uint64 value);

  // uint64 gts = 4;
  void clear_gts();
  static const int kGtsFieldNumber = 4;
  ::google::protobuf::uint64 gts() const;
  void set_gts(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgFileDownloadSimpleRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgFileDownloadSimpleRsp_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::internal::ArenaStringPtr hashval_;
  ::google::protobuf::uint64 filesize_;
  ::google::protobuf::uint64 gts_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dfile_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dfile_2eproto::InitDefaultsXmsgFileDownloadSimpleRspImpl();
};
// -------------------------------------------------------------------

class XmsgFileUsrFileInfoQueryReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgFileUsrFileInfoQueryReq) */ {
 public:
  XmsgFileUsrFileInfoQueryReq();
  virtual ~XmsgFileUsrFileInfoQueryReq();

  XmsgFileUsrFileInfoQueryReq(const XmsgFileUsrFileInfoQueryReq& from);

  inline XmsgFileUsrFileInfoQueryReq& operator=(const XmsgFileUsrFileInfoQueryReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgFileUsrFileInfoQueryReq(XmsgFileUsrFileInfoQueryReq&& from) noexcept
    : XmsgFileUsrFileInfoQueryReq() {
    *this = ::std::move(from);
  }

  inline XmsgFileUsrFileInfoQueryReq& operator=(XmsgFileUsrFileInfoQueryReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgFileUsrFileInfoQueryReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgFileUsrFileInfoQueryReq* internal_default_instance() {
    return reinterpret_cast<const XmsgFileUsrFileInfoQueryReq*>(
               &_XmsgFileUsrFileInfoQueryReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(XmsgFileUsrFileInfoQueryReq* other);
  friend void swap(XmsgFileUsrFileInfoQueryReq& a, XmsgFileUsrFileInfoQueryReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgFileUsrFileInfoQueryReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgFileUsrFileInfoQueryReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgFileUsrFileInfoQueryReq& from);
  void MergeFrom(const XmsgFileUsrFileInfoQueryReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgFileUsrFileInfoQueryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 sts = 1;
  void clear_sts();
  static const int kStsFieldNumber = 1;
  ::google::protobuf::uint64 sts() const;
  void set_sts(::google::protobuf::uint64 value);

  // uint64 ets = 2;
  void clear_ets();
  static const int kEtsFieldNumber = 2;
  ::google::protobuf::uint64 ets() const;
  void set_ets(::google::protobuf::uint64 value);

  // uint32 page = 3;
  void clear_page();
  static const int kPageFieldNumber = 3;
  ::google::protobuf::uint32 page() const;
  void set_page(::google::protobuf::uint32 value);

  // uint32 pageSize = 4;
  void clear_pagesize();
  static const int kPageSizeFieldNumber = 4;
  ::google::protobuf::uint32 pagesize() const;
  void set_pagesize(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:XmsgFileUsrFileInfoQueryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 sts_;
  ::google::protobuf::uint64 ets_;
  ::google::protobuf::uint32 page_;
  ::google::protobuf::uint32 pagesize_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dfile_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dfile_2eproto::InitDefaultsXmsgFileUsrFileInfoQueryReqImpl();
};
// -------------------------------------------------------------------

class XmsgFileUsrFileInfoQueryRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgFileUsrFileInfoQueryRsp) */ {
 public:
  XmsgFileUsrFileInfoQueryRsp();
  virtual ~XmsgFileUsrFileInfoQueryRsp();

  XmsgFileUsrFileInfoQueryRsp(const XmsgFileUsrFileInfoQueryRsp& from);

  inline XmsgFileUsrFileInfoQueryRsp& operator=(const XmsgFileUsrFileInfoQueryRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgFileUsrFileInfoQueryRsp(XmsgFileUsrFileInfoQueryRsp&& from) noexcept
    : XmsgFileUsrFileInfoQueryRsp() {
    *this = ::std::move(from);
  }

  inline XmsgFileUsrFileInfoQueryRsp& operator=(XmsgFileUsrFileInfoQueryRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgFileUsrFileInfoQueryRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgFileUsrFileInfoQueryRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgFileUsrFileInfoQueryRsp*>(
               &_XmsgFileUsrFileInfoQueryRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(XmsgFileUsrFileInfoQueryRsp* other);
  friend void swap(XmsgFileUsrFileInfoQueryRsp& a, XmsgFileUsrFileInfoQueryRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgFileUsrFileInfoQueryRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgFileUsrFileInfoQueryRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgFileUsrFileInfoQueryRsp& from);
  void MergeFrom(const XmsgFileUsrFileInfoQueryRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgFileUsrFileInfoQueryRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .XmsgFileUsrFileInfo fileInfo = 1;
  int fileinfo_size() const;
  void clear_fileinfo();
  static const int kFileInfoFieldNumber = 1;
  const ::XmsgFileUsrFileInfo& fileinfo(int index) const;
  ::XmsgFileUsrFileInfo* mutable_fileinfo(int index);
  ::XmsgFileUsrFileInfo* add_fileinfo();
  ::google::protobuf::RepeatedPtrField< ::XmsgFileUsrFileInfo >*
      mutable_fileinfo();
  const ::google::protobuf::RepeatedPtrField< ::XmsgFileUsrFileInfo >&
      fileinfo() const;

  // @@protoc_insertion_point(class_scope:XmsgFileUsrFileInfoQueryRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::XmsgFileUsrFileInfo > fileinfo_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dfile_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dfile_2eproto::InitDefaultsXmsgFileUsrFileInfoQueryRspImpl();
};
// -------------------------------------------------------------------

class XmsgFileUsrFileInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgFileUsrFileInfo) */ {
 public:
  XmsgFileUsrFileInfo();
  virtual ~XmsgFileUsrFileInfo();

  XmsgFileUsrFileInfo(const XmsgFileUsrFileInfo& from);

  inline XmsgFileUsrFileInfo& operator=(const XmsgFileUsrFileInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgFileUsrFileInfo(XmsgFileUsrFileInfo&& from) noexcept
    : XmsgFileUsrFileInfo() {
    *this = ::std::move(from);
  }

  inline XmsgFileUsrFileInfo& operator=(XmsgFileUsrFileInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgFileUsrFileInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgFileUsrFileInfo* internal_default_instance() {
    return reinterpret_cast<const XmsgFileUsrFileInfo*>(
               &_XmsgFileUsrFileInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(XmsgFileUsrFileInfo* other);
  friend void swap(XmsgFileUsrFileInfo& a, XmsgFileUsrFileInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgFileUsrFileInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgFileUsrFileInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgFileUsrFileInfo& from);
  void MergeFrom(const XmsgFileUsrFileInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgFileUsrFileInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string fid = 1;
  void clear_fid();
  static const int kFidFieldNumber = 1;
  const ::std::string& fid() const;
  void set_fid(const ::std::string& value);
  #if LANG_CXX11
  void set_fid(::std::string&& value);
  #endif
  void set_fid(const char* value);
  void set_fid(const char* value, size_t size);
  ::std::string* mutable_fid();
  ::std::string* release_fid();
  void set_allocated_fid(::std::string* fid);

  // string fileName = 2;
  void clear_filename();
  static const int kFileNameFieldNumber = 2;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // string hashVal = 4;
  void clear_hashval();
  static const int kHashValFieldNumber = 4;
  const ::std::string& hashval() const;
  void set_hashval(const ::std::string& value);
  #if LANG_CXX11
  void set_hashval(::std::string&& value);
  #endif
  void set_hashval(const char* value);
  void set_hashval(const char* value, size_t size);
  ::std::string* mutable_hashval();
  ::std::string* release_hashval();
  void set_allocated_hashval(::std::string* hashval);

  // uint64 fileSize = 3;
  void clear_filesize();
  static const int kFileSizeFieldNumber = 3;
  ::google::protobuf::uint64 filesize() const;
  void set_filesize(::google::protobuf::uint64 value);

  // uint64 gts = 5;
  void clear_gts();
  static const int kGtsFieldNumber = 5;
  ::google::protobuf::uint64 gts() const;
  void set_gts(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgFileUsrFileInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr fid_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::internal::ArenaStringPtr hashval_;
  ::google::protobuf::uint64 filesize_;
  ::google::protobuf::uint64 gts_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dfile_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dfile_2eproto::InitDefaultsXmsgFileUsrFileInfoImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// XmsgFileUploadSimpleReq

// string fileName = 1;
inline void XmsgFileUploadSimpleReq::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgFileUploadSimpleReq::filename() const {
  // @@protoc_insertion_point(field_get:XmsgFileUploadSimpleReq.fileName)
  return filename_.GetNoArena();
}
inline void XmsgFileUploadSimpleReq::set_filename(const ::std::string& value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgFileUploadSimpleReq.fileName)
}
#if LANG_CXX11
inline void XmsgFileUploadSimpleReq::set_filename(::std::string&& value) {
  
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgFileUploadSimpleReq.fileName)
}
#endif
inline void XmsgFileUploadSimpleReq::set_filename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgFileUploadSimpleReq.fileName)
}
inline void XmsgFileUploadSimpleReq::set_filename(const char* value, size_t size) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgFileUploadSimpleReq.fileName)
}
inline ::std::string* XmsgFileUploadSimpleReq::mutable_filename() {
  
  // @@protoc_insertion_point(field_mutable:XmsgFileUploadSimpleReq.fileName)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgFileUploadSimpleReq::release_filename() {
  // @@protoc_insertion_point(field_release:XmsgFileUploadSimpleReq.fileName)
  
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgFileUploadSimpleReq::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    
  } else {
    
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:XmsgFileUploadSimpleReq.fileName)
}

// uint64 fileSize = 2;
inline void XmsgFileUploadSimpleReq::clear_filesize() {
  filesize_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgFileUploadSimpleReq::filesize() const {
  // @@protoc_insertion_point(field_get:XmsgFileUploadSimpleReq.fileSize)
  return filesize_;
}
inline void XmsgFileUploadSimpleReq::set_filesize(::google::protobuf::uint64 value) {
  
  filesize_ = value;
  // @@protoc_insertion_point(field_set:XmsgFileUploadSimpleReq.fileSize)
}

// map<string, string> ext = 3;
inline int XmsgFileUploadSimpleReq::ext_size() const {
  return ext_.size();
}
inline void XmsgFileUploadSimpleReq::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgFileUploadSimpleReq::ext() const {
  // @@protoc_insertion_point(field_map:XmsgFileUploadSimpleReq.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgFileUploadSimpleReq::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgFileUploadSimpleReq.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgFileUploadSimpleRsp

// string fid = 1;
inline void XmsgFileUploadSimpleRsp::clear_fid() {
  fid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgFileUploadSimpleRsp::fid() const {
  // @@protoc_insertion_point(field_get:XmsgFileUploadSimpleRsp.fid)
  return fid_.GetNoArena();
}
inline void XmsgFileUploadSimpleRsp::set_fid(const ::std::string& value) {
  
  fid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgFileUploadSimpleRsp.fid)
}
#if LANG_CXX11
inline void XmsgFileUploadSimpleRsp::set_fid(::std::string&& value) {
  
  fid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgFileUploadSimpleRsp.fid)
}
#endif
inline void XmsgFileUploadSimpleRsp::set_fid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  fid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgFileUploadSimpleRsp.fid)
}
inline void XmsgFileUploadSimpleRsp::set_fid(const char* value, size_t size) {
  
  fid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgFileUploadSimpleRsp.fid)
}
inline ::std::string* XmsgFileUploadSimpleRsp::mutable_fid() {
  
  // @@protoc_insertion_point(field_mutable:XmsgFileUploadSimpleRsp.fid)
  return fid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgFileUploadSimpleRsp::release_fid() {
  // @@protoc_insertion_point(field_release:XmsgFileUploadSimpleRsp.fid)
  
  return fid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgFileUploadSimpleRsp::set_allocated_fid(::std::string* fid) {
  if (fid != NULL) {
    
  } else {
    
  }
  fid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fid);
  // @@protoc_insertion_point(field_set_allocated:XmsgFileUploadSimpleRsp.fid)
}

// string hashVal = 2;
inline void XmsgFileUploadSimpleRsp::clear_hashval() {
  hashval_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgFileUploadSimpleRsp::hashval() const {
  // @@protoc_insertion_point(field_get:XmsgFileUploadSimpleRsp.hashVal)
  return hashval_.GetNoArena();
}
inline void XmsgFileUploadSimpleRsp::set_hashval(const ::std::string& value) {
  
  hashval_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgFileUploadSimpleRsp.hashVal)
}
#if LANG_CXX11
inline void XmsgFileUploadSimpleRsp::set_hashval(::std::string&& value) {
  
  hashval_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgFileUploadSimpleRsp.hashVal)
}
#endif
inline void XmsgFileUploadSimpleRsp::set_hashval(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hashval_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgFileUploadSimpleRsp.hashVal)
}
inline void XmsgFileUploadSimpleRsp::set_hashval(const char* value, size_t size) {
  
  hashval_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgFileUploadSimpleRsp.hashVal)
}
inline ::std::string* XmsgFileUploadSimpleRsp::mutable_hashval() {
  
  // @@protoc_insertion_point(field_mutable:XmsgFileUploadSimpleRsp.hashVal)
  return hashval_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgFileUploadSimpleRsp::release_hashval() {
  // @@protoc_insertion_point(field_release:XmsgFileUploadSimpleRsp.hashVal)
  
  return hashval_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgFileUploadSimpleRsp::set_allocated_hashval(::std::string* hashval) {
  if (hashval != NULL) {
    
  } else {
    
  }
  hashval_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hashval);
  // @@protoc_insertion_point(field_set_allocated:XmsgFileUploadSimpleRsp.hashVal)
}

// map<string, string> ext = 3;
inline int XmsgFileUploadSimpleRsp::ext_size() const {
  return ext_.size();
}
inline void XmsgFileUploadSimpleRsp::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgFileUploadSimpleRsp::ext() const {
  // @@protoc_insertion_point(field_map:XmsgFileUploadSimpleRsp.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgFileUploadSimpleRsp::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgFileUploadSimpleRsp.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgFileDownloadSimpleReq

// string fid = 1;
inline void XmsgFileDownloadSimpleReq::clear_fid() {
  fid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgFileDownloadSimpleReq::fid() const {
  // @@protoc_insertion_point(field_get:XmsgFileDownloadSimpleReq.fid)
  return fid_.GetNoArena();
}
inline void XmsgFileDownloadSimpleReq::set_fid(const ::std::string& value) {
  
  fid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgFileDownloadSimpleReq.fid)
}
#if LANG_CXX11
inline void XmsgFileDownloadSimpleReq::set_fid(::std::string&& value) {
  
  fid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgFileDownloadSimpleReq.fid)
}
#endif
inline void XmsgFileDownloadSimpleReq::set_fid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  fid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgFileDownloadSimpleReq.fid)
}
inline void XmsgFileDownloadSimpleReq::set_fid(const char* value, size_t size) {
  
  fid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgFileDownloadSimpleReq.fid)
}
inline ::std::string* XmsgFileDownloadSimpleReq::mutable_fid() {
  
  // @@protoc_insertion_point(field_mutable:XmsgFileDownloadSimpleReq.fid)
  return fid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgFileDownloadSimpleReq::release_fid() {
  // @@protoc_insertion_point(field_release:XmsgFileDownloadSimpleReq.fid)
  
  return fid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgFileDownloadSimpleReq::set_allocated_fid(::std::string* fid) {
  if (fid != NULL) {
    
  } else {
    
  }
  fid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fid);
  // @@protoc_insertion_point(field_set_allocated:XmsgFileDownloadSimpleReq.fid)
}

// string cgt = 2;
inline void XmsgFileDownloadSimpleReq::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgFileDownloadSimpleReq::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgFileDownloadSimpleReq.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgFileDownloadSimpleReq::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgFileDownloadSimpleReq.cgt)
}
#if LANG_CXX11
inline void XmsgFileDownloadSimpleReq::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgFileDownloadSimpleReq.cgt)
}
#endif
inline void XmsgFileDownloadSimpleReq::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgFileDownloadSimpleReq.cgt)
}
inline void XmsgFileDownloadSimpleReq::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgFileDownloadSimpleReq.cgt)
}
inline ::std::string* XmsgFileDownloadSimpleReq::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgFileDownloadSimpleReq.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgFileDownloadSimpleReq::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgFileDownloadSimpleReq.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgFileDownloadSimpleReq::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgFileDownloadSimpleReq.cgt)
}

// uint64 offset = 3;
inline void XmsgFileDownloadSimpleReq::clear_offset() {
  offset_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgFileDownloadSimpleReq::offset() const {
  // @@protoc_insertion_point(field_get:XmsgFileDownloadSimpleReq.offset)
  return offset_;
}
inline void XmsgFileDownloadSimpleReq::set_offset(::google::protobuf::uint64 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:XmsgFileDownloadSimpleReq.offset)
}

// uint64 len = 4;
inline void XmsgFileDownloadSimpleReq::clear_len() {
  len_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgFileDownloadSimpleReq::len() const {
  // @@protoc_insertion_point(field_get:XmsgFileDownloadSimpleReq.len)
  return len_;
}
inline void XmsgFileDownloadSimpleReq::set_len(::google::protobuf::uint64 value) {
  
  len_ = value;
  // @@protoc_insertion_point(field_set:XmsgFileDownloadSimpleReq.len)
}

// map<string, string> ext = 5;
inline int XmsgFileDownloadSimpleReq::ext_size() const {
  return ext_.size();
}
inline void XmsgFileDownloadSimpleReq::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgFileDownloadSimpleReq::ext() const {
  // @@protoc_insertion_point(field_map:XmsgFileDownloadSimpleReq.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgFileDownloadSimpleReq::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgFileDownloadSimpleReq.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgFileDownloadSimpleRsp

// string fileName = 1;
inline void XmsgFileDownloadSimpleRsp::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgFileDownloadSimpleRsp::filename() const {
  // @@protoc_insertion_point(field_get:XmsgFileDownloadSimpleRsp.fileName)
  return filename_.GetNoArena();
}
inline void XmsgFileDownloadSimpleRsp::set_filename(const ::std::string& value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgFileDownloadSimpleRsp.fileName)
}
#if LANG_CXX11
inline void XmsgFileDownloadSimpleRsp::set_filename(::std::string&& value) {
  
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgFileDownloadSimpleRsp.fileName)
}
#endif
inline void XmsgFileDownloadSimpleRsp::set_filename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgFileDownloadSimpleRsp.fileName)
}
inline void XmsgFileDownloadSimpleRsp::set_filename(const char* value, size_t size) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgFileDownloadSimpleRsp.fileName)
}
inline ::std::string* XmsgFileDownloadSimpleRsp::mutable_filename() {
  
  // @@protoc_insertion_point(field_mutable:XmsgFileDownloadSimpleRsp.fileName)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgFileDownloadSimpleRsp::release_filename() {
  // @@protoc_insertion_point(field_release:XmsgFileDownloadSimpleRsp.fileName)
  
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgFileDownloadSimpleRsp::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    
  } else {
    
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:XmsgFileDownloadSimpleRsp.fileName)
}

// uint64 fileSize = 2;
inline void XmsgFileDownloadSimpleRsp::clear_filesize() {
  filesize_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgFileDownloadSimpleRsp::filesize() const {
  // @@protoc_insertion_point(field_get:XmsgFileDownloadSimpleRsp.fileSize)
  return filesize_;
}
inline void XmsgFileDownloadSimpleRsp::set_filesize(::google::protobuf::uint64 value) {
  
  filesize_ = value;
  // @@protoc_insertion_point(field_set:XmsgFileDownloadSimpleRsp.fileSize)
}

// string hashVal = 3;
inline void XmsgFileDownloadSimpleRsp::clear_hashval() {
  hashval_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgFileDownloadSimpleRsp::hashval() const {
  // @@protoc_insertion_point(field_get:XmsgFileDownloadSimpleRsp.hashVal)
  return hashval_.GetNoArena();
}
inline void XmsgFileDownloadSimpleRsp::set_hashval(const ::std::string& value) {
  
  hashval_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgFileDownloadSimpleRsp.hashVal)
}
#if LANG_CXX11
inline void XmsgFileDownloadSimpleRsp::set_hashval(::std::string&& value) {
  
  hashval_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgFileDownloadSimpleRsp.hashVal)
}
#endif
inline void XmsgFileDownloadSimpleRsp::set_hashval(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hashval_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgFileDownloadSimpleRsp.hashVal)
}
inline void XmsgFileDownloadSimpleRsp::set_hashval(const char* value, size_t size) {
  
  hashval_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgFileDownloadSimpleRsp.hashVal)
}
inline ::std::string* XmsgFileDownloadSimpleRsp::mutable_hashval() {
  
  // @@protoc_insertion_point(field_mutable:XmsgFileDownloadSimpleRsp.hashVal)
  return hashval_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgFileDownloadSimpleRsp::release_hashval() {
  // @@protoc_insertion_point(field_release:XmsgFileDownloadSimpleRsp.hashVal)
  
  return hashval_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgFileDownloadSimpleRsp::set_allocated_hashval(::std::string* hashval) {
  if (hashval != NULL) {
    
  } else {
    
  }
  hashval_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hashval);
  // @@protoc_insertion_point(field_set_allocated:XmsgFileDownloadSimpleRsp.hashVal)
}

// uint64 gts = 4;
inline void XmsgFileDownloadSimpleRsp::clear_gts() {
  gts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgFileDownloadSimpleRsp::gts() const {
  // @@protoc_insertion_point(field_get:XmsgFileDownloadSimpleRsp.gts)
  return gts_;
}
inline void XmsgFileDownloadSimpleRsp::set_gts(::google::protobuf::uint64 value) {
  
  gts_ = value;
  // @@protoc_insertion_point(field_set:XmsgFileDownloadSimpleRsp.gts)
}

// map<string, string> ext = 5;
inline int XmsgFileDownloadSimpleRsp::ext_size() const {
  return ext_.size();
}
inline void XmsgFileDownloadSimpleRsp::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgFileDownloadSimpleRsp::ext() const {
  // @@protoc_insertion_point(field_map:XmsgFileDownloadSimpleRsp.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgFileDownloadSimpleRsp::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgFileDownloadSimpleRsp.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// XmsgFileUsrFileInfoQueryReq

// uint64 sts = 1;
inline void XmsgFileUsrFileInfoQueryReq::clear_sts() {
  sts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgFileUsrFileInfoQueryReq::sts() const {
  // @@protoc_insertion_point(field_get:XmsgFileUsrFileInfoQueryReq.sts)
  return sts_;
}
inline void XmsgFileUsrFileInfoQueryReq::set_sts(::google::protobuf::uint64 value) {
  
  sts_ = value;
  // @@protoc_insertion_point(field_set:XmsgFileUsrFileInfoQueryReq.sts)
}

// uint64 ets = 2;
inline void XmsgFileUsrFileInfoQueryReq::clear_ets() {
  ets_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgFileUsrFileInfoQueryReq::ets() const {
  // @@protoc_insertion_point(field_get:XmsgFileUsrFileInfoQueryReq.ets)
  return ets_;
}
inline void XmsgFileUsrFileInfoQueryReq::set_ets(::google::protobuf::uint64 value) {
  
  ets_ = value;
  // @@protoc_insertion_point(field_set:XmsgFileUsrFileInfoQueryReq.ets)
}

// uint32 page = 3;
inline void XmsgFileUsrFileInfoQueryReq::clear_page() {
  page_ = 0u;
}
inline ::google::protobuf::uint32 XmsgFileUsrFileInfoQueryReq::page() const {
  // @@protoc_insertion_point(field_get:XmsgFileUsrFileInfoQueryReq.page)
  return page_;
}
inline void XmsgFileUsrFileInfoQueryReq::set_page(::google::protobuf::uint32 value) {
  
  page_ = value;
  // @@protoc_insertion_point(field_set:XmsgFileUsrFileInfoQueryReq.page)
}

// uint32 pageSize = 4;
inline void XmsgFileUsrFileInfoQueryReq::clear_pagesize() {
  pagesize_ = 0u;
}
inline ::google::protobuf::uint32 XmsgFileUsrFileInfoQueryReq::pagesize() const {
  // @@protoc_insertion_point(field_get:XmsgFileUsrFileInfoQueryReq.pageSize)
  return pagesize_;
}
inline void XmsgFileUsrFileInfoQueryReq::set_pagesize(::google::protobuf::uint32 value) {
  
  pagesize_ = value;
  // @@protoc_insertion_point(field_set:XmsgFileUsrFileInfoQueryReq.pageSize)
}

// -------------------------------------------------------------------

// XmsgFileUsrFileInfoQueryRsp

// repeated .XmsgFileUsrFileInfo fileInfo = 1;
inline int XmsgFileUsrFileInfoQueryRsp::fileinfo_size() const {
  return fileinfo_.size();
}
inline void XmsgFileUsrFileInfoQueryRsp::clear_fileinfo() {
  fileinfo_.Clear();
}
inline const ::XmsgFileUsrFileInfo& XmsgFileUsrFileInfoQueryRsp::fileinfo(int index) const {
  // @@protoc_insertion_point(field_get:XmsgFileUsrFileInfoQueryRsp.fileInfo)
  return fileinfo_.Get(index);
}
inline ::XmsgFileUsrFileInfo* XmsgFileUsrFileInfoQueryRsp::mutable_fileinfo(int index) {
  // @@protoc_insertion_point(field_mutable:XmsgFileUsrFileInfoQueryRsp.fileInfo)
  return fileinfo_.Mutable(index);
}
inline ::XmsgFileUsrFileInfo* XmsgFileUsrFileInfoQueryRsp::add_fileinfo() {
  // @@protoc_insertion_point(field_add:XmsgFileUsrFileInfoQueryRsp.fileInfo)
  return fileinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::XmsgFileUsrFileInfo >*
XmsgFileUsrFileInfoQueryRsp::mutable_fileinfo() {
  // @@protoc_insertion_point(field_mutable_list:XmsgFileUsrFileInfoQueryRsp.fileInfo)
  return &fileinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::XmsgFileUsrFileInfo >&
XmsgFileUsrFileInfoQueryRsp::fileinfo() const {
  // @@protoc_insertion_point(field_list:XmsgFileUsrFileInfoQueryRsp.fileInfo)
  return fileinfo_;
}

// -------------------------------------------------------------------

// XmsgFileUsrFileInfo

// string fid = 1;
inline void XmsgFileUsrFileInfo::clear_fid() {
  fid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgFileUsrFileInfo::fid() const {
  // @@protoc_insertion_point(field_get:XmsgFileUsrFileInfo.fid)
  return fid_.GetNoArena();
}
inline void XmsgFileUsrFileInfo::set_fid(const ::std::string& value) {
  
  fid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgFileUsrFileInfo.fid)
}
#if LANG_CXX11
inline void XmsgFileUsrFileInfo::set_fid(::std::string&& value) {
  
  fid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgFileUsrFileInfo.fid)
}
#endif
inline void XmsgFileUsrFileInfo::set_fid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  fid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgFileUsrFileInfo.fid)
}
inline void XmsgFileUsrFileInfo::set_fid(const char* value, size_t size) {
  
  fid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgFileUsrFileInfo.fid)
}
inline ::std::string* XmsgFileUsrFileInfo::mutable_fid() {
  
  // @@protoc_insertion_point(field_mutable:XmsgFileUsrFileInfo.fid)
  return fid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgFileUsrFileInfo::release_fid() {
  // @@protoc_insertion_point(field_release:XmsgFileUsrFileInfo.fid)
  
  return fid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgFileUsrFileInfo::set_allocated_fid(::std::string* fid) {
  if (fid != NULL) {
    
  } else {
    
  }
  fid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fid);
  // @@protoc_insertion_point(field_set_allocated:XmsgFileUsrFileInfo.fid)
}

// string fileName = 2;
inline void XmsgFileUsrFileInfo::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgFileUsrFileInfo::filename() const {
  // @@protoc_insertion_point(field_get:XmsgFileUsrFileInfo.fileName)
  return filename_.GetNoArena();
}
inline void XmsgFileUsrFileInfo::set_filename(const ::std::string& value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgFileUsrFileInfo.fileName)
}
#if LANG_CXX11
inline void XmsgFileUsrFileInfo::set_filename(::std::string&& value) {
  
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgFileUsrFileInfo.fileName)
}
#endif
inline void XmsgFileUsrFileInfo::set_filename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgFileUsrFileInfo.fileName)
}
inline void XmsgFileUsrFileInfo::set_filename(const char* value, size_t size) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgFileUsrFileInfo.fileName)
}
inline ::std::string* XmsgFileUsrFileInfo::mutable_filename() {
  
  // @@protoc_insertion_point(field_mutable:XmsgFileUsrFileInfo.fileName)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgFileUsrFileInfo::release_filename() {
  // @@protoc_insertion_point(field_release:XmsgFileUsrFileInfo.fileName)
  
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgFileUsrFileInfo::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    
  } else {
    
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:XmsgFileUsrFileInfo.fileName)
}

// uint64 fileSize = 3;
inline void XmsgFileUsrFileInfo::clear_filesize() {
  filesize_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgFileUsrFileInfo::filesize() const {
  // @@protoc_insertion_point(field_get:XmsgFileUsrFileInfo.fileSize)
  return filesize_;
}
inline void XmsgFileUsrFileInfo::set_filesize(::google::protobuf::uint64 value) {
  
  filesize_ = value;
  // @@protoc_insertion_point(field_set:XmsgFileUsrFileInfo.fileSize)
}

// string hashVal = 4;
inline void XmsgFileUsrFileInfo::clear_hashval() {
  hashval_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgFileUsrFileInfo::hashval() const {
  // @@protoc_insertion_point(field_get:XmsgFileUsrFileInfo.hashVal)
  return hashval_.GetNoArena();
}
inline void XmsgFileUsrFileInfo::set_hashval(const ::std::string& value) {
  
  hashval_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgFileUsrFileInfo.hashVal)
}
#if LANG_CXX11
inline void XmsgFileUsrFileInfo::set_hashval(::std::string&& value) {
  
  hashval_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgFileUsrFileInfo.hashVal)
}
#endif
inline void XmsgFileUsrFileInfo::set_hashval(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hashval_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgFileUsrFileInfo.hashVal)
}
inline void XmsgFileUsrFileInfo::set_hashval(const char* value, size_t size) {
  
  hashval_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgFileUsrFileInfo.hashVal)
}
inline ::std::string* XmsgFileUsrFileInfo::mutable_hashval() {
  
  // @@protoc_insertion_point(field_mutable:XmsgFileUsrFileInfo.hashVal)
  return hashval_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgFileUsrFileInfo::release_hashval() {
  // @@protoc_insertion_point(field_release:XmsgFileUsrFileInfo.hashVal)
  
  return hashval_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgFileUsrFileInfo::set_allocated_hashval(::std::string* hashval) {
  if (hashval != NULL) {
    
  } else {
    
  }
  hashval_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hashval);
  // @@protoc_insertion_point(field_set_allocated:XmsgFileUsrFileInfo.hashVal)
}

// uint64 gts = 5;
inline void XmsgFileUsrFileInfo::clear_gts() {
  gts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgFileUsrFileInfo::gts() const {
  // @@protoc_insertion_point(field_get:XmsgFileUsrFileInfo.gts)
  return gts_;
}
inline void XmsgFileUsrFileInfo::set_gts(::google::protobuf::uint64 value) {
  
  gts_ = value;
  // @@protoc_insertion_point(field_set:XmsgFileUsrFileInfo.gts)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2dx_2dmsg_2dfile_2eproto__INCLUDED
