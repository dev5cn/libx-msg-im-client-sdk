// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net-x-msg-channel-status.proto

#ifndef PROTOBUF_net_2dx_2dmsg_2dchannel_2dstatus_2eproto__INCLUDED
#define PROTOBUF_net_2dx_2dmsg_2dchannel_2dstatus_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[16];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsXmsgChannelStatusQueryReqImpl();
void InitDefaultsXmsgChannelStatusQueryReq();
void InitDefaultsXmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUseImpl();
void InitDefaultsXmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse();
void InitDefaultsXmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUseImpl();
void InitDefaultsXmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse();
void InitDefaultsXmsgChannelStatusQueryRspImpl();
void InitDefaultsXmsgChannelStatusQueryRsp();
void InitDefaultsXmsgChannelStatusSubReqImpl();
void InitDefaultsXmsgChannelStatusSubReq();
void InitDefaultsXmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUseImpl();
void InitDefaultsXmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse();
void InitDefaultsXmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUseImpl();
void InitDefaultsXmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse();
void InitDefaultsXmsgChannelStatusSubRspImpl();
void InitDefaultsXmsgChannelStatusSubRsp();
void InitDefaultsXmsgChannelStatusUnSubReqImpl();
void InitDefaultsXmsgChannelStatusUnSubReq();
void InitDefaultsXmsgChannelStatusUnSubRsp_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse();
void InitDefaultsXmsgChannelStatusUnSubRspImpl();
void InitDefaultsXmsgChannelStatusUnSubRsp();
void InitDefaultsXmsgChannelStatusPubUsrStatusNoticeImpl();
void InitDefaultsXmsgChannelStatusPubUsrStatusNotice();
void InitDefaultsXmsgChannelStatusPubGroupStatusNoticeImpl();
void InitDefaultsXmsgChannelStatusPubGroupStatusNotice();
void InitDefaultsXmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatusImpl();
void InitDefaultsXmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus();
void InitDefaultsXmsgChannelStatusUsrStatusImpl();
void InitDefaultsXmsgChannelStatusUsrStatus();
void InitDefaultsXmsgChannelStatusGroupStatusImpl();
void InitDefaultsXmsgChannelStatusGroupStatus();
inline void InitDefaults() {
  InitDefaultsXmsgChannelStatusQueryReq();
  InitDefaultsXmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse();
  InitDefaultsXmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse();
  InitDefaultsXmsgChannelStatusQueryRsp();
  InitDefaultsXmsgChannelStatusSubReq();
  InitDefaultsXmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse();
  InitDefaultsXmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse();
  InitDefaultsXmsgChannelStatusSubRsp();
  InitDefaultsXmsgChannelStatusUnSubReq();
  InitDefaultsXmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse();
  InitDefaultsXmsgChannelStatusUnSubRsp();
  InitDefaultsXmsgChannelStatusPubUsrStatusNotice();
  InitDefaultsXmsgChannelStatusPubGroupStatusNotice();
  InitDefaultsXmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus();
  InitDefaultsXmsgChannelStatusUsrStatus();
  InitDefaultsXmsgChannelStatusGroupStatus();
}
}  // namespace protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto
class XmsgChannelStatusGroupStatus;
class XmsgChannelStatusGroupStatusDefaultTypeInternal;
extern XmsgChannelStatusGroupStatusDefaultTypeInternal _XmsgChannelStatusGroupStatus_default_instance_;
class XmsgChannelStatusPubGroupStatusNotice;
class XmsgChannelStatusPubGroupStatusNoticeDefaultTypeInternal;
extern XmsgChannelStatusPubGroupStatusNoticeDefaultTypeInternal _XmsgChannelStatusPubGroupStatusNotice_default_instance_;
class XmsgChannelStatusPubUsrStatusNotice;
class XmsgChannelStatusPubUsrStatusNoticeDefaultTypeInternal;
extern XmsgChannelStatusPubUsrStatusNoticeDefaultTypeInternal _XmsgChannelStatusPubUsrStatusNotice_default_instance_;
class XmsgChannelStatusQueryReq;
class XmsgChannelStatusQueryReqDefaultTypeInternal;
extern XmsgChannelStatusQueryReqDefaultTypeInternal _XmsgChannelStatusQueryReq_default_instance_;
class XmsgChannelStatusQueryRsp;
class XmsgChannelStatusQueryRspDefaultTypeInternal;
extern XmsgChannelStatusQueryRspDefaultTypeInternal _XmsgChannelStatusQueryRsp_default_instance_;
class XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse;
class XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUseDefaultTypeInternal;
extern XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUseDefaultTypeInternal _XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse_default_instance_;
class XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse;
class XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUseDefaultTypeInternal;
extern XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUseDefaultTypeInternal _XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse_default_instance_;
class XmsgChannelStatusSubReq;
class XmsgChannelStatusSubReqDefaultTypeInternal;
extern XmsgChannelStatusSubReqDefaultTypeInternal _XmsgChannelStatusSubReq_default_instance_;
class XmsgChannelStatusSubRsp;
class XmsgChannelStatusSubRspDefaultTypeInternal;
extern XmsgChannelStatusSubRspDefaultTypeInternal _XmsgChannelStatusSubRsp_default_instance_;
class XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse;
class XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUseDefaultTypeInternal;
extern XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUseDefaultTypeInternal _XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse_default_instance_;
class XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse;
class XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUseDefaultTypeInternal;
extern XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUseDefaultTypeInternal _XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse_default_instance_;
class XmsgChannelStatusUnSubReq;
class XmsgChannelStatusUnSubReqDefaultTypeInternal;
extern XmsgChannelStatusUnSubReqDefaultTypeInternal _XmsgChannelStatusUnSubReq_default_instance_;
class XmsgChannelStatusUnSubRsp;
class XmsgChannelStatusUnSubRspDefaultTypeInternal;
extern XmsgChannelStatusUnSubRspDefaultTypeInternal _XmsgChannelStatusUnSubRsp_default_instance_;
class XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse;
class XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUseDefaultTypeInternal _XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgChannelStatusUsrStatus;
class XmsgChannelStatusUsrStatusDefaultTypeInternal;
extern XmsgChannelStatusUsrStatusDefaultTypeInternal _XmsgChannelStatusUsrStatus_default_instance_;
class XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus;
class XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatusDefaultTypeInternal;
extern XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatusDefaultTypeInternal _XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus_default_instance_;

// ===================================================================

class XmsgChannelStatusQueryReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgChannelStatusQueryReq) */ {
 public:
  XmsgChannelStatusQueryReq();
  virtual ~XmsgChannelStatusQueryReq();

  XmsgChannelStatusQueryReq(const XmsgChannelStatusQueryReq& from);

  inline XmsgChannelStatusQueryReq& operator=(const XmsgChannelStatusQueryReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgChannelStatusQueryReq(XmsgChannelStatusQueryReq&& from) noexcept
    : XmsgChannelStatusQueryReq() {
    *this = ::std::move(from);
  }

  inline XmsgChannelStatusQueryReq& operator=(XmsgChannelStatusQueryReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgChannelStatusQueryReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgChannelStatusQueryReq* internal_default_instance() {
    return reinterpret_cast<const XmsgChannelStatusQueryReq*>(
               &_XmsgChannelStatusQueryReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(XmsgChannelStatusQueryReq* other);
  friend void swap(XmsgChannelStatusQueryReq& a, XmsgChannelStatusQueryReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgChannelStatusQueryReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgChannelStatusQueryReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgChannelStatusQueryReq& from);
  void MergeFrom(const XmsgChannelStatusQueryReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgChannelStatusQueryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string cgt = 1;
  int cgt_size() const;
  void clear_cgt();
  static const int kCgtFieldNumber = 1;
  const ::std::string& cgt(int index) const;
  ::std::string* mutable_cgt(int index);
  void set_cgt(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(int index, ::std::string&& value);
  #endif
  void set_cgt(int index, const char* value);
  void set_cgt(int index, const char* value, size_t size);
  ::std::string* add_cgt();
  void add_cgt(const ::std::string& value);
  #if LANG_CXX11
  void add_cgt(::std::string&& value);
  #endif
  void add_cgt(const char* value);
  void add_cgt(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& cgt() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_cgt();

  // @@protoc_insertion_point(class_scope:XmsgChannelStatusQueryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> cgt_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusQueryReqImpl();
};
// -------------------------------------------------------------------

class XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse, 
    ::std::string, ::XmsgChannelStatusUsrStatus,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse, 
    ::std::string, ::XmsgChannelStatusUsrStatus,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse();
  XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse& other);
  static const XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse*>(&_XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse, 
    ::std::string, ::XmsgChannelStatusGroupStatus,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse, 
    ::std::string, ::XmsgChannelStatusGroupStatus,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse();
  XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse& other);
  static const XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse*>(&_XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgChannelStatusQueryRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgChannelStatusQueryRsp) */ {
 public:
  XmsgChannelStatusQueryRsp();
  virtual ~XmsgChannelStatusQueryRsp();

  XmsgChannelStatusQueryRsp(const XmsgChannelStatusQueryRsp& from);

  inline XmsgChannelStatusQueryRsp& operator=(const XmsgChannelStatusQueryRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgChannelStatusQueryRsp(XmsgChannelStatusQueryRsp&& from) noexcept
    : XmsgChannelStatusQueryRsp() {
    *this = ::std::move(from);
  }

  inline XmsgChannelStatusQueryRsp& operator=(XmsgChannelStatusQueryRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgChannelStatusQueryRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgChannelStatusQueryRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgChannelStatusQueryRsp*>(
               &_XmsgChannelStatusQueryRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(XmsgChannelStatusQueryRsp* other);
  friend void swap(XmsgChannelStatusQueryRsp& a, XmsgChannelStatusQueryRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgChannelStatusQueryRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgChannelStatusQueryRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgChannelStatusQueryRsp& from);
  void MergeFrom(const XmsgChannelStatusQueryRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgChannelStatusQueryRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .XmsgChannelStatusUsrStatus> usrStatus = 1;
  int usrstatus_size() const;
  void clear_usrstatus();
  static const int kUsrStatusFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusUsrStatus >&
      usrstatus() const;
  ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusUsrStatus >*
      mutable_usrstatus();

  // map<string, .XmsgChannelStatusGroupStatus> groupStatus = 2;
  int groupstatus_size() const;
  void clear_groupstatus();
  static const int kGroupStatusFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusGroupStatus >&
      groupstatus() const;
  ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusGroupStatus >*
      mutable_groupstatus();

  // @@protoc_insertion_point(class_scope:XmsgChannelStatusQueryRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgChannelStatusQueryRsp_UsrStatusEntry_DoNotUse,
      ::std::string, ::XmsgChannelStatusUsrStatus,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > usrstatus_;
  ::google::protobuf::internal::MapField<
      XmsgChannelStatusQueryRsp_GroupStatusEntry_DoNotUse,
      ::std::string, ::XmsgChannelStatusGroupStatus,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > groupstatus_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusQueryRspImpl();
};
// -------------------------------------------------------------------

class XmsgChannelStatusSubReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgChannelStatusSubReq) */ {
 public:
  XmsgChannelStatusSubReq();
  virtual ~XmsgChannelStatusSubReq();

  XmsgChannelStatusSubReq(const XmsgChannelStatusSubReq& from);

  inline XmsgChannelStatusSubReq& operator=(const XmsgChannelStatusSubReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgChannelStatusSubReq(XmsgChannelStatusSubReq&& from) noexcept
    : XmsgChannelStatusSubReq() {
    *this = ::std::move(from);
  }

  inline XmsgChannelStatusSubReq& operator=(XmsgChannelStatusSubReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgChannelStatusSubReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgChannelStatusSubReq* internal_default_instance() {
    return reinterpret_cast<const XmsgChannelStatusSubReq*>(
               &_XmsgChannelStatusSubReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(XmsgChannelStatusSubReq* other);
  friend void swap(XmsgChannelStatusSubReq& a, XmsgChannelStatusSubReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgChannelStatusSubReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgChannelStatusSubReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgChannelStatusSubReq& from);
  void MergeFrom(const XmsgChannelStatusSubReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgChannelStatusSubReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string cgt = 1;
  int cgt_size() const;
  void clear_cgt();
  static const int kCgtFieldNumber = 1;
  const ::std::string& cgt(int index) const;
  ::std::string* mutable_cgt(int index);
  void set_cgt(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(int index, ::std::string&& value);
  #endif
  void set_cgt(int index, const char* value);
  void set_cgt(int index, const char* value, size_t size);
  ::std::string* add_cgt();
  void add_cgt(const ::std::string& value);
  #if LANG_CXX11
  void add_cgt(::std::string&& value);
  #endif
  void add_cgt(const char* value);
  void add_cgt(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& cgt() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_cgt();

  // @@protoc_insertion_point(class_scope:XmsgChannelStatusSubReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> cgt_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusSubReqImpl();
};
// -------------------------------------------------------------------

class XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse, 
    ::std::string, ::XmsgChannelStatusUsrStatus,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse, 
    ::std::string, ::XmsgChannelStatusUsrStatus,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse();
  XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse& other);
  static const XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse*>(&_XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse, 
    ::std::string, ::XmsgChannelStatusGroupStatus,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse, 
    ::std::string, ::XmsgChannelStatusGroupStatus,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse();
  XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse& other);
  static const XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse*>(&_XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgChannelStatusSubRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgChannelStatusSubRsp) */ {
 public:
  XmsgChannelStatusSubRsp();
  virtual ~XmsgChannelStatusSubRsp();

  XmsgChannelStatusSubRsp(const XmsgChannelStatusSubRsp& from);

  inline XmsgChannelStatusSubRsp& operator=(const XmsgChannelStatusSubRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgChannelStatusSubRsp(XmsgChannelStatusSubRsp&& from) noexcept
    : XmsgChannelStatusSubRsp() {
    *this = ::std::move(from);
  }

  inline XmsgChannelStatusSubRsp& operator=(XmsgChannelStatusSubRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgChannelStatusSubRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgChannelStatusSubRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgChannelStatusSubRsp*>(
               &_XmsgChannelStatusSubRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(XmsgChannelStatusSubRsp* other);
  friend void swap(XmsgChannelStatusSubRsp& a, XmsgChannelStatusSubRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgChannelStatusSubRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgChannelStatusSubRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgChannelStatusSubRsp& from);
  void MergeFrom(const XmsgChannelStatusSubRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgChannelStatusSubRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .XmsgChannelStatusUsrStatus> usrStatus = 1;
  int usrstatus_size() const;
  void clear_usrstatus();
  static const int kUsrStatusFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusUsrStatus >&
      usrstatus() const;
  ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusUsrStatus >*
      mutable_usrstatus();

  // map<string, .XmsgChannelStatusGroupStatus> groupStatus = 2;
  int groupstatus_size() const;
  void clear_groupstatus();
  static const int kGroupStatusFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusGroupStatus >&
      groupstatus() const;
  ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusGroupStatus >*
      mutable_groupstatus();

  // @@protoc_insertion_point(class_scope:XmsgChannelStatusSubRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgChannelStatusSubRsp_UsrStatusEntry_DoNotUse,
      ::std::string, ::XmsgChannelStatusUsrStatus,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > usrstatus_;
  ::google::protobuf::internal::MapField<
      XmsgChannelStatusSubRsp_GroupStatusEntry_DoNotUse,
      ::std::string, ::XmsgChannelStatusGroupStatus,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > groupstatus_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusSubRspImpl();
};
// -------------------------------------------------------------------

class XmsgChannelStatusUnSubReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgChannelStatusUnSubReq) */ {
 public:
  XmsgChannelStatusUnSubReq();
  virtual ~XmsgChannelStatusUnSubReq();

  XmsgChannelStatusUnSubReq(const XmsgChannelStatusUnSubReq& from);

  inline XmsgChannelStatusUnSubReq& operator=(const XmsgChannelStatusUnSubReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgChannelStatusUnSubReq(XmsgChannelStatusUnSubReq&& from) noexcept
    : XmsgChannelStatusUnSubReq() {
    *this = ::std::move(from);
  }

  inline XmsgChannelStatusUnSubReq& operator=(XmsgChannelStatusUnSubReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgChannelStatusUnSubReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgChannelStatusUnSubReq* internal_default_instance() {
    return reinterpret_cast<const XmsgChannelStatusUnSubReq*>(
               &_XmsgChannelStatusUnSubReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(XmsgChannelStatusUnSubReq* other);
  friend void swap(XmsgChannelStatusUnSubReq& a, XmsgChannelStatusUnSubReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgChannelStatusUnSubReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgChannelStatusUnSubReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgChannelStatusUnSubReq& from);
  void MergeFrom(const XmsgChannelStatusUnSubReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgChannelStatusUnSubReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string cgt = 1;
  int cgt_size() const;
  void clear_cgt();
  static const int kCgtFieldNumber = 1;
  const ::std::string& cgt(int index) const;
  ::std::string* mutable_cgt(int index);
  void set_cgt(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(int index, ::std::string&& value);
  #endif
  void set_cgt(int index, const char* value);
  void set_cgt(int index, const char* value, size_t size);
  ::std::string* add_cgt();
  void add_cgt(const ::std::string& value);
  #if LANG_CXX11
  void add_cgt(::std::string&& value);
  #endif
  void add_cgt(const char* value);
  void add_cgt(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& cgt() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_cgt();

  // @@protoc_insertion_point(class_scope:XmsgChannelStatusUnSubReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> cgt_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusUnSubReqImpl();
};
// -------------------------------------------------------------------

class XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse();
  XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse& other);
  static const XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse*>(&_XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgChannelStatusUnSubRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgChannelStatusUnSubRsp) */ {
 public:
  XmsgChannelStatusUnSubRsp();
  virtual ~XmsgChannelStatusUnSubRsp();

  XmsgChannelStatusUnSubRsp(const XmsgChannelStatusUnSubRsp& from);

  inline XmsgChannelStatusUnSubRsp& operator=(const XmsgChannelStatusUnSubRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgChannelStatusUnSubRsp(XmsgChannelStatusUnSubRsp&& from) noexcept
    : XmsgChannelStatusUnSubRsp() {
    *this = ::std::move(from);
  }

  inline XmsgChannelStatusUnSubRsp& operator=(XmsgChannelStatusUnSubRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgChannelStatusUnSubRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgChannelStatusUnSubRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgChannelStatusUnSubRsp*>(
               &_XmsgChannelStatusUnSubRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(XmsgChannelStatusUnSubRsp* other);
  friend void swap(XmsgChannelStatusUnSubRsp& a, XmsgChannelStatusUnSubRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgChannelStatusUnSubRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgChannelStatusUnSubRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgChannelStatusUnSubRsp& from);
  void MergeFrom(const XmsgChannelStatusUnSubRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgChannelStatusUnSubRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 1;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // @@protoc_insertion_point(class_scope:XmsgChannelStatusUnSubRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgChannelStatusUnSubRsp_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusUnSubRspImpl();
};
// -------------------------------------------------------------------

class XmsgChannelStatusPubUsrStatusNotice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgChannelStatusPubUsrStatusNotice) */ {
 public:
  XmsgChannelStatusPubUsrStatusNotice();
  virtual ~XmsgChannelStatusPubUsrStatusNotice();

  XmsgChannelStatusPubUsrStatusNotice(const XmsgChannelStatusPubUsrStatusNotice& from);

  inline XmsgChannelStatusPubUsrStatusNotice& operator=(const XmsgChannelStatusPubUsrStatusNotice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgChannelStatusPubUsrStatusNotice(XmsgChannelStatusPubUsrStatusNotice&& from) noexcept
    : XmsgChannelStatusPubUsrStatusNotice() {
    *this = ::std::move(from);
  }

  inline XmsgChannelStatusPubUsrStatusNotice& operator=(XmsgChannelStatusPubUsrStatusNotice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgChannelStatusPubUsrStatusNotice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgChannelStatusPubUsrStatusNotice* internal_default_instance() {
    return reinterpret_cast<const XmsgChannelStatusPubUsrStatusNotice*>(
               &_XmsgChannelStatusPubUsrStatusNotice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(XmsgChannelStatusPubUsrStatusNotice* other);
  friend void swap(XmsgChannelStatusPubUsrStatusNotice& a, XmsgChannelStatusPubUsrStatusNotice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgChannelStatusPubUsrStatusNotice* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgChannelStatusPubUsrStatusNotice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgChannelStatusPubUsrStatusNotice& from);
  void MergeFrom(const XmsgChannelStatusPubUsrStatusNotice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgChannelStatusPubUsrStatusNotice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cgt = 1;
  void clear_cgt();
  static const int kCgtFieldNumber = 1;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // string plat = 2;
  void clear_plat();
  static const int kPlatFieldNumber = 2;
  const ::std::string& plat() const;
  void set_plat(const ::std::string& value);
  #if LANG_CXX11
  void set_plat(::std::string&& value);
  #endif
  void set_plat(const char* value);
  void set_plat(const char* value, size_t size);
  ::std::string* mutable_plat();
  ::std::string* release_plat();
  void set_allocated_plat(::std::string* plat);

  // string did = 3;
  void clear_did();
  static const int kDidFieldNumber = 3;
  const ::std::string& did() const;
  void set_did(const ::std::string& value);
  #if LANG_CXX11
  void set_did(::std::string&& value);
  #endif
  void set_did(const char* value);
  void set_did(const char* value, size_t size);
  ::std::string* mutable_did();
  ::std::string* release_did();
  void set_allocated_did(::std::string* did);

  // string status = 4;
  void clear_status();
  static const int kStatusFieldNumber = 4;
  const ::std::string& status() const;
  void set_status(const ::std::string& value);
  #if LANG_CXX11
  void set_status(::std::string&& value);
  #endif
  void set_status(const char* value);
  void set_status(const char* value, size_t size);
  ::std::string* mutable_status();
  ::std::string* release_status();
  void set_allocated_status(::std::string* status);

  // @@protoc_insertion_point(class_scope:XmsgChannelStatusPubUsrStatusNotice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  ::google::protobuf::internal::ArenaStringPtr plat_;
  ::google::protobuf::internal::ArenaStringPtr did_;
  ::google::protobuf::internal::ArenaStringPtr status_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusPubUsrStatusNoticeImpl();
};
// -------------------------------------------------------------------

class XmsgChannelStatusPubGroupStatusNotice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgChannelStatusPubGroupStatusNotice) */ {
 public:
  XmsgChannelStatusPubGroupStatusNotice();
  virtual ~XmsgChannelStatusPubGroupStatusNotice();

  XmsgChannelStatusPubGroupStatusNotice(const XmsgChannelStatusPubGroupStatusNotice& from);

  inline XmsgChannelStatusPubGroupStatusNotice& operator=(const XmsgChannelStatusPubGroupStatusNotice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgChannelStatusPubGroupStatusNotice(XmsgChannelStatusPubGroupStatusNotice&& from) noexcept
    : XmsgChannelStatusPubGroupStatusNotice() {
    *this = ::std::move(from);
  }

  inline XmsgChannelStatusPubGroupStatusNotice& operator=(XmsgChannelStatusPubGroupStatusNotice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgChannelStatusPubGroupStatusNotice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgChannelStatusPubGroupStatusNotice* internal_default_instance() {
    return reinterpret_cast<const XmsgChannelStatusPubGroupStatusNotice*>(
               &_XmsgChannelStatusPubGroupStatusNotice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(XmsgChannelStatusPubGroupStatusNotice* other);
  friend void swap(XmsgChannelStatusPubGroupStatusNotice& a, XmsgChannelStatusPubGroupStatusNotice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgChannelStatusPubGroupStatusNotice* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgChannelStatusPubGroupStatusNotice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgChannelStatusPubGroupStatusNotice& from);
  void MergeFrom(const XmsgChannelStatusPubGroupStatusNotice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgChannelStatusPubGroupStatusNotice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cgt = 1;
  void clear_cgt();
  static const int kCgtFieldNumber = 1;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // string status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  const ::std::string& status() const;
  void set_status(const ::std::string& value);
  #if LANG_CXX11
  void set_status(::std::string&& value);
  #endif
  void set_status(const char* value);
  void set_status(const char* value, size_t size);
  ::std::string* mutable_status();
  ::std::string* release_status();
  void set_allocated_status(::std::string* status);

  // @@protoc_insertion_point(class_scope:XmsgChannelStatusPubGroupStatusNotice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  ::google::protobuf::internal::ArenaStringPtr status_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusPubGroupStatusNoticeImpl();
};
// -------------------------------------------------------------------

class XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus) */ {
 public:
  XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus();
  virtual ~XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus();

  XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus(const XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus& from);

  inline XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus& operator=(const XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus(XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus&& from) noexcept
    : XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus() {
    *this = ::std::move(from);
  }

  inline XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus& operator=(XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus* internal_default_instance() {
    return reinterpret_cast<const XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus*>(
               &_XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus* other);
  friend void swap(XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus& a, XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus& from);
  void MergeFrom(const XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string plat = 1;
  void clear_plat();
  static const int kPlatFieldNumber = 1;
  const ::std::string& plat() const;
  void set_plat(const ::std::string& value);
  #if LANG_CXX11
  void set_plat(::std::string&& value);
  #endif
  void set_plat(const char* value);
  void set_plat(const char* value, size_t size);
  ::std::string* mutable_plat();
  ::std::string* release_plat();
  void set_allocated_plat(::std::string* plat);

  // string did = 2;
  void clear_did();
  static const int kDidFieldNumber = 2;
  const ::std::string& did() const;
  void set_did(const ::std::string& value);
  #if LANG_CXX11
  void set_did(::std::string&& value);
  #endif
  void set_did(const char* value);
  void set_did(const char* value, size_t size);
  ::std::string* mutable_did();
  ::std::string* release_did();
  void set_allocated_did(::std::string* did);

  // string status = 3;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  const ::std::string& status() const;
  void set_status(const ::std::string& value);
  #if LANG_CXX11
  void set_status(::std::string&& value);
  #endif
  void set_status(const char* value);
  void set_status(const char* value, size_t size);
  ::std::string* mutable_status();
  ::std::string* release_status();
  void set_allocated_status(::std::string* status);

  // @@protoc_insertion_point(class_scope:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr plat_;
  ::google::protobuf::internal::ArenaStringPtr did_;
  ::google::protobuf::internal::ArenaStringPtr status_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatusImpl();
};
// -------------------------------------------------------------------

class XmsgChannelStatusUsrStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgChannelStatusUsrStatus) */ {
 public:
  XmsgChannelStatusUsrStatus();
  virtual ~XmsgChannelStatusUsrStatus();

  XmsgChannelStatusUsrStatus(const XmsgChannelStatusUsrStatus& from);

  inline XmsgChannelStatusUsrStatus& operator=(const XmsgChannelStatusUsrStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgChannelStatusUsrStatus(XmsgChannelStatusUsrStatus&& from) noexcept
    : XmsgChannelStatusUsrStatus() {
    *this = ::std::move(from);
  }

  inline XmsgChannelStatusUsrStatus& operator=(XmsgChannelStatusUsrStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgChannelStatusUsrStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgChannelStatusUsrStatus* internal_default_instance() {
    return reinterpret_cast<const XmsgChannelStatusUsrStatus*>(
               &_XmsgChannelStatusUsrStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(XmsgChannelStatusUsrStatus* other);
  friend void swap(XmsgChannelStatusUsrStatus& a, XmsgChannelStatusUsrStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgChannelStatusUsrStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgChannelStatusUsrStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgChannelStatusUsrStatus& from);
  void MergeFrom(const XmsgChannelStatusUsrStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgChannelStatusUsrStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus XmsgChannelStatusUsrClientStatus;

  // accessors -------------------------------------------------------

  // repeated .XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus client = 2;
  int client_size() const;
  void clear_client();
  static const int kClientFieldNumber = 2;
  const ::XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus& client(int index) const;
  ::XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus* mutable_client(int index);
  ::XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus* add_client();
  ::google::protobuf::RepeatedPtrField< ::XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus >*
      mutable_client();
  const ::google::protobuf::RepeatedPtrField< ::XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus >&
      client() const;

  // @@protoc_insertion_point(class_scope:XmsgChannelStatusUsrStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus > client_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusUsrStatusImpl();
};
// -------------------------------------------------------------------

class XmsgChannelStatusGroupStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgChannelStatusGroupStatus) */ {
 public:
  XmsgChannelStatusGroupStatus();
  virtual ~XmsgChannelStatusGroupStatus();

  XmsgChannelStatusGroupStatus(const XmsgChannelStatusGroupStatus& from);

  inline XmsgChannelStatusGroupStatus& operator=(const XmsgChannelStatusGroupStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgChannelStatusGroupStatus(XmsgChannelStatusGroupStatus&& from) noexcept
    : XmsgChannelStatusGroupStatus() {
    *this = ::std::move(from);
  }

  inline XmsgChannelStatusGroupStatus& operator=(XmsgChannelStatusGroupStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgChannelStatusGroupStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgChannelStatusGroupStatus* internal_default_instance() {
    return reinterpret_cast<const XmsgChannelStatusGroupStatus*>(
               &_XmsgChannelStatusGroupStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(XmsgChannelStatusGroupStatus* other);
  friend void swap(XmsgChannelStatusGroupStatus& a, XmsgChannelStatusGroupStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgChannelStatusGroupStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgChannelStatusGroupStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgChannelStatusGroupStatus& from);
  void MergeFrom(const XmsgChannelStatusGroupStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgChannelStatusGroupStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  const ::std::string& status() const;
  void set_status(const ::std::string& value);
  #if LANG_CXX11
  void set_status(::std::string&& value);
  #endif
  void set_status(const char* value);
  void set_status(const char* value, size_t size);
  ::std::string* mutable_status();
  ::std::string* release_status();
  void set_allocated_status(::std::string* status);

  // @@protoc_insertion_point(class_scope:XmsgChannelStatusGroupStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr status_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgChannelStatusGroupStatusImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// XmsgChannelStatusQueryReq

// repeated string cgt = 1;
inline int XmsgChannelStatusQueryReq::cgt_size() const {
  return cgt_.size();
}
inline void XmsgChannelStatusQueryReq::clear_cgt() {
  cgt_.Clear();
}
inline const ::std::string& XmsgChannelStatusQueryReq::cgt(int index) const {
  // @@protoc_insertion_point(field_get:XmsgChannelStatusQueryReq.cgt)
  return cgt_.Get(index);
}
inline ::std::string* XmsgChannelStatusQueryReq::mutable_cgt(int index) {
  // @@protoc_insertion_point(field_mutable:XmsgChannelStatusQueryReq.cgt)
  return cgt_.Mutable(index);
}
inline void XmsgChannelStatusQueryReq::set_cgt(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:XmsgChannelStatusQueryReq.cgt)
  cgt_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void XmsgChannelStatusQueryReq::set_cgt(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:XmsgChannelStatusQueryReq.cgt)
  cgt_.Mutable(index)->assign(std::move(value));
}
#endif
inline void XmsgChannelStatusQueryReq::set_cgt(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  cgt_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:XmsgChannelStatusQueryReq.cgt)
}
inline void XmsgChannelStatusQueryReq::set_cgt(int index, const char* value, size_t size) {
  cgt_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:XmsgChannelStatusQueryReq.cgt)
}
inline ::std::string* XmsgChannelStatusQueryReq::add_cgt() {
  // @@protoc_insertion_point(field_add_mutable:XmsgChannelStatusQueryReq.cgt)
  return cgt_.Add();
}
inline void XmsgChannelStatusQueryReq::add_cgt(const ::std::string& value) {
  cgt_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:XmsgChannelStatusQueryReq.cgt)
}
#if LANG_CXX11
inline void XmsgChannelStatusQueryReq::add_cgt(::std::string&& value) {
  cgt_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:XmsgChannelStatusQueryReq.cgt)
}
#endif
inline void XmsgChannelStatusQueryReq::add_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  cgt_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:XmsgChannelStatusQueryReq.cgt)
}
inline void XmsgChannelStatusQueryReq::add_cgt(const char* value, size_t size) {
  cgt_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:XmsgChannelStatusQueryReq.cgt)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
XmsgChannelStatusQueryReq::cgt() const {
  // @@protoc_insertion_point(field_list:XmsgChannelStatusQueryReq.cgt)
  return cgt_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
XmsgChannelStatusQueryReq::mutable_cgt() {
  // @@protoc_insertion_point(field_mutable_list:XmsgChannelStatusQueryReq.cgt)
  return &cgt_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgChannelStatusQueryRsp

// map<string, .XmsgChannelStatusUsrStatus> usrStatus = 1;
inline int XmsgChannelStatusQueryRsp::usrstatus_size() const {
  return usrstatus_.size();
}
inline void XmsgChannelStatusQueryRsp::clear_usrstatus() {
  usrstatus_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusUsrStatus >&
XmsgChannelStatusQueryRsp::usrstatus() const {
  // @@protoc_insertion_point(field_map:XmsgChannelStatusQueryRsp.usrStatus)
  return usrstatus_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusUsrStatus >*
XmsgChannelStatusQueryRsp::mutable_usrstatus() {
  // @@protoc_insertion_point(field_mutable_map:XmsgChannelStatusQueryRsp.usrStatus)
  return usrstatus_.MutableMap();
}

// map<string, .XmsgChannelStatusGroupStatus> groupStatus = 2;
inline int XmsgChannelStatusQueryRsp::groupstatus_size() const {
  return groupstatus_.size();
}
inline void XmsgChannelStatusQueryRsp::clear_groupstatus() {
  groupstatus_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusGroupStatus >&
XmsgChannelStatusQueryRsp::groupstatus() const {
  // @@protoc_insertion_point(field_map:XmsgChannelStatusQueryRsp.groupStatus)
  return groupstatus_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusGroupStatus >*
XmsgChannelStatusQueryRsp::mutable_groupstatus() {
  // @@protoc_insertion_point(field_mutable_map:XmsgChannelStatusQueryRsp.groupStatus)
  return groupstatus_.MutableMap();
}

// -------------------------------------------------------------------

// XmsgChannelStatusSubReq

// repeated string cgt = 1;
inline int XmsgChannelStatusSubReq::cgt_size() const {
  return cgt_.size();
}
inline void XmsgChannelStatusSubReq::clear_cgt() {
  cgt_.Clear();
}
inline const ::std::string& XmsgChannelStatusSubReq::cgt(int index) const {
  // @@protoc_insertion_point(field_get:XmsgChannelStatusSubReq.cgt)
  return cgt_.Get(index);
}
inline ::std::string* XmsgChannelStatusSubReq::mutable_cgt(int index) {
  // @@protoc_insertion_point(field_mutable:XmsgChannelStatusSubReq.cgt)
  return cgt_.Mutable(index);
}
inline void XmsgChannelStatusSubReq::set_cgt(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:XmsgChannelStatusSubReq.cgt)
  cgt_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void XmsgChannelStatusSubReq::set_cgt(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:XmsgChannelStatusSubReq.cgt)
  cgt_.Mutable(index)->assign(std::move(value));
}
#endif
inline void XmsgChannelStatusSubReq::set_cgt(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  cgt_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:XmsgChannelStatusSubReq.cgt)
}
inline void XmsgChannelStatusSubReq::set_cgt(int index, const char* value, size_t size) {
  cgt_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:XmsgChannelStatusSubReq.cgt)
}
inline ::std::string* XmsgChannelStatusSubReq::add_cgt() {
  // @@protoc_insertion_point(field_add_mutable:XmsgChannelStatusSubReq.cgt)
  return cgt_.Add();
}
inline void XmsgChannelStatusSubReq::add_cgt(const ::std::string& value) {
  cgt_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:XmsgChannelStatusSubReq.cgt)
}
#if LANG_CXX11
inline void XmsgChannelStatusSubReq::add_cgt(::std::string&& value) {
  cgt_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:XmsgChannelStatusSubReq.cgt)
}
#endif
inline void XmsgChannelStatusSubReq::add_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  cgt_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:XmsgChannelStatusSubReq.cgt)
}
inline void XmsgChannelStatusSubReq::add_cgt(const char* value, size_t size) {
  cgt_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:XmsgChannelStatusSubReq.cgt)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
XmsgChannelStatusSubReq::cgt() const {
  // @@protoc_insertion_point(field_list:XmsgChannelStatusSubReq.cgt)
  return cgt_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
XmsgChannelStatusSubReq::mutable_cgt() {
  // @@protoc_insertion_point(field_mutable_list:XmsgChannelStatusSubReq.cgt)
  return &cgt_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgChannelStatusSubRsp

// map<string, .XmsgChannelStatusUsrStatus> usrStatus = 1;
inline int XmsgChannelStatusSubRsp::usrstatus_size() const {
  return usrstatus_.size();
}
inline void XmsgChannelStatusSubRsp::clear_usrstatus() {
  usrstatus_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusUsrStatus >&
XmsgChannelStatusSubRsp::usrstatus() const {
  // @@protoc_insertion_point(field_map:XmsgChannelStatusSubRsp.usrStatus)
  return usrstatus_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusUsrStatus >*
XmsgChannelStatusSubRsp::mutable_usrstatus() {
  // @@protoc_insertion_point(field_mutable_map:XmsgChannelStatusSubRsp.usrStatus)
  return usrstatus_.MutableMap();
}

// map<string, .XmsgChannelStatusGroupStatus> groupStatus = 2;
inline int XmsgChannelStatusSubRsp::groupstatus_size() const {
  return groupstatus_.size();
}
inline void XmsgChannelStatusSubRsp::clear_groupstatus() {
  groupstatus_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusGroupStatus >&
XmsgChannelStatusSubRsp::groupstatus() const {
  // @@protoc_insertion_point(field_map:XmsgChannelStatusSubRsp.groupStatus)
  return groupstatus_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::XmsgChannelStatusGroupStatus >*
XmsgChannelStatusSubRsp::mutable_groupstatus() {
  // @@protoc_insertion_point(field_mutable_map:XmsgChannelStatusSubRsp.groupStatus)
  return groupstatus_.MutableMap();
}

// -------------------------------------------------------------------

// XmsgChannelStatusUnSubReq

// repeated string cgt = 1;
inline int XmsgChannelStatusUnSubReq::cgt_size() const {
  return cgt_.size();
}
inline void XmsgChannelStatusUnSubReq::clear_cgt() {
  cgt_.Clear();
}
inline const ::std::string& XmsgChannelStatusUnSubReq::cgt(int index) const {
  // @@protoc_insertion_point(field_get:XmsgChannelStatusUnSubReq.cgt)
  return cgt_.Get(index);
}
inline ::std::string* XmsgChannelStatusUnSubReq::mutable_cgt(int index) {
  // @@protoc_insertion_point(field_mutable:XmsgChannelStatusUnSubReq.cgt)
  return cgt_.Mutable(index);
}
inline void XmsgChannelStatusUnSubReq::set_cgt(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:XmsgChannelStatusUnSubReq.cgt)
  cgt_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void XmsgChannelStatusUnSubReq::set_cgt(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:XmsgChannelStatusUnSubReq.cgt)
  cgt_.Mutable(index)->assign(std::move(value));
}
#endif
inline void XmsgChannelStatusUnSubReq::set_cgt(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  cgt_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:XmsgChannelStatusUnSubReq.cgt)
}
inline void XmsgChannelStatusUnSubReq::set_cgt(int index, const char* value, size_t size) {
  cgt_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:XmsgChannelStatusUnSubReq.cgt)
}
inline ::std::string* XmsgChannelStatusUnSubReq::add_cgt() {
  // @@protoc_insertion_point(field_add_mutable:XmsgChannelStatusUnSubReq.cgt)
  return cgt_.Add();
}
inline void XmsgChannelStatusUnSubReq::add_cgt(const ::std::string& value) {
  cgt_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:XmsgChannelStatusUnSubReq.cgt)
}
#if LANG_CXX11
inline void XmsgChannelStatusUnSubReq::add_cgt(::std::string&& value) {
  cgt_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:XmsgChannelStatusUnSubReq.cgt)
}
#endif
inline void XmsgChannelStatusUnSubReq::add_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  cgt_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:XmsgChannelStatusUnSubReq.cgt)
}
inline void XmsgChannelStatusUnSubReq::add_cgt(const char* value, size_t size) {
  cgt_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:XmsgChannelStatusUnSubReq.cgt)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
XmsgChannelStatusUnSubReq::cgt() const {
  // @@protoc_insertion_point(field_list:XmsgChannelStatusUnSubReq.cgt)
  return cgt_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
XmsgChannelStatusUnSubReq::mutable_cgt() {
  // @@protoc_insertion_point(field_mutable_list:XmsgChannelStatusUnSubReq.cgt)
  return &cgt_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgChannelStatusUnSubRsp

// map<string, string> ext = 1;
inline int XmsgChannelStatusUnSubRsp::ext_size() const {
  return ext_.size();
}
inline void XmsgChannelStatusUnSubRsp::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgChannelStatusUnSubRsp::ext() const {
  // @@protoc_insertion_point(field_map:XmsgChannelStatusUnSubRsp.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgChannelStatusUnSubRsp::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgChannelStatusUnSubRsp.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// XmsgChannelStatusPubUsrStatusNotice

// string cgt = 1;
inline void XmsgChannelStatusPubUsrStatusNotice::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgChannelStatusPubUsrStatusNotice::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgChannelStatusPubUsrStatusNotice.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgChannelStatusPubUsrStatusNotice::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgChannelStatusPubUsrStatusNotice.cgt)
}
#if LANG_CXX11
inline void XmsgChannelStatusPubUsrStatusNotice::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgChannelStatusPubUsrStatusNotice.cgt)
}
#endif
inline void XmsgChannelStatusPubUsrStatusNotice::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgChannelStatusPubUsrStatusNotice.cgt)
}
inline void XmsgChannelStatusPubUsrStatusNotice::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgChannelStatusPubUsrStatusNotice.cgt)
}
inline ::std::string* XmsgChannelStatusPubUsrStatusNotice::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgChannelStatusPubUsrStatusNotice.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgChannelStatusPubUsrStatusNotice::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgChannelStatusPubUsrStatusNotice.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgChannelStatusPubUsrStatusNotice::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgChannelStatusPubUsrStatusNotice.cgt)
}

// string plat = 2;
inline void XmsgChannelStatusPubUsrStatusNotice::clear_plat() {
  plat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgChannelStatusPubUsrStatusNotice::plat() const {
  // @@protoc_insertion_point(field_get:XmsgChannelStatusPubUsrStatusNotice.plat)
  return plat_.GetNoArena();
}
inline void XmsgChannelStatusPubUsrStatusNotice::set_plat(const ::std::string& value) {
  
  plat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgChannelStatusPubUsrStatusNotice.plat)
}
#if LANG_CXX11
inline void XmsgChannelStatusPubUsrStatusNotice::set_plat(::std::string&& value) {
  
  plat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgChannelStatusPubUsrStatusNotice.plat)
}
#endif
inline void XmsgChannelStatusPubUsrStatusNotice::set_plat(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  plat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgChannelStatusPubUsrStatusNotice.plat)
}
inline void XmsgChannelStatusPubUsrStatusNotice::set_plat(const char* value, size_t size) {
  
  plat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgChannelStatusPubUsrStatusNotice.plat)
}
inline ::std::string* XmsgChannelStatusPubUsrStatusNotice::mutable_plat() {
  
  // @@protoc_insertion_point(field_mutable:XmsgChannelStatusPubUsrStatusNotice.plat)
  return plat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgChannelStatusPubUsrStatusNotice::release_plat() {
  // @@protoc_insertion_point(field_release:XmsgChannelStatusPubUsrStatusNotice.plat)
  
  return plat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgChannelStatusPubUsrStatusNotice::set_allocated_plat(::std::string* plat) {
  if (plat != NULL) {
    
  } else {
    
  }
  plat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plat);
  // @@protoc_insertion_point(field_set_allocated:XmsgChannelStatusPubUsrStatusNotice.plat)
}

// string did = 3;
inline void XmsgChannelStatusPubUsrStatusNotice::clear_did() {
  did_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgChannelStatusPubUsrStatusNotice::did() const {
  // @@protoc_insertion_point(field_get:XmsgChannelStatusPubUsrStatusNotice.did)
  return did_.GetNoArena();
}
inline void XmsgChannelStatusPubUsrStatusNotice::set_did(const ::std::string& value) {
  
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgChannelStatusPubUsrStatusNotice.did)
}
#if LANG_CXX11
inline void XmsgChannelStatusPubUsrStatusNotice::set_did(::std::string&& value) {
  
  did_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgChannelStatusPubUsrStatusNotice.did)
}
#endif
inline void XmsgChannelStatusPubUsrStatusNotice::set_did(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgChannelStatusPubUsrStatusNotice.did)
}
inline void XmsgChannelStatusPubUsrStatusNotice::set_did(const char* value, size_t size) {
  
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgChannelStatusPubUsrStatusNotice.did)
}
inline ::std::string* XmsgChannelStatusPubUsrStatusNotice::mutable_did() {
  
  // @@protoc_insertion_point(field_mutable:XmsgChannelStatusPubUsrStatusNotice.did)
  return did_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgChannelStatusPubUsrStatusNotice::release_did() {
  // @@protoc_insertion_point(field_release:XmsgChannelStatusPubUsrStatusNotice.did)
  
  return did_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgChannelStatusPubUsrStatusNotice::set_allocated_did(::std::string* did) {
  if (did != NULL) {
    
  } else {
    
  }
  did_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), did);
  // @@protoc_insertion_point(field_set_allocated:XmsgChannelStatusPubUsrStatusNotice.did)
}

// string status = 4;
inline void XmsgChannelStatusPubUsrStatusNotice::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgChannelStatusPubUsrStatusNotice::status() const {
  // @@protoc_insertion_point(field_get:XmsgChannelStatusPubUsrStatusNotice.status)
  return status_.GetNoArena();
}
inline void XmsgChannelStatusPubUsrStatusNotice::set_status(const ::std::string& value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgChannelStatusPubUsrStatusNotice.status)
}
#if LANG_CXX11
inline void XmsgChannelStatusPubUsrStatusNotice::set_status(::std::string&& value) {
  
  status_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgChannelStatusPubUsrStatusNotice.status)
}
#endif
inline void XmsgChannelStatusPubUsrStatusNotice::set_status(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgChannelStatusPubUsrStatusNotice.status)
}
inline void XmsgChannelStatusPubUsrStatusNotice::set_status(const char* value, size_t size) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgChannelStatusPubUsrStatusNotice.status)
}
inline ::std::string* XmsgChannelStatusPubUsrStatusNotice::mutable_status() {
  
  // @@protoc_insertion_point(field_mutable:XmsgChannelStatusPubUsrStatusNotice.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgChannelStatusPubUsrStatusNotice::release_status() {
  // @@protoc_insertion_point(field_release:XmsgChannelStatusPubUsrStatusNotice.status)
  
  return status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgChannelStatusPubUsrStatusNotice::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    
  } else {
    
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:XmsgChannelStatusPubUsrStatusNotice.status)
}

// -------------------------------------------------------------------

// XmsgChannelStatusPubGroupStatusNotice

// string cgt = 1;
inline void XmsgChannelStatusPubGroupStatusNotice::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgChannelStatusPubGroupStatusNotice::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgChannelStatusPubGroupStatusNotice.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgChannelStatusPubGroupStatusNotice::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgChannelStatusPubGroupStatusNotice.cgt)
}
#if LANG_CXX11
inline void XmsgChannelStatusPubGroupStatusNotice::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgChannelStatusPubGroupStatusNotice.cgt)
}
#endif
inline void XmsgChannelStatusPubGroupStatusNotice::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgChannelStatusPubGroupStatusNotice.cgt)
}
inline void XmsgChannelStatusPubGroupStatusNotice::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgChannelStatusPubGroupStatusNotice.cgt)
}
inline ::std::string* XmsgChannelStatusPubGroupStatusNotice::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgChannelStatusPubGroupStatusNotice.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgChannelStatusPubGroupStatusNotice::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgChannelStatusPubGroupStatusNotice.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgChannelStatusPubGroupStatusNotice::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgChannelStatusPubGroupStatusNotice.cgt)
}

// string status = 2;
inline void XmsgChannelStatusPubGroupStatusNotice::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgChannelStatusPubGroupStatusNotice::status() const {
  // @@protoc_insertion_point(field_get:XmsgChannelStatusPubGroupStatusNotice.status)
  return status_.GetNoArena();
}
inline void XmsgChannelStatusPubGroupStatusNotice::set_status(const ::std::string& value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgChannelStatusPubGroupStatusNotice.status)
}
#if LANG_CXX11
inline void XmsgChannelStatusPubGroupStatusNotice::set_status(::std::string&& value) {
  
  status_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgChannelStatusPubGroupStatusNotice.status)
}
#endif
inline void XmsgChannelStatusPubGroupStatusNotice::set_status(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgChannelStatusPubGroupStatusNotice.status)
}
inline void XmsgChannelStatusPubGroupStatusNotice::set_status(const char* value, size_t size) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgChannelStatusPubGroupStatusNotice.status)
}
inline ::std::string* XmsgChannelStatusPubGroupStatusNotice::mutable_status() {
  
  // @@protoc_insertion_point(field_mutable:XmsgChannelStatusPubGroupStatusNotice.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgChannelStatusPubGroupStatusNotice::release_status() {
  // @@protoc_insertion_point(field_release:XmsgChannelStatusPubGroupStatusNotice.status)
  
  return status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgChannelStatusPubGroupStatusNotice::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    
  } else {
    
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:XmsgChannelStatusPubGroupStatusNotice.status)
}

// -------------------------------------------------------------------

// XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus

// string plat = 1;
inline void XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::clear_plat() {
  plat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::plat() const {
  // @@protoc_insertion_point(field_get:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus.plat)
  return plat_.GetNoArena();
}
inline void XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::set_plat(const ::std::string& value) {
  
  plat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus.plat)
}
#if LANG_CXX11
inline void XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::set_plat(::std::string&& value) {
  
  plat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus.plat)
}
#endif
inline void XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::set_plat(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  plat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus.plat)
}
inline void XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::set_plat(const char* value, size_t size) {
  
  plat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus.plat)
}
inline ::std::string* XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::mutable_plat() {
  
  // @@protoc_insertion_point(field_mutable:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus.plat)
  return plat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::release_plat() {
  // @@protoc_insertion_point(field_release:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus.plat)
  
  return plat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::set_allocated_plat(::std::string* plat) {
  if (plat != NULL) {
    
  } else {
    
  }
  plat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plat);
  // @@protoc_insertion_point(field_set_allocated:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus.plat)
}

// string did = 2;
inline void XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::clear_did() {
  did_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::did() const {
  // @@protoc_insertion_point(field_get:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus.did)
  return did_.GetNoArena();
}
inline void XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::set_did(const ::std::string& value) {
  
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus.did)
}
#if LANG_CXX11
inline void XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::set_did(::std::string&& value) {
  
  did_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus.did)
}
#endif
inline void XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::set_did(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus.did)
}
inline void XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::set_did(const char* value, size_t size) {
  
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus.did)
}
inline ::std::string* XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::mutable_did() {
  
  // @@protoc_insertion_point(field_mutable:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus.did)
  return did_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::release_did() {
  // @@protoc_insertion_point(field_release:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus.did)
  
  return did_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::set_allocated_did(::std::string* did) {
  if (did != NULL) {
    
  } else {
    
  }
  did_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), did);
  // @@protoc_insertion_point(field_set_allocated:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus.did)
}

// string status = 3;
inline void XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::status() const {
  // @@protoc_insertion_point(field_get:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus.status)
  return status_.GetNoArena();
}
inline void XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::set_status(const ::std::string& value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus.status)
}
#if LANG_CXX11
inline void XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::set_status(::std::string&& value) {
  
  status_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus.status)
}
#endif
inline void XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::set_status(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus.status)
}
inline void XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::set_status(const char* value, size_t size) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus.status)
}
inline ::std::string* XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::mutable_status() {
  
  // @@protoc_insertion_point(field_mutable:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::release_status() {
  // @@protoc_insertion_point(field_release:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus.status)
  
  return status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    
  } else {
    
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus.status)
}

// -------------------------------------------------------------------

// XmsgChannelStatusUsrStatus

// repeated .XmsgChannelStatusUsrStatus.XmsgChannelStatusUsrClientStatus client = 2;
inline int XmsgChannelStatusUsrStatus::client_size() const {
  return client_.size();
}
inline void XmsgChannelStatusUsrStatus::clear_client() {
  client_.Clear();
}
inline const ::XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus& XmsgChannelStatusUsrStatus::client(int index) const {
  // @@protoc_insertion_point(field_get:XmsgChannelStatusUsrStatus.client)
  return client_.Get(index);
}
inline ::XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus* XmsgChannelStatusUsrStatus::mutable_client(int index) {
  // @@protoc_insertion_point(field_mutable:XmsgChannelStatusUsrStatus.client)
  return client_.Mutable(index);
}
inline ::XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus* XmsgChannelStatusUsrStatus::add_client() {
  // @@protoc_insertion_point(field_add:XmsgChannelStatusUsrStatus.client)
  return client_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus >*
XmsgChannelStatusUsrStatus::mutable_client() {
  // @@protoc_insertion_point(field_mutable_list:XmsgChannelStatusUsrStatus.client)
  return &client_;
}
inline const ::google::protobuf::RepeatedPtrField< ::XmsgChannelStatusUsrStatus_XmsgChannelStatusUsrClientStatus >&
XmsgChannelStatusUsrStatus::client() const {
  // @@protoc_insertion_point(field_list:XmsgChannelStatusUsrStatus.client)
  return client_;
}

// -------------------------------------------------------------------

// XmsgChannelStatusGroupStatus

// string status = 1;
inline void XmsgChannelStatusGroupStatus::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgChannelStatusGroupStatus::status() const {
  // @@protoc_insertion_point(field_get:XmsgChannelStatusGroupStatus.status)
  return status_.GetNoArena();
}
inline void XmsgChannelStatusGroupStatus::set_status(const ::std::string& value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgChannelStatusGroupStatus.status)
}
#if LANG_CXX11
inline void XmsgChannelStatusGroupStatus::set_status(::std::string&& value) {
  
  status_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgChannelStatusGroupStatus.status)
}
#endif
inline void XmsgChannelStatusGroupStatus::set_status(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgChannelStatusGroupStatus.status)
}
inline void XmsgChannelStatusGroupStatus::set_status(const char* value, size_t size) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgChannelStatusGroupStatus.status)
}
inline ::std::string* XmsgChannelStatusGroupStatus::mutable_status() {
  
  // @@protoc_insertion_point(field_mutable:XmsgChannelStatusGroupStatus.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgChannelStatusGroupStatus::release_status() {
  // @@protoc_insertion_point(field_release:XmsgChannelStatusGroupStatus.status)
  
  return status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgChannelStatusGroupStatus::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    
  } else {
    
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:XmsgChannelStatusGroupStatus.status)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2dx_2dmsg_2dchannel_2dstatus_2eproto__INCLUDED
